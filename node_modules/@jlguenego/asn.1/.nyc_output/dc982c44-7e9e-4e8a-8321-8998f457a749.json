{"D:\\formation\\asn.1\\src\\index.ts":{"path":"D:\\formation\\asn.1\\src\\index.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":126}},"13":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"14":{"start":{"line":14,"column":95},"end":{"line":14,"column":126}},"15":{"start":{"line":16,"column":0},"end":{"line":16,"column":62}},"16":{"start":{"line":17,"column":0},"end":{"line":17,"column":41}},"17":{"start":{"line":18,"column":0},"end":{"line":18,"column":49}},"18":{"start":{"line":19,"column":0},"end":{"line":19,"column":49}},"19":{"start":{"line":20,"column":0},"end":{"line":20,"column":59}},"20":{"start":{"line":21,"column":0},"end":{"line":21,"column":41}},"21":{"start":{"line":22,"column":0},"end":{"line":22,"column":55}},"22":{"start":{"line":23,"column":0},"end":{"line":23,"column":57}},"23":{"start":{"line":24,"column":0},"end":{"line":24,"column":59}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":52}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":65}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":50},"end":{"line":13,"column":51}},"loc":{"start":{"line":13,"column":71},"end":{"line":15,"column":1}},"line":13}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":19},"end":{"line":15,"column":1}},"type":"binary-expr","locations":[{"start":{"line":13,"column":20},"end":{"line":13,"column":24}},{"start":{"line":13,"column":28},"end":{"line":13,"column":45}},{"start":{"line":13,"column":50},"end":{"line":15,"column":1}}],"line":13},"9":{"loc":{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},"type":"if","locations":[{"start":{"line":14,"column":21},"end":{"line":14,"column":126}},{"start":{"line":14,"column":21},"end":{"line":14,"column":126}}],"line":14},"10":{"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":93}},"type":"binary-expr","locations":[{"start":{"line":14,"column":25},"end":{"line":14,"column":40}},{"start":{"line":14,"column":44},"end":{"line":14,"column":93}}],"line":14}},"s":{"0":1,"1":36,"2":36,"3":36,"4":36,"5":36,"6":23,"7":36,"8":0,"9":0,"10":0,"11":1,"12":10,"13":36,"14":36,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1},"f":{"0":36,"1":23,"2":0,"3":10},"b":{"0":[1,1,1],"1":[1,0],"2":[36,0],"3":[36,0],"4":[36,36],"5":[0,36],"6":[36,0],"7":[0,0],"8":[1,1,1],"9":[36,0],"10":[36,36]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/index.ts","sources":["D:/formation/asn.1/src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,yCAAuB;AACvB,iDAA+B;AAC/B,iDAA+B;AAC/B,2DAAyC;AACzC,yCAAuB;AACvB,uDAAqC;AACrC,yDAAuC;AACvC,2DAAyC;AACzC,oDAAkC;AAClC,iEAA+C","sourcesContent":["export * from './ASN1';\nexport * from './ASN1MsgUtils';\nexport * from './EncodingRule';\nexport * from './interfaces/ASN1Message';\nexport * from './misc';\nexport * from './analysis/ASN1Lexer';\nexport * from './analysis/ASN1Visitor';\nexport * from './analysis/ASN1CstParser';\nexport * from './asn1/ASN1Module';\nexport * from './codec/der/encoder/DEREncoder';\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"02eb52db5b027c1542b4b2fe2e25555009a6f5a7","contentHash":"f400e254d3ea73d21a3713ee506ccd32789ed6004afd2c721b1ad5818e5ee0ef"},"D:\\formation\\asn.1\\src\\ASN1.ts":{"path":"D:\\formation\\asn.1\\src\\ASN1.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":22}},"2":{"start":{"line":4,"column":28},"end":{"line":4,"column":63}},"3":{"start":{"line":5,"column":24},"end":{"line":5,"column":50}},"4":{"start":{"line":6,"column":24},"end":{"line":6,"column":50}},"5":{"start":{"line":7,"column":21},"end":{"line":7,"column":62}},"6":{"start":{"line":8,"column":21},"end":{"line":8,"column":62}},"7":{"start":{"line":9,"column":23},"end":{"line":9,"column":48}},"8":{"start":{"line":10,"column":28},"end":{"line":10,"column":69}},"9":{"start":{"line":11,"column":15},"end":{"line":11,"column":32}},"10":{"start":{"line":14,"column":24},"end":{"line":18,"column":9}},"11":{"start":{"line":20,"column":8},"end":{"line":25,"column":9}},"12":{"start":{"line":21,"column":12},"end":{"line":21,"column":79}},"13":{"start":{"line":24,"column":12},"end":{"line":24,"column":28}},"14":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"15":{"start":{"line":27,"column":12},"end":{"line":27,"column":54}},"16":{"start":{"line":29,"column":8},"end":{"line":29,"column":86}},"17":{"start":{"line":32,"column":8},"end":{"line":32,"column":73}},"18":{"start":{"line":35,"column":8},"end":{"line":38,"column":9}},"19":{"start":{"line":37,"column":12},"end":{"line":37,"column":80}},"20":{"start":{"line":39,"column":8},"end":{"line":39,"column":88}},"21":{"start":{"line":42,"column":24},"end":{"line":46,"column":9}},"22":{"start":{"line":47,"column":26},"end":{"line":47,"column":73}},"23":{"start":{"line":48,"column":28},"end":{"line":48,"column":60}},"24":{"start":{"line":49,"column":8},"end":{"line":49,"column":62}},"25":{"start":{"line":52,"column":20},"end":{"line":52,"column":55}},"26":{"start":{"line":53,"column":26},"end":{"line":53,"column":67}},"27":{"start":{"line":54,"column":8},"end":{"line":54,"column":38}},"28":{"start":{"line":55,"column":8},"end":{"line":55,"column":19}},"29":{"start":{"line":58,"column":0},"end":{"line":58,"column":20}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":38},"end":{"line":30,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":40},"end":{"line":33,"column":5}},"line":31},"2":{"name":"(anonymous_2)","decl":{"start":{"line":34,"column":4},"end":{"line":34,"column":5}},"loc":{"start":{"line":34,"column":79},"end":{"line":40,"column":5}},"line":34},"3":{"name":"(anonymous_3)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":51},"end":{"line":50,"column":5}},"line":41},"4":{"name":"(anonymous_4)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":43},"end":{"line":56,"column":5}},"line":51}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":27},"end":{"line":13,"column":36}},"type":"default-arg","locations":[{"start":{"line":13,"column":34},"end":{"line":13,"column":36}}],"line":13},"1":{"loc":{"start":{"line":20,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":25,"column":9}},{"start":{"line":20,"column":8},"end":{"line":25,"column":9}}],"line":20},"2":{"loc":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},{"start":{"line":26,"column":8},"end":{"line":28,"column":9}}],"line":26},"3":{"loc":{"start":{"line":34,"column":31},"end":{"line":34,"column":77}},"type":"default-arg","locations":[{"start":{"line":34,"column":46},"end":{"line":34,"column":77}}],"line":34},"4":{"loc":{"start":{"line":35,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":38,"column":9}},{"start":{"line":35,"column":8},"end":{"line":38,"column":9}}],"line":35},"5":{"loc":{"start":{"line":35,"column":12},"end":{"line":36,"column":60}},"type":"binary-expr","locations":[{"start":{"line":35,"column":12},"end":{"line":35,"column":60}},{"start":{"line":36,"column":12},"end":{"line":36,"column":60}}],"line":35},"6":{"loc":{"start":{"line":41,"column":40},"end":{"line":41,"column":49}},"type":"default-arg","locations":[{"start":{"line":41,"column":47},"end":{"line":41,"column":49}}],"line":41}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":4,"11":4,"12":4,"13":0,"14":4,"15":4,"16":0,"17":5,"18":1,"19":1,"20":0,"21":1,"22":1,"23":1,"24":1,"25":3,"26":3,"27":3,"28":3,"29":1},"f":{"0":4,"1":5,"2":1,"3":1,"4":3},"b":{"0":[0],"1":[4,0],"2":[4,0],"3":[0],"4":[1,0],"5":[1,0],"6":[0]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/ASN1.ts","sources":["D:/formation/asn.1/src/ASN1.ts"],"names":[],"mappings":";;;AACA,gEAA2D;AAC3D,mDAA8C;AAC9C,mDAA8C;AAC9C,+DAAyD;AACzD,+DAAyD;AACzD,iDAA4C;AAI5C,sEAAiE;AAEjE,iCAA6C;AAE7C,MAAa,IAAI;IACf,MAAM,CAAC,MAAM,CACX,OAA6B,EAC7B,OAAmC,EAAE;QAErC,MAAM,OAAO,GAAsB;YACjC,MAAM,EAAE,qCAAiB,CAAC,GAAG;YAC7B,YAAY,EAAE,2BAAY,CAAC,GAAG;YAC9B,GAAG,IAAI;SACa,CAAC;QAEvB,IAAI,KAAkB,CAAC;QACvB,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;YAC/B,KAAK,GAAG,IAAA,4BAAqB,EAAC,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;SACxD;aAAM;YACL,KAAK,GAAG,OAAO,CAAC;SACjB;QAED,IACE,CAAC,2BAAY,CAAC,GAAG,EAAE,2BAAY,CAAC,GAAG,EAAE,2BAAY,CAAC,GAAG,CAAC,CAAC,QAAQ,CAC7D,OAAO,CAAC,YAAY,CACrB,EACD;YACA,OAAO,IAAA,sBAAS,EAAC,KAAK,CAAC,CAAC;SACzB;QACD,MAAM,IAAI,KAAK,CACb,qCAAqC,GAAG,OAAO,CAAC,YAAY,CAC7D,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,gBAAgB,CAAC,UAAkB;QACxC,OAAO,qCAAiB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC/C,CAAC;IAED,MAAM,CAAC,MAAM,CACX,WAAwB,EACxB,YAAY,GAAG,2BAAY,CAAC,GAAG;QAE/B,IACE,YAAY,KAAK,2BAAY,CAAC,GAAG;YACjC,YAAY,KAAK,2BAAY,CAAC,GAAG,EACjC;YACA,OAAO,MAAM,CAAC,IAAI,CAAC,IAAA,sBAAS,EAAC,WAAW,CAAC,EAAE,KAAK,CAAC,CAAC;SACnD;QACD,MAAM,IAAI,KAAK,CACb,+CAA+C,GAAG,YAAY,CAC/D,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,QAAQ,CACb,MAAkB,EAClB,IAAY,EACZ,IAAW,EACX,OAAsC,EAAE;QAExC,MAAM,OAAO,GAAG;YACd,YAAY,EAAE,2BAAY,CAAC,GAAG;YAC9B,WAAW,EAAE,MAAM;YACnB,GAAG,IAAI;SACR,CAAC;QACF,MAAM,SAAS,GAAG,IAAI,6BAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAClD,MAAM,WAAW,GAAG,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;IACxD,CAAC;IAED,MAAM,CAAC,QAAQ,CACb,MAAkB,EAClB,OAAoB,EACpB,IAAY;QAEZ,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAgB,CAAC;QAC/D,MAAM,SAAS,GAAG,IAAI,6BAAa,CAAC,MAAM,CAAC,CAAC;QAC5C,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC9B,OAAO,GAAG,CAAC;IACb,CAAC;CACF;AA3ED,oBA2EC","sourcesContent":["import {ASN1Module} from './asn1/ASN1Module';\nimport {ASN1ModuleFactory} from './asn1/ASN1ModuleFactory';\nimport {ASN1Generator} from './ASN1Generator';\nimport {ASN1Validator} from './ASN1Validator';\nimport {BERDecode} from './codec/ber/decoder/BERDecoder';\nimport {DEREncode} from './codec/der/encoder/DEREncoder';\nimport {EncodingRule} from './EncodingRule';\nimport {ASN1ParserOptions} from './interfaces';\nimport {ASN1GeneratorOptions} from './interfaces/ASN1GeneratorOptions';\nimport {ASN1Message} from './interfaces/ASN1Message';\nimport {ASN1MessageFormat} from './interfaces/ASN1MessageFormat';\nimport {Props} from './interfaces/Props';\nimport {getArrayBufferFromStr} from './misc';\n\nexport class ASN1 {\n  static decode(\n    message: string | ArrayBuffer,\n    opts: Partial<ASN1ParserOptions> = {}\n  ) {\n    const options: ASN1ParserOptions = {\n      format: ASN1MessageFormat.HEX,\n      encodingRule: EncodingRule.DER,\n      ...opts,\n    } as ASN1ParserOptions;\n\n    let input: ArrayBuffer;\n    if (typeof message === 'string') {\n      input = getArrayBufferFromStr(message, options.format);\n    } else {\n      input = message;\n    }\n\n    if (\n      [EncodingRule.BER, EncodingRule.CER, EncodingRule.DER].includes(\n        options.encodingRule\n      )\n    ) {\n      return BERDecode(input);\n    }\n    throw new Error(\n      'Encoding rule not yet implemented: ' + options.encodingRule\n    );\n  }\n\n  static getModuleFromStr(definition: string): ASN1Module {\n    return ASN1ModuleFactory.compile(definition);\n  }\n\n  static encode(\n    asn1Message: ASN1Message,\n    encodingRule = EncodingRule.DER\n  ): Buffer {\n    if (\n      encodingRule === EncodingRule.DER ||\n      encodingRule === EncodingRule.BER\n    ) {\n      return Buffer.from(DEREncode(asn1Message), 'hex');\n    }\n    throw new Error(\n      'generate: encoding rule not yet implemented: ' + encodingRule\n    );\n  }\n\n  static generate(\n    module: ASN1Module,\n    type: string,\n    data: Props,\n    opts: Partial<ASN1GeneratorOptions> = {}\n  ): Buffer {\n    const options = {\n      encodingRule: EncodingRule.DER,\n      inputFormat: 'json',\n      ...opts,\n    };\n    const generator = new ASN1Generator(module, type);\n    const asn1Message = generator.generateFromJson(data);\n    return ASN1.encode(asn1Message, options.encodingRule);\n  }\n\n  static validate(\n    module: ASN1Module,\n    message: ASN1Message,\n    type: string\n  ): ASN1Message {\n    const msg = JSON.parse(JSON.stringify(message)) as ASN1Message;\n    const validator = new ASN1Validator(module);\n    validator.validate(msg, type);\n    return msg;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"19fdab0aeed3bce751787939ab0ccc58af0e9b5a","contentHash":"1756ba12c322fa3ac61f7cb3aa2558d32ba636ffc44bd2e7523f3fdc689192d7"},"D:\\formation\\asn.1\\src\\asn1\\ASN1ModuleFactory.ts":{"path":"D:\\formation\\asn.1\\src\\asn1\\ASN1ModuleFactory.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":60}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":52}},"4":{"start":{"line":6,"column":22},"end":{"line":6,"column":56}},"5":{"start":{"line":9,"column":23},"end":{"line":9,"column":65}},"6":{"start":{"line":10,"column":31},"end":{"line":10,"column":66}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":45}},"8":{"start":{"line":12,"column":26},"end":{"line":12,"column":59}},"9":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"10":{"start":{"line":14,"column":12},"end":{"line":14,"column":78}},"11":{"start":{"line":16,"column":37},"end":{"line":16,"column":68}},"12":{"start":{"line":17,"column":20},"end":{"line":17,"column":57}},"13":{"start":{"line":18,"column":8},"end":{"line":18,"column":19}},"14":{"start":{"line":21,"column":0},"end":{"line":21,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":31},"end":{"line":19,"column":5}},"line":8}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},{"start":{"line":13,"column":8},"end":{"line":15,"column":9}}],"line":13}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":5,"6":5,"7":5,"8":5,"9":5,"10":0,"11":5,"12":5,"13":5,"14":1},"f":{"0":5},"b":{"0":[0,5]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/asn1/ASN1ModuleFactory.ts","sources":["D:/formation/asn.1/src/asn1/ASN1ModuleFactory.ts"],"names":[],"mappings":";;;AAAA,6DAAwD;AACxD,qDAAgD;AAChD,yDAAoD;AAGpD,MAAa,iBAAiB;IAC5B,MAAM,CAAC,OAAO,CAAC,UAAkB;QAC/B,MAAM,MAAM,GAAG,qBAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC9C,MAAM,cAAc,GAAG,IAAI,6BAAa,EAAE,CAAC;QAC3C,cAAc,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;QACrC,MAAM,SAAS,GAAG,cAAc,CAAC,gBAAgB,EAAE,CAAC;QACpD,IAAI,cAAc,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACpC,MAAM,KAAK,CAAC,iBAAiB,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;SACnE;QACD,MAAM,oBAAoB,GAAG,IAAI,yBAAW,EAAE,CAAC;QAC/C,MAAM,GAAG,GAAG,oBAAoB,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAClD,OAAO,GAAG,CAAC;IACb,CAAC;CACF;AAbD,8CAaC","sourcesContent":["import {ASN1CstParser} from '../analysis/ASN1CstParser';\nimport {ASN1Lexer} from '../analysis/ASN1Lexer';\nimport {ASN1Visitor} from '../analysis/ASN1Visitor';\nimport {ASN1Module} from './ASN1Module';\n\nexport class ASN1ModuleFactory {\n  static compile(definition: string): ASN1Module {\n    const output = ASN1Lexer.tokenize(definition);\n    const parserInstance = new ASN1CstParser();\n    parserInstance.input = output.tokens;\n    const cstOutput = parserInstance.ModuleDefinition();\n    if (parserInstance.errors.length > 0) {\n      throw Error('Syntax error:\\n' + parserInstance.errors[0].message);\n    }\n    const toAstVisitorInstance = new ASN1Visitor();\n    const ast = toAstVisitorInstance.visit(cstOutput);\n    return ast;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"df78bc9baee2a5d657abe608cafb8d2ebf3f75ce","contentHash":"803ea69724d2e0f9a5f53a2361d1447c640b44a29ed94e85993d5336615e77e5"},"D:\\formation\\asn.1\\src\\analysis\\ASN1CstParser.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\ASN1CstParser.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":20},"end":{"line":5,"column":42}},"4":{"start":{"line":6,"column":22},"end":{"line":6,"column":52}},"5":{"start":{"line":7,"column":27},"end":{"line":7,"column":63}},"6":{"start":{"line":8,"column":28},"end":{"line":8,"column":65}},"7":{"start":{"line":9,"column":26},"end":{"line":9,"column":61}},"8":{"start":{"line":10,"column":31},"end":{"line":10,"column":71}},"9":{"start":{"line":11,"column":23},"end":{"line":11,"column":55}},"10":{"start":{"line":12,"column":27},"end":{"line":12,"column":63}},"11":{"start":{"line":13,"column":32},"end":{"line":13,"column":73}},"12":{"start":{"line":14,"column":37},"end":{"line":14,"column":83}},"13":{"start":{"line":15,"column":30},"end":{"line":15,"column":69}},"14":{"start":{"line":16,"column":30},"end":{"line":16,"column":69}},"15":{"start":{"line":17,"column":28},"end":{"line":17,"column":65}},"16":{"start":{"line":18,"column":30},"end":{"line":18,"column":69}},"17":{"start":{"line":19,"column":26},"end":{"line":19,"column":61}},"18":{"start":{"line":20,"column":20},"end":{"line":20,"column":49}},"19":{"start":{"line":23,"column":22},"end":{"line":27,"column":11}},"20":{"start":{"line":23,"column":41},"end":{"line":27,"column":9}},"21":{"start":{"line":25,"column":16},"end":{"line":25,"column":41}},"22":{"start":{"line":28,"column":8},"end":{"line":28,"column":23}},"23":{"start":{"line":31,"column":22},"end":{"line":35,"column":11}},"24":{"start":{"line":31,"column":39},"end":{"line":35,"column":9}},"25":{"start":{"line":33,"column":16},"end":{"line":33,"column":32}},"26":{"start":{"line":36,"column":8},"end":{"line":36,"column":23}},"27":{"start":{"line":39,"column":8},"end":{"line":39,"column":41}},"28":{"start":{"line":40,"column":8},"end":{"line":49,"column":11}},"29":{"start":{"line":41,"column":12},"end":{"line":41,"column":48}},"30":{"start":{"line":42,"column":12},"end":{"line":42,"column":54}},"31":{"start":{"line":43,"column":12},"end":{"line":43,"column":42}},"32":{"start":{"line":44,"column":12},"end":{"line":44,"column":48}},"33":{"start":{"line":45,"column":12},"end":{"line":45,"column":50}},"34":{"start":{"line":46,"column":12},"end":{"line":46,"column":48}},"35":{"start":{"line":47,"column":12},"end":{"line":47,"column":42}},"36":{"start":{"line":48,"column":12},"end":{"line":48,"column":46}},"37":{"start":{"line":50,"column":8},"end":{"line":55,"column":11}},"38":{"start":{"line":51,"column":12},"end":{"line":54,"column":15}},"39":{"start":{"line":52,"column":16},"end":{"line":52,"column":117}},"40":{"start":{"line":53,"column":16},"end":{"line":53,"column":51}},"41":{"start":{"line":56,"column":8},"end":{"line":61,"column":11}},"42":{"start":{"line":57,"column":12},"end":{"line":60,"column":15}},"43":{"start":{"line":58,"column":16},"end":{"line":58,"column":60}},"44":{"start":{"line":59,"column":16},"end":{"line":59,"column":54}},"45":{"start":{"line":62,"column":8},"end":{"line":65,"column":11}},"46":{"start":{"line":63,"column":12},"end":{"line":63,"column":39}},"47":{"start":{"line":64,"column":12},"end":{"line":64,"column":46}},"48":{"start":{"line":66,"column":8},"end":{"line":70,"column":11}},"49":{"start":{"line":67,"column":12},"end":{"line":69,"column":15}},"50":{"start":{"line":68,"column":16},"end":{"line":68,"column":46}},"51":{"start":{"line":71,"column":8},"end":{"line":73,"column":11}},"52":{"start":{"line":72,"column":12},"end":{"line":72,"column":66}},"53":{"start":{"line":74,"column":8},"end":{"line":74,"column":69}},"54":{"start":{"line":75,"column":8},"end":{"line":75,"column":61}},"55":{"start":{"line":76,"column":8},"end":{"line":76,"column":59}},"56":{"start":{"line":77,"column":8},"end":{"line":77,"column":67}},"57":{"start":{"line":78,"column":8},"end":{"line":78,"column":59}},"58":{"start":{"line":79,"column":8},"end":{"line":79,"column":79}},"59":{"start":{"line":80,"column":8},"end":{"line":80,"column":61}},"60":{"start":{"line":81,"column":8},"end":{"line":81,"column":65}},"61":{"start":{"line":82,"column":8},"end":{"line":82,"column":45}},"62":{"start":{"line":83,"column":8},"end":{"line":83,"column":65}},"63":{"start":{"line":84,"column":8},"end":{"line":84,"column":57}},"64":{"start":{"line":85,"column":8},"end":{"line":85,"column":65}},"65":{"start":{"line":86,"column":8},"end":{"line":86,"column":57}},"66":{"start":{"line":87,"column":8},"end":{"line":87,"column":51}},"67":{"start":{"line":88,"column":8},"end":{"line":88,"column":35}},"68":{"start":{"line":91,"column":0},"end":{"line":91,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":21},"end":{"line":29,"column":5}},"line":22},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":32},"end":{"line":23,"column":33}},"loc":{"start":{"line":23,"column":41},"end":{"line":27,"column":9}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":17},"end":{"line":24,"column":18}},"loc":{"start":{"line":24,"column":23},"end":{"line":26,"column":13}},"line":24},"3":{"name":"(anonymous_3)","decl":{"start":{"line":30,"column":4},"end":{"line":30,"column":5}},"loc":{"start":{"line":30,"column":27},"end":{"line":37,"column":5}},"line":30},"4":{"name":"(anonymous_4)","decl":{"start":{"line":31,"column":33},"end":{"line":31,"column":34}},"loc":{"start":{"line":31,"column":39},"end":{"line":35,"column":9}},"line":31},"5":{"name":"(anonymous_5)","decl":{"start":{"line":32,"column":17},"end":{"line":32,"column":18}},"loc":{"start":{"line":32,"column":23},"end":{"line":34,"column":13}},"line":32},"6":{"name":"(anonymous_6)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":18},"end":{"line":89,"column":5}},"line":38},"7":{"name":"(anonymous_7)","decl":{"start":{"line":40,"column":38},"end":{"line":40,"column":39}},"loc":{"start":{"line":40,"column":44},"end":{"line":49,"column":9}},"line":40},"8":{"name":"(anonymous_8)","decl":{"start":{"line":50,"column":32},"end":{"line":50,"column":33}},"loc":{"start":{"line":50,"column":38},"end":{"line":55,"column":9}},"line":50},"9":{"name":"(anonymous_9)","decl":{"start":{"line":51,"column":24},"end":{"line":51,"column":25}},"loc":{"start":{"line":51,"column":30},"end":{"line":54,"column":13}},"line":51},"10":{"name":"(anonymous_10)","decl":{"start":{"line":56,"column":38},"end":{"line":56,"column":39}},"loc":{"start":{"line":56,"column":44},"end":{"line":61,"column":9}},"line":56},"11":{"name":"(anonymous_11)","decl":{"start":{"line":57,"column":24},"end":{"line":57,"column":25}},"loc":{"start":{"line":57,"column":30},"end":{"line":60,"column":13}},"line":57},"12":{"name":"(anonymous_12)","decl":{"start":{"line":62,"column":32},"end":{"line":62,"column":33}},"loc":{"start":{"line":62,"column":38},"end":{"line":65,"column":9}},"line":62},"13":{"name":"(anonymous_13)","decl":{"start":{"line":66,"column":36},"end":{"line":66,"column":37}},"loc":{"start":{"line":66,"column":42},"end":{"line":70,"column":9}},"line":66},"14":{"name":"(anonymous_14)","decl":{"start":{"line":67,"column":22},"end":{"line":67,"column":23}},"loc":{"start":{"line":67,"column":28},"end":{"line":69,"column":13}},"line":67},"15":{"name":"(anonymous_15)","decl":{"start":{"line":71,"column":32},"end":{"line":71,"column":33}},"loc":{"start":{"line":71,"column":38},"end":{"line":73,"column":9}},"line":71}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":2076,"20":8746,"21":2216,"22":2076,"23":182,"24":500,"25":273,"26":182,"27":7,"28":7,"29":13,"30":13,"31":13,"32":13,"33":13,"34":13,"35":13,"36":13,"37":7,"38":13,"39":10,"40":10,"41":7,"42":13,"43":8,"44":8,"45":7,"46":13,"47":13,"48":7,"49":13,"50":133,"51":7,"52":133,"53":7,"54":7,"55":7,"56":7,"57":7,"58":7,"59":7,"60":7,"61":7,"62":7,"63":7,"64":7,"65":7,"66":7,"67":7,"68":1},"f":{"0":2076,"1":8746,"2":2216,"3":182,"4":500,"5":273,"6":7,"7":13,"8":13,"9":10,"10":13,"11":8,"12":13,"13":13,"14":133,"15":133},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/ASN1CstParser.ts","sources":["D:/formation/asn.1/src/analysis/ASN1CstParser.ts"],"names":[],"mappings":"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","sourcesContent":["import {CstNode, CstParser, TokenType} from 'chevrotain';\nimport {Rule} from '../interfaces/Rule';\n\nimport {AFFECTATION, allASN1Tokens} from './ASN1Lexer';\nimport {k} from './lexer/ASN1Keyword';\nimport {initBuiltinTypeRules} from './parser/BuiltinTypeRules';\nimport {initBuiltinValueRules} from './parser/BuiltinValueRules';\nimport {initChoiceTypeRules} from './parser/ChoiceTypeRules';\nimport {initConstrainedTypeRules} from './parser/ConstrainedTypeRules';\nimport {initImportsRules} from './parser/ImportsRules';\nimport {initIntegerTypeRules} from './parser/IntegerTypeRules';\nimport {initModuleIdentifierRules} from './parser/ModuleIdentifierRules';\nimport {initObjectIdentifierValueRules} from './parser/ObjectIdentifierValueRules';\nimport {initReferencedTypeRules} from './parser/ReferencedTypeRules';\nimport {initSequenceOfTypeRules} from './parser/SequenceOfTypeRules';\nimport {initSequenceTypeRules} from './parser/SequenceTypeRules';\nimport {initSizeConstraintRules} from './parser/SizeConstraintRules';\nimport {initTaggedTypeRules} from './parser/TaggedTypeRules';\nimport {initTypeRules} from './parser/TypeRules';\n\nexport class ASN1CstParser extends CstParser {\n  public ModuleDefinition!: Rule;\n\n  public ModuleIdentifier!: () => CstNode;\n  public DefinitiveIdentification!: () => CstNode;\n  public DefinitiveOID!: () => CstNode;\n  public DefinitiveObjIdComponentList!: () => CstNode;\n  public DefinitiveObjIdComponent!: () => CstNode;\n  public DefinitiveNumberForm!: () => CstNode;\n  public DefinitiveNameAndNumberForm!: () => CstNode;\n\n  public TagDefault!: Rule;\n  public ExtensionDefault!: Rule;\n  public ModuleBody!: Rule;\n\n  public Imports!: Rule;\n  public SymbolsImported!: Rule;\n  public SymbolsFromModuleList!: Rule;\n  public SymbolsFromModule!: Rule;\n  public SymbolList!: Rule;\n  public Symbol!: Rule;\n  public Reference!: Rule;\n  public ParameterizedReference!: Rule;\n\n  public GlobalModuleReference!: Rule;\n  public AssignedIdentifier!: Rule;\n\n  public AssignmentList!: Rule;\n  public Assignment!: Rule;\n  public TypeAssignment!: Rule;\n  public ValueAssignment!: Rule;\n  public ValueReference!: Rule;\n  public Value!: Rule;\n  public BuiltinValue!: Rule;\n  public BooleanValue!: Rule;\n  public IntegerValue!: Rule;\n  public ObjectIdentifierValue!: Rule;\n  public ObjIdComponentsList!: Rule;\n  public ObjIdComponents!: Rule;\n  public NameAndNumberForm!: Rule;\n  public NumberForm!: Rule;\n\n  public Type!: Rule;\n  public ConstrainedType!: Rule;\n  public ReferencedType!: Rule;\n\n  public DefinedType!: Rule;\n  public UsefulType!: Rule;\n\n  public TaggedType!: Rule;\n  public Tag!: Rule;\n  public Class!: Rule;\n  public ClassNumber!: Rule;\n\n  public BuiltinType!: Rule;\n  public PrefixedType!: Rule;\n\n  public ChoiceType!: Rule;\n  public AlternativeTypeLists!: Rule;\n  public RootAlternativeTypeList!: Rule;\n  public AlternativeTypeList!: Rule;\n  public AlternativeType!: Rule;\n\n  public Constraint!: Rule;\n  public TypeWithConstraint!: Rule;\n  public ConstraintSpec!: Rule;\n  public ExceptionSpec!: Rule;\n  public SubtypeConstraint!: Rule;\n  public ElementSetSpecs!: Rule;\n  public RootElementSetSpec!: Rule;\n  public ElementSetSpec!: Rule;\n  public Unions!: Rule;\n  public Intersections!: Rule;\n  public UnionMark!: Rule;\n  public Elements!: Rule;\n  public SubtypeElements!: Rule;\n  public SingleValue!: Rule;\n\n  public ContainedSubType!: Rule;\n  public GeneralConstraint!: Rule;\n  public ValueRange!: Rule;\n  public LowerEndpoint!: Rule;\n  public UpperEndpoint!: Rule;\n  public LowerEndValue!: Rule;\n  public UpperEndValue!: Rule;\n\n  public BitStringType!: Rule;\n  public BooleanType!: Rule;\n  public OctetStringType!: Rule;\n\n  public SequenceType!: Rule;\n  public SequenceOfType!: Rule;\n\n  public IntegerType!: Rule;\n  public NamedNumberList!: Rule;\n  public NamedNumber!: Rule;\n  public SignedNumber!: Rule;\n  public DefinedValue!: Rule;\n\n  public ObjectIdentifierType!: Rule;\n  public CharacterStringType!: Rule;\n  public RestrictedCharacterStringType!: Rule;\n  public ComponentTypeLists!: Rule;\n  public ComponentTypeList!: Rule;\n  public ComponentType!: Rule;\n  public NamedType!: Rule;\n\n  public SizeConstraint!: Rule;\n\n  addOrList(names: (keyof ASN1CstParser)[]) {\n    const array = names.map(name => ({\n      ALT: () => {\n        this.SUBRULE(this[name] as (idx: number) => CstNode);\n      },\n    }));\n    this.OR(array);\n  }\n\n  addOrTokenList(tokens: TokenType[]) {\n    const array = tokens.map(t => ({\n      ALT: () => {\n        this.CONSUME(t);\n      },\n    }));\n    this.OR(array);\n  }\n\n  constructor() {\n    super(allASN1Tokens);\n\n    this.RULE('ModuleDefinition', () => {\n      this.SUBRULE(this.ModuleIdentifier);\n      this.CONSUME(k.DEFINITIONS);\n      this.SUBRULE(this.TagDefault);\n      this.SUBRULE(this.ExtensionDefault);\n      this.CONSUME(AFFECTATION);\n      this.CONSUME(k.BEGIN);\n      this.SUBRULE(this.ModuleBody);\n      this.CONSUME(k.END);\n    });\n\n    this.RULE('TagDefault', () => {\n      this.OPTION(() => {\n        this.addOrTokenList([k.EXPLICIT, k.IMPLICIT, k.AUTOMATIC]);\n        this.CONSUME(k.TAGS);\n      });\n    });\n\n    this.RULE('ExtensionDefault', () => {\n      this.OPTION(() => {\n        this.CONSUME(k.EXTENSIBILITY);\n        this.CONSUME(k.IMPLIED);\n      });\n    });\n\n    this.RULE('ModuleBody', () => {\n      this.SUBRULE(this.Imports);\n      this.SUBRULE(this.AssignmentList);\n    });\n\n    this.RULE('AssignmentList', () => {\n      this.MANY(() => {\n        this.SUBRULE(this.Assignment);\n      });\n    });\n\n    this.RULE('Assignment', () => {\n      this.addOrList(['TypeAssignment', 'ValueAssignment']);\n    });\n\n    initModuleIdentifierRules.call(this);\n    initBuiltinValueRules.call(this);\n    initBuiltinTypeRules.call(this);\n    initConstrainedTypeRules.call(this);\n    initIntegerTypeRules.call(this);\n    initObjectIdentifierValueRules.call(this);\n    initSequenceTypeRules.call(this);\n    initSequenceOfTypeRules.call(this);\n    initTypeRules.call(this);\n    initReferencedTypeRules.call(this);\n    initTaggedTypeRules.call(this);\n    initSizeConstraintRules.call(this);\n    initChoiceTypeRules.call(this);\n    initImportsRules.call(this);\n    this.performSelfAnalysis();\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4cbebd1e36f9326feaabe367f95cbd6e90b86ef0","contentHash":"5cda8681e9a1f349260bbdc44b7a0df15819afc7dc558045374280cb14392740"},"D:\\formation\\asn.1\\src\\analysis\\ASN1Lexer.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\ASN1Lexer.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":410}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":52}},"4":{"start":{"line":6,"column":0},"end":{"line":10,"column":3}},"5":{"start":{"line":11,"column":0},"end":{"line":15,"column":3}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":93}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":82}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":82}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":95}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":95}},"11":{"start":{"line":22,"column":0},"end":{"line":22,"column":92}},"12":{"start":{"line":23,"column":0},"end":{"line":23,"column":92}},"13":{"start":{"line":24,"column":0},"end":{"line":24,"column":79}},"14":{"start":{"line":25,"column":0},"end":{"line":25,"column":90}},"15":{"start":{"line":26,"column":0},"end":{"line":26,"column":78}},"16":{"start":{"line":27,"column":0},"end":{"line":30,"column":3}},"17":{"start":{"line":31,"column":0},"end":{"line":36,"column":3}},"18":{"start":{"line":37,"column":0},"end":{"line":41,"column":3}},"19":{"start":{"line":42,"column":0},"end":{"line":46,"column":3}},"20":{"start":{"line":47,"column":0},"end":{"line":51,"column":3}},"21":{"start":{"line":52,"column":0},"end":{"line":75,"column":2}},"22":{"start":{"line":76,"column":0},"end":{"line":76,"column":66}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/ASN1Lexer.ts","sources":["D:/formation/asn.1/src/analysis/ASN1Lexer.ts"],"names":[],"mappings":"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","sourcesContent":["import {Lexer, createToken} from 'chevrotain';\nimport {k} from './lexer/ASN1Keyword';\n\nexport const Comment = createToken({\n  name: 'Comment',\n  pattern: /--.*?(?:\\n|--)/,\n  group: Lexer.SKIPPED,\n});\n\nexport const WhiteSpace = createToken({\n  name: 'WhiteSpace',\n  pattern: /[ \\t\\n\\r]+/,\n  group: Lexer.SKIPPED,\n});\n\n// Keywords\nexport const AFFECTATION = createToken({name: 'AFFECTATION', pattern: /::=/});\n\nexport const L_CURLY = createToken({name: 'LCurly', pattern: /{/});\nexport const R_CURLY = createToken({name: 'RCurly', pattern: /}/});\nexport const L_PARENTHESIS = createToken({name: 'LParenthesis', pattern: /\\(/});\nexport const R_PARENTHESIS = createToken({name: 'RParenthesis', pattern: /\\)/});\nexport const L_SQUARE = createToken({name: 'LSquareBracket', pattern: /\\[/});\nexport const R_SQUARE = createToken({name: 'RSquareBracket', pattern: /\\]/});\nexport const COMMA = createToken({name: 'Comma', pattern: /,/});\nexport const SEMI_COLUMN = createToken({name: 'SemiColumn', pattern: /;/});\nexport const PIPE = createToken({name: 'Pipe', pattern: /\\|/});\nexport const RANGE_SEPARATOR = createToken({\n  name: 'RangeSeparator',\n  pattern: /[.][.]/,\n});\n\nexport const TypeReference = createToken({\n  name: 'TypeReference',\n  // 12.2.1\n  // Note: use of non capturing group. (?:xxx)\n  pattern: /[A-Z](?:-?\\w+)*/,\n});\nexport const Identifier = createToken({\n  name: 'Identifier',\n  // 12.3\n  pattern: /[a-z](?:-?\\w+)*/,\n});\n\nexport const NegativeNumberToken = createToken({\n  name: 'NegativeNumber',\n  // 12.8 and 19.1\n  pattern: /-[1-9][0-9]*/,\n});\n\nexport const NumberToken = createToken({\n  name: 'Number',\n  // 12.8\n  pattern: /(?:[1-9][0-9]*)|0/,\n});\n\nexport const allASN1Tokens = [\n  Comment,\n  WhiteSpace,\n\n  ...Object.values(k),\n\n  // 3 chars\n  AFFECTATION,\n  // 2 chars\n  RANGE_SEPARATOR,\n  // 1 chars\n  L_CURLY,\n  R_CURLY,\n  L_PARENTHESIS,\n  R_PARENTHESIS,\n  L_SQUARE,\n  R_SQUARE,\n  COMMA,\n  SEMI_COLUMN,\n  PIPE,\n\n  // The Identifier must appear after the keywords because all keywords are valid identifiers.\n  Identifier,\n  TypeReference,\n  NegativeNumberToken,\n  NumberToken,\n];\n\nexport const ASN1Lexer = new Lexer(allASN1Tokens);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0c5e609184cee45267260f349b98934007ef0fe9","contentHash":"d2d8da976f0124bef1dc539032305ad4a94a01b936c966c93100da2fe6b915b2"},"D:\\formation\\asn.1\\src\\analysis\\lexer\\ASN1Keyword.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\lexer\\ASN1Keyword.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":19}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":14},"end":{"line":8,"column":2}},"4":{"start":{"line":9,"column":0},"end":{"line":101,"column":2}},"5":{"start":{"line":102,"column":0},"end":{"line":107,"column":1}},"6":{"start":{"line":103,"column":4},"end":{"line":106,"column":7}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":80},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/lexer/ASN1Keyword.ts","sources":["D:/formation/asn.1/src/analysis/lexer/ASN1Keyword.ts"],"names":[],"mappings":"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","sourcesContent":["import {createToken} from 'chevrotain';\n\nconst token = createToken({\n  name: 'x',\n  pattern: /x/,\n});\n\nexport const k = {\n  // 'ENCODING-CONTROL': token,\n  // 'RELATIVE-OID-IRI': token,\n  // 'ABSTRACT-SYNTAX': token,\n  // 'TYPE-IDENTIFIER': token,\n  // 'MINUS-INFINITY': token,\n  // 'PLUS-INFINITY': token,\n  // 'NOT-A-NUMBER': token,\n  // 'RELATIVE-OID': token,\n  // 'TIME-OF-DAY': token,\n  // 'DATE-TIME': token,\n  // 'OID-IRI': token,\n  ObjectDescriptor: token,\n  GeneralizedTime: token,\n  PrintableString: token,\n  UniversalString: token,\n  VideotexString: token,\n  EXTENSIBILITY: token,\n  GeneralString: token,\n  GraphicString: token,\n  NumericString: token,\n  TeletexString: token,\n  VisibleString: token,\n  INSTRUCTIONS: token,\n  INTERSECTION: token,\n  ISO646String: token,\n  APPLICATION: token,\n  CONSTRAINED: token,\n  DEFINITIONS: token,\n  COMPONENTS: token,\n  CONTAINING: token,\n  ENUMERATED: token,\n  IDENTIFIER: token,\n  UTF8String: token,\n  AUTOMATIC: token,\n  BMPString: token,\n  CHARACTER: token,\n  COMPONENT: token,\n  IA5String: token,\n  T61String: token,\n  UNIVERSAL: token,\n  DURATION: token,\n  EMBEDDED: token,\n  EXPLICIT: token,\n  EXTERNAL: token,\n  IMPLICIT: token,\n  INCLUDES: token,\n  INSTANCE: token,\n  OPTIONAL: token,\n  SEQUENCE: token,\n  SETTINGS: token,\n  BOOLEAN: token,\n  DEFAULT: token,\n  ENCODED: token,\n  EXPORTS: token,\n  IMPLIED: token,\n  IMPORTS: token,\n  INTEGER: token,\n  PATTERN: token,\n  PRESENT: token,\n  PRIVATE: token,\n  UTCTime: token,\n  ABSENT: token,\n  EXCEPT: token,\n  OBJECT: token,\n  CHOICE: token,\n  STRING: token,\n  SYNTAX: token,\n  UNIQUE: token,\n  CLASS: token,\n  BEGIN: token,\n  FALSE: token,\n  OCTET: token,\n  UNION: token,\n  DATE: token,\n  FROM: token,\n  SIZE: token,\n  REAL: token,\n  TAGS: token,\n  TIME: token,\n  TRUE: token,\n  WITH: token,\n  ALL: token,\n  END: token,\n  MAX: token,\n  SET: token,\n  MIN: token,\n  BIT: token,\n  NULL: token,\n  PDV: token,\n  BY: token,\n  OF: token,\n};\n\nexport type KeywordObject = typeof k;\nexport type Keyword = keyof KeywordObject;\n\nfor (const name of Object.keys(k) as Keyword[]) {\n  k[name] = createToken({\n    name,\n    pattern: new RegExp(name),\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ac0e4154953622cf64e642d1d9b27e1865feacfd","contentHash":"16907271084d13e7a387290cfabadb066e44f93f0699ce4006582d91996c6172"},"D:\\formation\\asn.1\\src\\analysis\\parser\\BuiltinTypeRules.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\parser\\BuiltinTypeRules.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":53}},"3":{"start":{"line":6,"column":4},"end":{"line":8,"column":7}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":46}},"5":{"start":{"line":9,"column":4},"end":{"line":12,"column":7}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":42}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":45}},"8":{"start":{"line":13,"column":4},"end":{"line":16,"column":7}},"9":{"start":{"line":14,"column":8},"end":{"line":14,"column":44}},"10":{"start":{"line":15,"column":8},"end":{"line":15,"column":45}},"11":{"start":{"line":17,"column":4},"end":{"line":20,"column":7}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":45}},"13":{"start":{"line":19,"column":8},"end":{"line":19,"column":49}},"14":{"start":{"line":21,"column":4},"end":{"line":29,"column":7}},"15":{"start":{"line":22,"column":8},"end":{"line":28,"column":11}},"16":{"start":{"line":25,"column":20},"end":{"line":25,"column":69}},"17":{"start":{"line":30,"column":4},"end":{"line":32,"column":7}},"18":{"start":{"line":31,"column":8},"end":{"line":31,"column":116}},"19":{"start":{"line":34,"column":0},"end":{"line":34,"column":52}}},"fnMap":{"0":{"name":"initBuiltinTypeRules","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":29}},"loc":{"start":{"line":5,"column":32},"end":{"line":33,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":29},"end":{"line":6,"column":30}},"loc":{"start":{"line":6,"column":35},"end":{"line":8,"column":5}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":31},"end":{"line":9,"column":32}},"loc":{"start":{"line":9,"column":37},"end":{"line":12,"column":5}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":33},"end":{"line":13,"column":34}},"loc":{"start":{"line":13,"column":39},"end":{"line":16,"column":5}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":17,"column":38},"end":{"line":17,"column":39}},"loc":{"start":{"line":17,"column":44},"end":{"line":20,"column":5}},"line":17},"5":{"name":"(anonymous_5)","decl":{"start":{"line":21,"column":37},"end":{"line":21,"column":38}},"loc":{"start":{"line":21,"column":43},"end":{"line":29,"column":5}},"line":21},"6":{"name":"(anonymous_6)","decl":{"start":{"line":24,"column":21},"end":{"line":24,"column":22}},"loc":{"start":{"line":24,"column":27},"end":{"line":26,"column":17}},"line":24},"7":{"name":"(anonymous_7)","decl":{"start":{"line":30,"column":47},"end":{"line":30,"column":48}},"loc":{"start":{"line":30,"column":53},"end":{"line":32,"column":5}},"line":30}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":7,"4":13,"5":7,"6":9,"7":9,"8":7,"9":33,"10":33,"11":7,"12":11,"13":11,"14":7,"15":16,"16":16,"17":7,"18":16,"19":1},"f":{"0":7,"1":13,"2":9,"3":33,"4":11,"5":16,"6":16,"7":16},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/parser/BuiltinTypeRules.ts","sources":["D:/formation/asn.1/src/analysis/parser/BuiltinTypeRules.ts"],"names":[],"mappings":";;;AACA,sDAAuC;AAEvC,SAAgB,oBAAoB;IAClC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,EAAE;QAC5B,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,OAAO,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE;QAC9B,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAChC,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,KAAK,CAAC,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,GAAG,EAAE;QACrC,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,MAAM,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,UAAU,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACpC,IAAI,CAAC,EAAE,CAAC;YACN;gBACE,GAAG,EAAE,GAAG,EAAE;oBACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC;gBACnD,CAAC;aACF;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,+BAA+B,EAAE,GAAG,EAAE;QAC9C,IAAI,CAAC,cAAc,CAAC,CAAC,eAAC,CAAC,aAAa,EAAE,eAAC,CAAC,SAAS,EAAE,eAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACpE,CAAC,CAAC,CAAC;AACL,CAAC;AAjCD,oDAiCC","sourcesContent":["import {ASN1CstParser} from '../ASN1CstParser';\nimport {k} from '../lexer/ASN1Keyword';\n\nexport function initBuiltinTypeRules(this: ASN1CstParser) {\n  this.RULE('BooleanType', () => {\n    this.CONSUME(k.BOOLEAN);\n  });\n\n  this.RULE('BitStringType', () => {\n    this.CONSUME(k.BIT);\n    this.CONSUME(k.STRING);\n  });\n\n  this.RULE('OctetStringType', () => {\n    this.CONSUME(k.OCTET);\n    this.CONSUME(k.STRING);\n  });\n\n  this.RULE('ObjectIdentifierType', () => {\n    this.CONSUME(k.OBJECT);\n    this.CONSUME(k.IDENTIFIER);\n  });\n\n  this.RULE('CharacterStringType', () => {\n    this.OR([\n      {\n        ALT: () => {\n          this.SUBRULE(this.RestrictedCharacterStringType);\n        },\n      },\n    ]);\n  });\n\n  this.RULE('RestrictedCharacterStringType', () => {\n    this.addOrTokenList([k.GeneralString, k.IA5String, k.UTF8String]);\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d34f8f6a7f98908a8e57d2262496692215b5064e","contentHash":"e511d64e3a361ec56c6cb9e5a0baf7b5e5dee87f733bb1e40700dffebd802b55"},"D:\\formation\\asn.1\\src\\analysis\\parser\\BuiltinValueRules.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\parser\\BuiltinValueRules.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":53}},"4":{"start":{"line":7,"column":4},"end":{"line":12,"column":7}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":42}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":32}},"7":{"start":{"line":10,"column":8},"end":{"line":10,"column":46}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":33}},"9":{"start":{"line":13,"column":4},"end":{"line":15,"column":7}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":45}},"11":{"start":{"line":16,"column":4},"end":{"line":24,"column":7}},"12":{"start":{"line":17,"column":8},"end":{"line":23,"column":11}},"13":{"start":{"line":20,"column":20},"end":{"line":20,"column":52}},"14":{"start":{"line":25,"column":4},"end":{"line":27,"column":7}},"15":{"start":{"line":26,"column":8},"end":{"line":26,"column":82}},"16":{"start":{"line":28,"column":4},"end":{"line":30,"column":7}},"17":{"start":{"line":29,"column":8},"end":{"line":29,"column":112}},"18":{"start":{"line":31,"column":4},"end":{"line":33,"column":7}},"19":{"start":{"line":32,"column":8},"end":{"line":32,"column":75}},"20":{"start":{"line":34,"column":4},"end":{"line":36,"column":7}},"21":{"start":{"line":35,"column":8},"end":{"line":35,"column":43}},"22":{"start":{"line":38,"column":0},"end":{"line":38,"column":54}}},"fnMap":{"0":{"name":"initBuiltinValueRules","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":30}},"loc":{"start":{"line":6,"column":33},"end":{"line":37,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":33},"end":{"line":7,"column":34}},"loc":{"start":{"line":7,"column":39},"end":{"line":12,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":32},"end":{"line":13,"column":33}},"loc":{"start":{"line":13,"column":38},"end":{"line":15,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":23},"end":{"line":16,"column":24}},"loc":{"start":{"line":16,"column":29},"end":{"line":24,"column":5}},"line":16},"4":{"name":"(anonymous_4)","decl":{"start":{"line":19,"column":21},"end":{"line":19,"column":22}},"loc":{"start":{"line":19,"column":27},"end":{"line":21,"column":17}},"line":19},"5":{"name":"(anonymous_5)","decl":{"start":{"line":25,"column":30},"end":{"line":25,"column":31}},"loc":{"start":{"line":25,"column":36},"end":{"line":27,"column":5}},"line":25},"6":{"name":"(anonymous_6)","decl":{"start":{"line":28,"column":30},"end":{"line":28,"column":31}},"loc":{"start":{"line":28,"column":36},"end":{"line":30,"column":5}},"line":28},"7":{"name":"(anonymous_7)","decl":{"start":{"line":31,"column":30},"end":{"line":31,"column":31}},"loc":{"start":{"line":31,"column":36},"end":{"line":33,"column":5}},"line":31},"8":{"name":"(anonymous_8)","decl":{"start":{"line":34,"column":30},"end":{"line":34,"column":31}},"loc":{"start":{"line":34,"column":36},"end":{"line":36,"column":5}},"line":34}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":7,"5":9,"6":9,"7":9,"8":9,"9":7,"10":10,"11":7,"12":68,"13":68,"14":7,"15":68,"16":7,"17":65,"18":7,"19":8,"20":7,"21":8,"22":1},"f":{"0":7,"1":9,"2":10,"3":68,"4":68,"5":68,"6":65,"7":8,"8":8},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/parser/BuiltinValueRules.ts","sources":["D:/formation/asn.1/src/analysis/parser/BuiltinValueRules.ts"],"names":[],"mappings":";;;AACA,4CAKsB;AACtB,sDAAuC;AAEvC,SAAgB,qBAAqB;IACnC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,uBAAW,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC/B,IAAI,CAAC,OAAO,CAAC,sBAAU,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE;QACtB,IAAI,CAAC,EAAE,CAAC;YACN;gBACE,GAAG,EAAE,GAAG,EAAE;oBACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBAClC,CAAC;aACF;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,EAAE;QAC7B,IAAI,CAAC,SAAS,CAAC,CAAC,uBAAuB,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,EAAE;QAC7B,IAAI,CAAC,cAAc,CAAC,CAAC,sBAAU,EAAE,uBAAW,EAAE,+BAAmB,CAAC,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,EAAE;QAC7B,IAAI,CAAC,cAAc,CAAC,CAAC,eAAC,CAAC,IAAI,EAAE,eAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,EAAE;QAC7B,IAAI,CAAC,SAAS,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;AACL,CAAC;AArCD,sDAqCC","sourcesContent":["import {ASN1CstParser} from '../ASN1CstParser';\nimport {\n  AFFECTATION,\n  Identifier,\n  NegativeNumberToken,\n  NumberToken,\n} from '../ASN1Lexer';\nimport {k} from '../lexer/ASN1Keyword';\n\nexport function initBuiltinValueRules(this: ASN1CstParser) {\n  this.RULE('ValueAssignment', () => {\n    this.SUBRULE(this.ValueReference);\n    this.SUBRULE(this.Type);\n    this.CONSUME(AFFECTATION);\n    this.SUBRULE(this.Value);\n  });\n\n  this.RULE('ValueReference', () => {\n    this.CONSUME(Identifier);\n  });\n\n  this.RULE('Value', () => {\n    this.OR([\n      {\n        ALT: () => {\n          this.SUBRULE(this.BuiltinValue);\n        },\n      },\n    ]);\n  });\n\n  this.RULE('BuiltinValue', () => {\n    this.addOrList(['ObjectIdentifierValue', 'IntegerValue', 'BooleanValue']);\n  });\n\n  this.RULE('IntegerValue', () => {\n    this.addOrTokenList([Identifier, NumberToken, NegativeNumberToken]);\n  });\n\n  this.RULE('BooleanValue', () => {\n    this.addOrTokenList([k.TRUE, k.FALSE]);\n  });\n\n  this.RULE('DefinedValue', () => {\n    this.addOrList(['ValueReference']);\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"64add9b4cd5c7887c380280965044ec0a1b1a6a8","contentHash":"5755a74fbb50a43ebb9f4b0690be9771c0113ccbaa6cec075e32b5df44a1a1c0"},"D:\\formation\\asn.1\\src\\analysis\\parser\\ChoiceTypeRules.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\parser\\ChoiceTypeRules.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":53}},"4":{"start":{"line":8,"column":4},"end":{"line":13,"column":7}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":45}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":42}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":48}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":42}},"9":{"start":{"line":14,"column":4},"end":{"line":16,"column":7}},"10":{"start":{"line":15,"column":8},"end":{"line":15,"column":51}},"11":{"start":{"line":17,"column":4},"end":{"line":19,"column":7}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":47}},"13":{"start":{"line":20,"column":4},"end":{"line":27,"column":7}},"14":{"start":{"line":21,"column":8},"end":{"line":26,"column":11}},"15":{"start":{"line":24,"column":16},"end":{"line":24,"column":51}},"16":{"start":{"line":28,"column":4},"end":{"line":30,"column":7}},"17":{"start":{"line":29,"column":8},"end":{"line":29,"column":37}},"18":{"start":{"line":32,"column":0},"end":{"line":32,"column":50}}},"fnMap":{"0":{"name":"initChoiceTypeRules","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":28}},"loc":{"start":{"line":6,"column":31},"end":{"line":31,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":28},"end":{"line":8,"column":29}},"loc":{"start":{"line":8,"column":34},"end":{"line":13,"column":5}},"line":8},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":38},"end":{"line":14,"column":39}},"loc":{"start":{"line":14,"column":44},"end":{"line":16,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":41},"end":{"line":17,"column":42}},"loc":{"start":{"line":17,"column":47},"end":{"line":19,"column":5}},"line":17},"4":{"name":"(anonymous_4)","decl":{"start":{"line":20,"column":37},"end":{"line":20,"column":38}},"loc":{"start":{"line":20,"column":43},"end":{"line":27,"column":5}},"line":20},"5":{"name":"(anonymous_5)","decl":{"start":{"line":23,"column":17},"end":{"line":23,"column":18}},"loc":{"start":{"line":23,"column":23},"end":{"line":25,"column":13}},"line":23},"6":{"name":"(anonymous_6)","decl":{"start":{"line":28,"column":33},"end":{"line":28,"column":34}},"loc":{"start":{"line":28,"column":39},"end":{"line":30,"column":5}},"line":28}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":7,"5":11,"6":11,"7":11,"8":11,"9":7,"10":11,"11":7,"12":11,"13":7,"14":11,"15":15,"16":7,"17":15,"18":1},"f":{"0":7,"1":11,"2":11,"3":11,"4":11,"5":15,"6":15},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/parser/ChoiceTypeRules.ts","sources":["D:/formation/asn.1/src/analysis/parser/ChoiceTypeRules.ts"],"names":[],"mappings":";;;AACA,4CAAqD;AACrD,sDAAuC;AAEvC,SAAgB,mBAAmB;IACjC,YAAY;IACZ,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;QAC3B,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,MAAM,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,mBAAO,CAAC,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,mBAAO,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,GAAG,EAAE;QACrC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE,GAAG,EAAE;QACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;IACzC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACpC,IAAI,CAAC,QAAQ,CAAC;YACZ,GAAG,EAAE,iBAAK;YACV,GAAG,EAAE,GAAG,EAAE;gBACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACrC,CAAC;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC;AACL,CAAC;AA7BD,kDA6BC","sourcesContent":["import {ASN1CstParser} from '../ASN1CstParser';\nimport {COMMA, L_CURLY, R_CURLY} from '../ASN1Lexer';\nimport {k} from '../lexer/ASN1Keyword';\n\nexport function initChoiceTypeRules(this: ASN1CstParser) {\n  // clause 29\n  this.RULE('ChoiceType', () => {\n    this.CONSUME(k.CHOICE);\n    this.CONSUME(L_CURLY);\n    this.SUBRULE(this.AlternativeTypeLists);\n    this.CONSUME(R_CURLY);\n  });\n\n  this.RULE('AlternativeTypeLists', () => {\n    this.SUBRULE(this.RootAlternativeTypeList);\n  });\n\n  this.RULE('RootAlternativeTypeList', () => {\n    this.SUBRULE(this.AlternativeTypeList);\n  });\n\n  this.RULE('AlternativeTypeList', () => {\n    this.MANY_SEP({\n      SEP: COMMA,\n      DEF: () => {\n        this.SUBRULE(this.AlternativeType);\n      },\n    });\n  });\n\n  this.RULE('AlternativeType', () => {\n    this.SUBRULE(this.NamedType);\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9eff1713dc7e1e328efd040251dc7906efa6153e","contentHash":"5f21329a45207dfad046f724e1c6b96a136226bf0829487c9a5f24c2cb4f537d"},"D:\\formation\\asn.1\\src\\analysis\\parser\\ConstrainedTypeRules.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\parser\\ConstrainedTypeRules.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":53}},"4":{"start":{"line":7,"column":4},"end":{"line":13,"column":7}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":48}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":42}},"7":{"start":{"line":12,"column":8},"end":{"line":12,"column":48}},"8":{"start":{"line":14,"column":4},"end":{"line":20,"column":7}},"9":{"start":{"line":18,"column":8},"end":{"line":18,"column":45}},"10":{"start":{"line":19,"column":8},"end":{"line":19,"column":45}},"11":{"start":{"line":21,"column":4},"end":{"line":23,"column":7}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":43}},"13":{"start":{"line":24,"column":4},"end":{"line":26,"column":7}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":46}},"15":{"start":{"line":27,"column":4},"end":{"line":29,"column":7}},"16":{"start":{"line":28,"column":8},"end":{"line":28,"column":42}},"17":{"start":{"line":30,"column":4},"end":{"line":32,"column":7}},"18":{"start":{"line":31,"column":8},"end":{"line":31,"column":34}},"19":{"start":{"line":33,"column":4},"end":{"line":39,"column":7}},"20":{"start":{"line":34,"column":8},"end":{"line":34,"column":36}},"21":{"start":{"line":35,"column":8},"end":{"line":38,"column":11}},"22":{"start":{"line":36,"column":12},"end":{"line":36,"column":41}},"23":{"start":{"line":37,"column":12},"end":{"line":37,"column":41}},"24":{"start":{"line":40,"column":4},"end":{"line":42,"column":7}},"25":{"start":{"line":41,"column":8},"end":{"line":41,"column":39}},"26":{"start":{"line":43,"column":4},"end":{"line":45,"column":7}},"27":{"start":{"line":44,"column":8},"end":{"line":44,"column":43}},"28":{"start":{"line":46,"column":4},"end":{"line":48,"column":7}},"29":{"start":{"line":47,"column":8},"end":{"line":47,"column":77}},"30":{"start":{"line":49,"column":4},"end":{"line":51,"column":7}},"31":{"start":{"line":50,"column":8},"end":{"line":50,"column":33}},"32":{"start":{"line":52,"column":4},"end":{"line":54,"column":7}},"33":{"start":{"line":53,"column":8},"end":{"line":53,"column":32}},"34":{"start":{"line":55,"column":4},"end":{"line":55,"column":46}},"35":{"start":{"line":56,"column":4},"end":{"line":56,"column":42}},"36":{"start":{"line":57,"column":4},"end":{"line":84,"column":7}},"37":{"start":{"line":58,"column":8},"end":{"line":58,"column":77}},"38":{"start":{"line":59,"column":8},"end":{"line":70,"column":11}},"39":{"start":{"line":62,"column":20},"end":{"line":62,"column":50}},"40":{"start":{"line":67,"column":20},"end":{"line":67,"column":54}},"41":{"start":{"line":71,"column":8},"end":{"line":71,"column":41}},"42":{"start":{"line":72,"column":8},"end":{"line":83,"column":11}},"43":{"start":{"line":75,"column":20},"end":{"line":75,"column":44}},"44":{"start":{"line":80,"column":20},"end":{"line":80,"column":49}},"45":{"start":{"line":85,"column":4},"end":{"line":92,"column":7}},"46":{"start":{"line":87,"column":8},"end":{"line":87,"column":41}},"47":{"start":{"line":88,"column":8},"end":{"line":91,"column":11}},"48":{"start":{"line":89,"column":12},"end":{"line":89,"column":54}},"49":{"start":{"line":90,"column":12},"end":{"line":90,"column":45}},"50":{"start":{"line":93,"column":4},"end":{"line":95,"column":7}},"51":{"start":{"line":94,"column":8},"end":{"line":94,"column":41}},"52":{"start":{"line":96,"column":4},"end":{"line":98,"column":7}},"53":{"start":{"line":97,"column":8},"end":{"line":97,"column":41}},"54":{"start":{"line":99,"column":4},"end":{"line":112,"column":7}},"55":{"start":{"line":100,"column":8},"end":{"line":111,"column":11}},"56":{"start":{"line":103,"column":20},"end":{"line":103,"column":45}},"57":{"start":{"line":108,"column":20},"end":{"line":108,"column":54}},"58":{"start":{"line":113,"column":4},"end":{"line":126,"column":7}},"59":{"start":{"line":114,"column":8},"end":{"line":125,"column":11}},"60":{"start":{"line":117,"column":20},"end":{"line":117,"column":45}},"61":{"start":{"line":122,"column":20},"end":{"line":122,"column":54}},"62":{"start":{"line":128,"column":0},"end":{"line":128,"column":60}}},"fnMap":{"0":{"name":"initConstrainedTypeRules","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":33}},"loc":{"start":{"line":6,"column":36},"end":{"line":127,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":28},"end":{"line":7,"column":29}},"loc":{"start":{"line":7,"column":34},"end":{"line":13,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":32},"end":{"line":14,"column":33}},"loc":{"start":{"line":14,"column":38},"end":{"line":20,"column":5}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":35},"end":{"line":21,"column":36}},"loc":{"start":{"line":21,"column":41},"end":{"line":23,"column":5}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":33},"end":{"line":24,"column":34}},"loc":{"start":{"line":24,"column":39},"end":{"line":26,"column":5}},"line":24},"5":{"name":"(anonymous_5)","decl":{"start":{"line":27,"column":36},"end":{"line":27,"column":37}},"loc":{"start":{"line":27,"column":42},"end":{"line":29,"column":5}},"line":27},"6":{"name":"(anonymous_6)","decl":{"start":{"line":30,"column":32},"end":{"line":30,"column":33}},"loc":{"start":{"line":30,"column":38},"end":{"line":32,"column":5}},"line":30},"7":{"name":"(anonymous_7)","decl":{"start":{"line":33,"column":24},"end":{"line":33,"column":25}},"loc":{"start":{"line":33,"column":30},"end":{"line":39,"column":5}},"line":33},"8":{"name":"(anonymous_8)","decl":{"start":{"line":35,"column":18},"end":{"line":35,"column":19}},"loc":{"start":{"line":35,"column":24},"end":{"line":38,"column":9}},"line":35},"9":{"name":"(anonymous_9)","decl":{"start":{"line":40,"column":27},"end":{"line":40,"column":28}},"loc":{"start":{"line":40,"column":33},"end":{"line":42,"column":5}},"line":40},"10":{"name":"(anonymous_10)","decl":{"start":{"line":43,"column":26},"end":{"line":43,"column":27}},"loc":{"start":{"line":43,"column":32},"end":{"line":45,"column":5}},"line":43},"11":{"name":"(anonymous_11)","decl":{"start":{"line":46,"column":33},"end":{"line":46,"column":34}},"loc":{"start":{"line":46,"column":39},"end":{"line":48,"column":5}},"line":46},"12":{"name":"(anonymous_12)","decl":{"start":{"line":49,"column":29},"end":{"line":49,"column":30}},"loc":{"start":{"line":49,"column":35},"end":{"line":51,"column":5}},"line":49},"13":{"name":"(anonymous_13)","decl":{"start":{"line":52,"column":34},"end":{"line":52,"column":35}},"loc":{"start":{"line":52,"column":40},"end":{"line":54,"column":5}},"line":52},"14":{"name":"(anonymous_14)","decl":{"start":{"line":55,"column":35},"end":{"line":55,"column":36}},"loc":{"start":{"line":55,"column":41},"end":{"line":55,"column":44}},"line":55},"15":{"name":"(anonymous_15)","decl":{"start":{"line":56,"column":31},"end":{"line":56,"column":32}},"loc":{"start":{"line":56,"column":37},"end":{"line":56,"column":40}},"line":56},"16":{"name":"(anonymous_16)","decl":{"start":{"line":57,"column":36},"end":{"line":57,"column":37}},"loc":{"start":{"line":57,"column":42},"end":{"line":84,"column":5}},"line":57},"17":{"name":"(anonymous_17)","decl":{"start":{"line":61,"column":21},"end":{"line":61,"column":22}},"loc":{"start":{"line":61,"column":27},"end":{"line":63,"column":17}},"line":61},"18":{"name":"(anonymous_18)","decl":{"start":{"line":66,"column":21},"end":{"line":66,"column":22}},"loc":{"start":{"line":66,"column":27},"end":{"line":68,"column":17}},"line":66},"19":{"name":"(anonymous_19)","decl":{"start":{"line":74,"column":21},"end":{"line":74,"column":22}},"loc":{"start":{"line":74,"column":27},"end":{"line":76,"column":17}},"line":74},"20":{"name":"(anonymous_20)","decl":{"start":{"line":79,"column":21},"end":{"line":79,"column":22}},"loc":{"start":{"line":79,"column":27},"end":{"line":81,"column":17}},"line":79},"21":{"name":"(anonymous_21)","decl":{"start":{"line":85,"column":28},"end":{"line":85,"column":29}},"loc":{"start":{"line":85,"column":34},"end":{"line":92,"column":5}},"line":85},"22":{"name":"(anonymous_22)","decl":{"start":{"line":88,"column":20},"end":{"line":88,"column":21}},"loc":{"start":{"line":88,"column":26},"end":{"line":91,"column":9}},"line":88},"23":{"name":"(anonymous_23)","decl":{"start":{"line":93,"column":31},"end":{"line":93,"column":32}},"loc":{"start":{"line":93,"column":37},"end":{"line":95,"column":5}},"line":93},"24":{"name":"(anonymous_24)","decl":{"start":{"line":96,"column":31},"end":{"line":96,"column":32}},"loc":{"start":{"line":96,"column":37},"end":{"line":98,"column":5}},"line":96},"25":{"name":"(anonymous_25)","decl":{"start":{"line":99,"column":31},"end":{"line":99,"column":32}},"loc":{"start":{"line":99,"column":37},"end":{"line":112,"column":5}},"line":99},"26":{"name":"(anonymous_26)","decl":{"start":{"line":102,"column":21},"end":{"line":102,"column":22}},"loc":{"start":{"line":102,"column":27},"end":{"line":104,"column":17}},"line":102},"27":{"name":"(anonymous_27)","decl":{"start":{"line":107,"column":21},"end":{"line":107,"column":22}},"loc":{"start":{"line":107,"column":27},"end":{"line":109,"column":17}},"line":107},"28":{"name":"(anonymous_28)","decl":{"start":{"line":113,"column":31},"end":{"line":113,"column":32}},"loc":{"start":{"line":113,"column":37},"end":{"line":126,"column":5}},"line":113},"29":{"name":"(anonymous_29)","decl":{"start":{"line":116,"column":21},"end":{"line":116,"column":22}},"loc":{"start":{"line":116,"column":27},"end":{"line":118,"column":17}},"line":116},"30":{"name":"(anonymous_30)","decl":{"start":{"line":121,"column":21},"end":{"line":121,"column":22}},"loc":{"start":{"line":121,"column":27},"end":{"line":123,"column":17}},"line":121}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":7,"5":59,"6":59,"7":59,"8":7,"9":59,"10":59,"11":7,"12":59,"13":7,"14":59,"15":7,"16":59,"17":7,"18":59,"19":7,"20":59,"21":59,"22":11,"23":11,"24":7,"25":11,"26":7,"27":63,"28":7,"29":63,"30":7,"31":7,"32":7,"33":9,"34":7,"35":7,"36":7,"37":11,"38":11,"39":7,"40":11,"41":11,"42":11,"43":11,"44":7,"45":7,"46":59,"47":59,"48":19,"49":19,"50":7,"51":59,"52":7,"53":19,"54":7,"55":59,"56":59,"57":7,"58":7,"59":19,"60":13,"61":13,"62":1},"f":{"0":7,"1":59,"2":59,"3":59,"4":59,"5":59,"6":59,"7":59,"8":11,"9":11,"10":63,"11":63,"12":7,"13":9,"14":59,"15":7,"16":11,"17":7,"18":11,"19":11,"20":7,"21":59,"22":19,"23":59,"24":19,"25":59,"26":59,"27":7,"28":19,"29":13,"30":13},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/parser/ConstrainedTypeRules.ts","sources":["D:/formation/asn.1/src/analysis/parser/ConstrainedTypeRules.ts"],"names":[],"mappings":"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","sourcesContent":["import {ASN1CstParser} from '../ASN1CstParser';\nimport {\n  L_PARENTHESIS,\n  PIPE,\n  RANGE_SEPARATOR,\n  R_PARENTHESIS,\n} from '../ASN1Lexer';\nimport {k} from '../lexer/ASN1Keyword';\n\nexport function initConstrainedTypeRules(this: ASN1CstParser) {\n  this.RULE('Constraint', () => {\n    // 49.6 Constraint ::= \"(\" ConstraintSpec ExceptionSpec \")\"\n    this.CONSUME(L_PARENTHESIS);\n    this.SUBRULE(this.ConstraintSpec);\n    // this.addSubrule(this.ExceptionSpec);\n    this.CONSUME(R_PARENTHESIS);\n  });\n  this.RULE('ConstraintSpec', () => {\n    // 49.6 ConstraintSpec ::=\n    // SubtypeConstraint\n    // | GeneralConstraint\n    this.SUBRULE(this.SubtypeConstraint);\n    this.SUBRULE(this.GeneralConstraint);\n  });\n  this.RULE('SubtypeConstraint', () => {\n    this.SUBRULE(this.ElementSetSpecs);\n  });\n  this.RULE('ElementSetSpecs', () => {\n    this.SUBRULE(this.RootElementSetSpec);\n  });\n  this.RULE('RootElementSetSpec', () => {\n    this.SUBRULE(this.ElementSetSpec);\n  });\n  this.RULE('ElementSetSpec', () => {\n    this.SUBRULE(this.Unions);\n  });\n  this.RULE('Unions', () => {\n    this.SUBRULE(this.Elements);\n    this.MANY(() => {\n      this.SUBRULE(this.UnionMark);\n      this.SUBRULE2(this.Elements);\n    });\n  });\n  this.RULE('UnionMark', () => {\n    this.CONSUME(PIPE);\n  });\n  this.RULE('Elements', () => {\n    this.SUBRULE(this.SubtypeElements);\n  });\n  this.RULE('SubtypeElements', () => {\n    this.addOrList(['ContainedSubType', 'SizeConstraint', 'ValueRange']);\n  });\n\n  this.RULE('SingleValue', () => {\n    this.SUBRULE(this.Value);\n  });\n\n  this.RULE('ContainedSubType', () => {\n    this.SUBRULE(this.Type);\n  });\n\n  this.RULE('GeneralConstraint', () => {});\n  this.RULE('ExceptionSpec', () => {});\n  this.RULE('TypeWithConstraint', () => {\n    this.addOrTokenList([k.SEQUENCE, k.SET]);\n    this.OR2([\n      {\n        ALT: () => {\n          this.SUBRULE(this.Constraint);\n        },\n      },\n      {\n        ALT: () => {\n          this.SUBRULE(this.SizeConstraint);\n        },\n      },\n    ]);\n    this.CONSUME(k.OF);\n    this.OR3([\n      {\n        ALT: () => {\n          this.SUBRULE(this.Type);\n        },\n      },\n      {\n        ALT: () => {\n          this.SUBRULE(this.NamedType);\n        },\n      },\n    ]);\n  });\n\n  this.RULE('ValueRange', () => {\n    // Refactored: ValueRange include SingleValue\n    this.SUBRULE(this.LowerEndpoint);\n    this.OPTION(() => {\n      this.CONSUME(RANGE_SEPARATOR);\n      this.SUBRULE(this.UpperEndpoint);\n    });\n  });\n  this.RULE('LowerEndpoint', () => {\n    this.SUBRULE(this.LowerEndValue);\n  });\n  this.RULE('UpperEndpoint', () => {\n    this.SUBRULE(this.UpperEndValue);\n  });\n  this.RULE('LowerEndValue', () => {\n    this.OR([\n      {\n        ALT: () => {\n          this.SUBRULE(this.Value);\n        },\n      },\n      {\n        ALT: () => {\n          this.CONSUME(k.MIN);\n        },\n      },\n    ]);\n  });\n  this.RULE('UpperEndValue', () => {\n    this.OR([\n      {\n        ALT: () => {\n          this.SUBRULE(this.Value);\n        },\n      },\n      {\n        ALT: () => {\n          this.CONSUME(k.MAX);\n        },\n      },\n    ]);\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"37b60104b21a8b215f6fc8a309c68f093c9c5455","contentHash":"4ef2264293ff3449004073623a4de2fba20c5ffceaac9f15db3fa3669579d24d"},"D:\\formation\\asn.1\\src\\analysis\\parser\\ImportsRules.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\parser\\ImportsRules.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":53}},"4":{"start":{"line":7,"column":4},"end":{"line":13,"column":7}},"5":{"start":{"line":8,"column":8},"end":{"line":12,"column":11}},"6":{"start":{"line":9,"column":12},"end":{"line":9,"column":50}},"7":{"start":{"line":10,"column":12},"end":{"line":10,"column":47}},"8":{"start":{"line":11,"column":12},"end":{"line":11,"column":50}},"9":{"start":{"line":14,"column":4},"end":{"line":18,"column":7}},"10":{"start":{"line":15,"column":8},"end":{"line":17,"column":11}},"11":{"start":{"line":16,"column":12},"end":{"line":16,"column":53}},"12":{"start":{"line":19,"column":4},"end":{"line":23,"column":7}},"13":{"start":{"line":20,"column":8},"end":{"line":22,"column":11}},"14":{"start":{"line":21,"column":12},"end":{"line":21,"column":49}},"15":{"start":{"line":24,"column":4},"end":{"line":28,"column":7}},"16":{"start":{"line":25,"column":8},"end":{"line":25,"column":38}},"17":{"start":{"line":26,"column":8},"end":{"line":26,"column":43}},"18":{"start":{"line":27,"column":8},"end":{"line":27,"column":49}},"19":{"start":{"line":29,"column":4},"end":{"line":36,"column":7}},"20":{"start":{"line":30,"column":8},"end":{"line":35,"column":11}},"21":{"start":{"line":33,"column":16},"end":{"line":33,"column":42}},"22":{"start":{"line":37,"column":4},"end":{"line":42,"column":7}},"23":{"start":{"line":38,"column":8},"end":{"line":41,"column":11}},"24":{"start":{"line":43,"column":4},"end":{"line":45,"column":7}},"25":{"start":{"line":44,"column":8},"end":{"line":44,"column":81}},"26":{"start":{"line":46,"column":4},"end":{"line":50,"column":7}},"27":{"start":{"line":48,"column":8},"end":{"line":48,"column":48}},"28":{"start":{"line":49,"column":8},"end":{"line":49,"column":46}},"29":{"start":{"line":51,"column":4},"end":{"line":53,"column":7}},"30":{"start":{"line":52,"column":8},"end":{"line":52,"column":66}},"31":{"start":{"line":55,"column":0},"end":{"line":55,"column":44}}},"fnMap":{"0":{"name":"initImportsRules","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":28},"end":{"line":54,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":25},"end":{"line":7,"column":26}},"loc":{"start":{"line":7,"column":31},"end":{"line":13,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":8,"column":20},"end":{"line":8,"column":21}},"loc":{"start":{"line":8,"column":26},"end":{"line":12,"column":9}},"line":8},"3":{"name":"(anonymous_3)","decl":{"start":{"line":14,"column":33},"end":{"line":14,"column":34}},"loc":{"start":{"line":14,"column":39},"end":{"line":18,"column":5}},"line":14},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":20},"end":{"line":15,"column":21}},"loc":{"start":{"line":15,"column":26},"end":{"line":17,"column":9}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":19,"column":39},"end":{"line":19,"column":40}},"loc":{"start":{"line":19,"column":45},"end":{"line":23,"column":5}},"line":19},"6":{"name":"(anonymous_6)","decl":{"start":{"line":20,"column":18},"end":{"line":20,"column":19}},"loc":{"start":{"line":20,"column":24},"end":{"line":22,"column":9}},"line":20},"7":{"name":"(anonymous_7)","decl":{"start":{"line":24,"column":35},"end":{"line":24,"column":36}},"loc":{"start":{"line":24,"column":41},"end":{"line":28,"column":5}},"line":24},"8":{"name":"(anonymous_8)","decl":{"start":{"line":29,"column":28},"end":{"line":29,"column":29}},"loc":{"start":{"line":29,"column":34},"end":{"line":36,"column":5}},"line":29},"9":{"name":"(anonymous_9)","decl":{"start":{"line":32,"column":17},"end":{"line":32,"column":18}},"loc":{"start":{"line":32,"column":23},"end":{"line":34,"column":13}},"line":32},"10":{"name":"(anonymous_10)","decl":{"start":{"line":37,"column":24},"end":{"line":37,"column":25}},"loc":{"start":{"line":37,"column":30},"end":{"line":42,"column":5}},"line":37},"11":{"name":"(anonymous_11)","decl":{"start":{"line":43,"column":27},"end":{"line":43,"column":28}},"loc":{"start":{"line":43,"column":33},"end":{"line":45,"column":5}},"line":43},"12":{"name":"(anonymous_12)","decl":{"start":{"line":46,"column":39},"end":{"line":46,"column":40}},"loc":{"start":{"line":46,"column":45},"end":{"line":50,"column":5}},"line":46},"13":{"name":"(anonymous_13)","decl":{"start":{"line":51,"column":36},"end":{"line":51,"column":37}},"loc":{"start":{"line":51,"column":42},"end":{"line":53,"column":5}},"line":51}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":7,"5":13,"6":8,"7":8,"8":8,"9":7,"10":8,"11":8,"12":7,"13":8,"14":8,"15":7,"16":8,"17":8,"18":8,"19":7,"20":8,"21":9,"22":7,"23":9,"24":7,"25":9,"26":7,"27":8,"28":8,"29":7,"30":8,"31":1},"f":{"0":7,"1":13,"2":8,"3":8,"4":8,"5":8,"6":8,"7":8,"8":8,"9":9,"10":9,"11":9,"12":8,"13":8},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/parser/ImportsRules.ts","sources":["D:/formation/asn.1/src/analysis/parser/ImportsRules.ts"],"names":[],"mappings":";;;AACA,4CAA2E;AAC3E,sDAAuC;AAEvC,SAAgB,gBAAgB;IAC9B,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE;QACxB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,OAAO,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACnC,IAAI,CAAC,OAAO,CAAC,uBAAW,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAChC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,GAAG,EAAE;QACtC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAClC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IAC3C,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;QAC3B,IAAI,CAAC,QAAQ,CAAC;YACZ,GAAG,EAAE,iBAAK;YACV,GAAG,EAAE,GAAG,EAAE;gBACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5B,CAAC;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE;QACvB,IAAI,CAAC,SAAS,CAAC;YACb,WAAW;YACX,2BAA2B;SAC5B,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE;QAC1B,IAAI,CAAC,cAAc,CAAC,CAAC,yBAAa,EAAE,sBAAU,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,GAAG,EAAE;QACtC,mBAAmB;QACnB,IAAI,CAAC,OAAO,CAAC,yBAAa,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,GAAG,EAAE;QACnC,IAAI,CAAC,SAAS,CAAC,CAAC,uBAAuB,EAAE,cAAc,CAAC,CAAC,CAAC;IAC5D,CAAC,CAAC,CAAC;AACL,CAAC;AAvDD,4CAuDC","sourcesContent":["import {ASN1CstParser} from '../ASN1CstParser';\nimport {COMMA, Identifier, SEMI_COLUMN, TypeReference} from '../ASN1Lexer';\nimport {k} from '../lexer/ASN1Keyword';\n\nexport function initImportsRules(this: ASN1CstParser) {\n  this.RULE('Imports', () => {\n    this.OPTION(() => {\n      this.CONSUME(k.IMPORTS);\n      this.SUBRULE(this.SymbolsImported);\n      this.CONSUME(SEMI_COLUMN);\n    });\n  });\n\n  this.RULE('SymbolsImported', () => {\n    this.OPTION(() => {\n      this.SUBRULE(this.SymbolsFromModuleList);\n    });\n  });\n\n  this.RULE('SymbolsFromModuleList', () => {\n    this.MANY(() => {\n      this.SUBRULE(this.SymbolsFromModule);\n    });\n  });\n\n  this.RULE('SymbolsFromModule', () => {\n    this.SUBRULE(this.SymbolList);\n    this.CONSUME(k.FROM);\n    this.SUBRULE(this.GlobalModuleReference);\n  });\n\n  this.RULE('SymbolList', () => {\n    this.MANY_SEP({\n      SEP: COMMA,\n      DEF: () => {\n        this.SUBRULE(this.Symbol);\n      },\n    });\n  });\n\n  this.RULE('Symbol', () => {\n    this.addOrList([\n      'Reference',\n      // 'ParameterizedReference'\n    ]);\n  });\n  this.RULE('Reference', () => {\n    this.addOrTokenList([TypeReference, Identifier]);\n  });\n\n  this.RULE('GlobalModuleReference', () => {\n    // module reference\n    this.CONSUME(TypeReference);\n    this.SUBRULE(this.AssignedIdentifier);\n  });\n\n  this.RULE('AssignedIdentifier', () => {\n    this.addOrList(['ObjectIdentifierValue', 'DefinedValue']);\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9e4407e28dd6bccb1ab27f961216c6e12587e24f","contentHash":"b0829282417703b897f277be7f9e398aa5d7d95ace7d5c9c7f94fd7080d1743d"},"D:\\formation\\asn.1\\src\\analysis\\parser\\IntegerTypeRules.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\parser\\IntegerTypeRules.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":53}},"4":{"start":{"line":7,"column":4},"end":{"line":14,"column":7}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":46}},"6":{"start":{"line":9,"column":8},"end":{"line":13,"column":11}},"7":{"start":{"line":10,"column":12},"end":{"line":10,"column":46}},"8":{"start":{"line":11,"column":12},"end":{"line":11,"column":47}},"9":{"start":{"line":12,"column":12},"end":{"line":12,"column":46}},"10":{"start":{"line":15,"column":4},"end":{"line":21,"column":7}},"11":{"start":{"line":16,"column":8},"end":{"line":16,"column":39}},"12":{"start":{"line":17,"column":8},"end":{"line":20,"column":11}},"13":{"start":{"line":18,"column":12},"end":{"line":18,"column":44}},"14":{"start":{"line":19,"column":12},"end":{"line":19,"column":47}},"15":{"start":{"line":22,"column":4},"end":{"line":27,"column":7}},"16":{"start":{"line":23,"column":8},"end":{"line":23,"column":45}},"17":{"start":{"line":24,"column":8},"end":{"line":24,"column":48}},"18":{"start":{"line":25,"column":8},"end":{"line":25,"column":57}},"19":{"start":{"line":26,"column":8},"end":{"line":26,"column":48}},"20":{"start":{"line":28,"column":4},"end":{"line":41,"column":7}},"21":{"start":{"line":29,"column":8},"end":{"line":40,"column":11}},"22":{"start":{"line":32,"column":20},"end":{"line":32,"column":58}},"23":{"start":{"line":37,"column":20},"end":{"line":37,"column":66}},"24":{"start":{"line":43,"column":0},"end":{"line":43,"column":52}}},"fnMap":{"0":{"name":"initIntegerTypeRules","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":29}},"loc":{"start":{"line":6,"column":32},"end":{"line":42,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":29},"end":{"line":7,"column":30}},"loc":{"start":{"line":7,"column":35},"end":{"line":14,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":20},"end":{"line":9,"column":21}},"loc":{"start":{"line":9,"column":26},"end":{"line":13,"column":9}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":33},"end":{"line":15,"column":34}},"loc":{"start":{"line":15,"column":39},"end":{"line":21,"column":5}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":17,"column":20},"end":{"line":17,"column":21}},"loc":{"start":{"line":17,"column":26},"end":{"line":20,"column":9}},"line":17},"5":{"name":"(anonymous_5)","decl":{"start":{"line":22,"column":29},"end":{"line":22,"column":30}},"loc":{"start":{"line":22,"column":35},"end":{"line":27,"column":5}},"line":22},"6":{"name":"(anonymous_6)","decl":{"start":{"line":28,"column":30},"end":{"line":28,"column":31}},"loc":{"start":{"line":28,"column":36},"end":{"line":41,"column":5}},"line":28},"7":{"name":"(anonymous_7)","decl":{"start":{"line":31,"column":21},"end":{"line":31,"column":22}},"loc":{"start":{"line":31,"column":27},"end":{"line":33,"column":17}},"line":31},"8":{"name":"(anonymous_8)","decl":{"start":{"line":36,"column":21},"end":{"line":36,"column":22}},"loc":{"start":{"line":36,"column":27},"end":{"line":38,"column":17}},"line":36}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":7,"5":56,"6":56,"7":7,"8":7,"9":7,"10":7,"11":7,"12":7,"13":7,"14":7,"15":7,"16":7,"17":7,"18":7,"19":7,"20":7,"21":7,"22":7,"23":7,"24":1},"f":{"0":7,"1":56,"2":7,"3":7,"4":7,"5":7,"6":7,"7":7,"8":7},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/parser/IntegerTypeRules.ts","sources":["D:/formation/asn.1/src/analysis/parser/IntegerTypeRules.ts"],"names":[],"mappings":";;;AACA,4CASsB;AACtB,sDAAuC;AAEvC,SAAgB,oBAAoB;IAClC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,EAAE;QAC5B,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,OAAO,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,mBAAO,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACnC,IAAI,CAAC,OAAO,CAAC,mBAAO,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,iBAAK,CAAC,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,EAAE;QAC5B,IAAI,CAAC,OAAO,CAAC,sBAAU,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,yBAAa,CAAC,CAAC;QAC5B,IAAI,CAAC,SAAS,CAAC,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,OAAO,CAAC,yBAAa,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,EAAE;QAC7B,IAAI,CAAC,EAAE,CAAC;YACN;gBACE,GAAG,EAAE,GAAG,EAAE;oBACR,IAAI,CAAC,OAAO,CAAC,uBAAW,CAAC,CAAC;gBAC5B,CAAC;aACF;YACD;gBACE,GAAG,EAAE,GAAG,EAAE;oBACR,IAAI,CAAC,OAAO,CAAC,+BAAmB,CAAC,CAAC;gBACpC,CAAC;aACF;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AAvCD,oDAuCC","sourcesContent":["import {ASN1CstParser} from '../ASN1CstParser';\nimport {\n  COMMA,\n  Identifier,\n  L_CURLY,\n  L_PARENTHESIS,\n  NegativeNumberToken,\n  NumberToken,\n  R_CURLY,\n  R_PARENTHESIS,\n} from '../ASN1Lexer';\nimport {k} from '../lexer/ASN1Keyword';\n\nexport function initIntegerTypeRules(this: ASN1CstParser) {\n  this.RULE('IntegerType', () => {\n    this.CONSUME(k.INTEGER);\n    this.OPTION(() => {\n      this.CONSUME(L_CURLY);\n      this.SUBRULE(this.NamedNumberList);\n      this.CONSUME(R_CURLY);\n    });\n  });\n\n  this.RULE('NamedNumberList', () => {\n    this.SUBRULE(this.NamedNumber);\n    this.OPTION(() => {\n      this.CONSUME(COMMA);\n      this.SUBRULE(this.NamedNumberList);\n    });\n  });\n\n  this.RULE('NamedNumber', () => {\n    this.CONSUME(Identifier);\n    this.CONSUME(L_PARENTHESIS);\n    this.addOrList(['SignedNumber', 'DefinedValue']);\n    this.CONSUME(R_PARENTHESIS);\n  });\n\n  this.RULE('SignedNumber', () => {\n    this.OR([\n      {\n        ALT: () => {\n          this.CONSUME(NumberToken);\n        },\n      },\n      {\n        ALT: () => {\n          this.CONSUME(NegativeNumberToken);\n        },\n      },\n    ]);\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"193f2f8324e2bccdc2876fba39e9ba0b74e293e4","contentHash":"083a8e09a4fb8ed483cb9dfa54c5fe33124d8b33991a517c1ee2bb34335c2c03"},"D:\\formation\\asn.1\\src\\analysis\\parser\\ModuleIdentifierRules.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\parser\\ModuleIdentifierRules.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":43}},"3":{"start":{"line":7,"column":4},"end":{"line":10,"column":7}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":48}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":52}},"6":{"start":{"line":11,"column":4},"end":{"line":22,"column":7}},"7":{"start":{"line":12,"column":8},"end":{"line":21,"column":11}},"8":{"start":{"line":15,"column":20},"end":{"line":15,"column":53}},"9":{"start":{"line":23,"column":4},"end":{"line":27,"column":7}},"10":{"start":{"line":24,"column":8},"end":{"line":24,"column":42}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":56}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":42}},"13":{"start":{"line":28,"column":4},"end":{"line":32,"column":7}},"14":{"start":{"line":29,"column":8},"end":{"line":31,"column":11}},"15":{"start":{"line":30,"column":12},"end":{"line":30,"column":56}},"16":{"start":{"line":33,"column":4},"end":{"line":35,"column":7}},"17":{"start":{"line":34,"column":8},"end":{"line":34,"column":80}},"18":{"start":{"line":36,"column":4},"end":{"line":38,"column":7}},"19":{"start":{"line":37,"column":8},"end":{"line":37,"column":46}},"20":{"start":{"line":39,"column":4},"end":{"line":44,"column":7}},"21":{"start":{"line":40,"column":8},"end":{"line":40,"column":45}},"22":{"start":{"line":41,"column":8},"end":{"line":41,"column":48}},"23":{"start":{"line":42,"column":8},"end":{"line":42,"column":46}},"24":{"start":{"line":43,"column":8},"end":{"line":43,"column":48}},"25":{"start":{"line":46,"column":0},"end":{"line":46,"column":62}}},"fnMap":{"0":{"name":"initModuleIdentifierRules","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":34}},"loc":{"start":{"line":5,"column":37},"end":{"line":45,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":34},"end":{"line":7,"column":35}},"loc":{"start":{"line":7,"column":40},"end":{"line":10,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":42},"end":{"line":11,"column":43}},"loc":{"start":{"line":11,"column":48},"end":{"line":22,"column":5}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":14,"column":21},"end":{"line":14,"column":22}},"loc":{"start":{"line":14,"column":27},"end":{"line":16,"column":17}},"line":14},"4":{"name":"(anonymous_4)","decl":{"start":{"line":19,"column":21},"end":{"line":19,"column":22}},"loc":{"start":{"line":19,"column":27},"end":{"line":19,"column":30}},"line":19},"5":{"name":"(anonymous_5)","decl":{"start":{"line":23,"column":31},"end":{"line":23,"column":32}},"loc":{"start":{"line":23,"column":37},"end":{"line":27,"column":5}},"line":23},"6":{"name":"(anonymous_6)","decl":{"start":{"line":28,"column":46},"end":{"line":28,"column":47}},"loc":{"start":{"line":28,"column":52},"end":{"line":32,"column":5}},"line":28},"7":{"name":"(anonymous_7)","decl":{"start":{"line":29,"column":18},"end":{"line":29,"column":19}},"loc":{"start":{"line":29,"column":24},"end":{"line":31,"column":9}},"line":29},"8":{"name":"(anonymous_8)","decl":{"start":{"line":33,"column":42},"end":{"line":33,"column":43}},"loc":{"start":{"line":33,"column":48},"end":{"line":35,"column":5}},"line":33},"9":{"name":"(anonymous_9)","decl":{"start":{"line":36,"column":38},"end":{"line":36,"column":39}},"loc":{"start":{"line":36,"column":44},"end":{"line":38,"column":5}},"line":36},"10":{"name":"(anonymous_10)","decl":{"start":{"line":39,"column":45},"end":{"line":39,"column":46}},"loc":{"start":{"line":39,"column":51},"end":{"line":44,"column":5}},"line":39}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":7,"4":13,"5":13,"6":7,"7":13,"8":10,"9":7,"10":10,"11":10,"12":10,"13":7,"14":10,"15":30,"16":7,"17":30,"18":7,"19":10,"20":7,"21":27,"22":27,"23":27,"24":27,"25":1},"f":{"0":7,"1":13,"2":13,"3":10,"4":10,"5":10,"6":10,"7":30,"8":30,"9":10,"10":27},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/parser/ModuleIdentifierRules.ts","sources":["D:/formation/asn.1/src/analysis/parser/ModuleIdentifierRules.ts"],"names":[],"mappings":";;;AAEA,4CAQsB;AAEtB,SAAgB,yBAAyB;IACvC,cAAc;IACd,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,GAAG,EAAE;QACjC,IAAI,CAAC,OAAO,CAAC,yBAAa,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,0BAA0B,EAAE,GAAG,EAAE;QACzC,IAAI,CAAC,EAAE,CAAC;YACN;gBACE,GAAG,EAAE,GAAG,EAAE;oBACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBACnC,CAAC;aACF;YACD;gBACE,GAAG,EAAE,GAAG,EAAE,GAAE,CAAC;aACd;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE;QAC9B,IAAI,CAAC,OAAO,CAAC,mBAAO,CAAC,CAAC;QACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QAChD,IAAI,CAAC,OAAO,CAAC,mBAAO,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,GAAG,EAAE;QAC7C,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,0BAA0B,EAAE,GAAG,EAAE;QACzC,IAAI,CAAC,SAAS,CAAC,CAAC,sBAAsB,EAAE,6BAA6B,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,GAAG,EAAE;QACrC,IAAI,CAAC,OAAO,CAAC,uBAAW,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE;QAC5C,IAAI,CAAC,OAAO,CAAC,sBAAU,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,yBAAa,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,uBAAW,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,yBAAa,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;AACL,CAAC;AA9CD,8DA8CC","sourcesContent":["import {ASN1CstParser} from '../ASN1CstParser';\n\nimport {\n  Identifier,\n  TypeReference,\n  L_CURLY,\n  R_CURLY,\n  R_PARENTHESIS,\n  L_PARENTHESIS,\n  NumberToken,\n} from '../ASN1Lexer';\n\nexport function initModuleIdentifierRules(this: ASN1CstParser) {\n  // Clause 13.1\n  this.RULE('ModuleIdentifier', () => {\n    this.CONSUME(TypeReference);\n    this.SUBRULE(this.DefinitiveIdentification);\n  });\n\n  this.RULE('DefinitiveIdentification', () => {\n    this.OR([\n      {\n        ALT: () => {\n          this.SUBRULE(this.DefinitiveOID);\n        },\n      },\n      {\n        ALT: () => {},\n      },\n    ]);\n  });\n\n  this.RULE('DefinitiveOID', () => {\n    this.CONSUME(L_CURLY);\n    this.SUBRULE(this.DefinitiveObjIdComponentList);\n    this.CONSUME(R_CURLY);\n  });\n\n  this.RULE('DefinitiveObjIdComponentList', () => {\n    this.MANY(() => {\n      this.SUBRULE(this.DefinitiveObjIdComponent);\n    });\n  });\n\n  this.RULE('DefinitiveObjIdComponent', () => {\n    this.addOrList(['DefinitiveNumberForm', 'DefinitiveNameAndNumberForm']);\n  });\n\n  this.RULE('DefinitiveNumberForm', () => {\n    this.CONSUME(NumberToken);\n  });\n\n  this.RULE('DefinitiveNameAndNumberForm', () => {\n    this.CONSUME(Identifier);\n    this.CONSUME(L_PARENTHESIS);\n    this.CONSUME(NumberToken);\n    this.CONSUME(R_PARENTHESIS);\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"77ad1998517b4cff0cba75f0862bf78ba0ff7989","contentHash":"b951d8d7c9fd5a588abec95503fe39350b980ca8c7fd5c38e9c07204bd4d5e53"},"D:\\formation\\asn.1\\src\\analysis\\parser\\ObjectIdentifierValueRules.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\parser\\ObjectIdentifierValueRules.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":43}},"3":{"start":{"line":6,"column":4},"end":{"line":24,"column":7}},"4":{"start":{"line":7,"column":8},"end":{"line":23,"column":11}},"5":{"start":{"line":10,"column":20},"end":{"line":10,"column":54}},"6":{"start":{"line":11,"column":20},"end":{"line":11,"column":52}},"7":{"start":{"line":12,"column":20},"end":{"line":12,"column":59}},"8":{"start":{"line":13,"column":20},"end":{"line":13,"column":54}},"9":{"start":{"line":18,"column":20},"end":{"line":18,"column":55}},"10":{"start":{"line":19,"column":20},"end":{"line":19,"column":60}},"11":{"start":{"line":20,"column":20},"end":{"line":20,"column":55}},"12":{"start":{"line":25,"column":4},"end":{"line":29,"column":7}},"13":{"start":{"line":26,"column":8},"end":{"line":28,"column":11}},"14":{"start":{"line":27,"column":12},"end":{"line":27,"column":47}},"15":{"start":{"line":30,"column":4},"end":{"line":32,"column":7}},"16":{"start":{"line":31,"column":8},"end":{"line":31,"column":60}},"17":{"start":{"line":33,"column":4},"end":{"line":38,"column":7}},"18":{"start":{"line":34,"column":8},"end":{"line":34,"column":45}},"19":{"start":{"line":35,"column":8},"end":{"line":35,"column":48}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":38}},"21":{"start":{"line":37,"column":8},"end":{"line":37,"column":48}},"22":{"start":{"line":39,"column":4},"end":{"line":47,"column":7}},"23":{"start":{"line":40,"column":8},"end":{"line":46,"column":11}},"24":{"start":{"line":43,"column":20},"end":{"line":43,"column":58}},"25":{"start":{"line":49,"column":0},"end":{"line":49,"column":72}}},"fnMap":{"0":{"name":"initObjectIdentifierValueRules","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":39}},"loc":{"start":{"line":5,"column":42},"end":{"line":48,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":39},"end":{"line":6,"column":40}},"loc":{"start":{"line":6,"column":45},"end":{"line":24,"column":5}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":21},"end":{"line":9,"column":22}},"loc":{"start":{"line":9,"column":27},"end":{"line":14,"column":17}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":21},"end":{"line":17,"column":22}},"loc":{"start":{"line":17,"column":27},"end":{"line":21,"column":17}},"line":17},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":37},"end":{"line":25,"column":38}},"loc":{"start":{"line":25,"column":43},"end":{"line":29,"column":5}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":26,"column":18},"end":{"line":26,"column":19}},"loc":{"start":{"line":26,"column":24},"end":{"line":28,"column":9}},"line":26},"6":{"name":"(anonymous_6)","decl":{"start":{"line":30,"column":33},"end":{"line":30,"column":34}},"loc":{"start":{"line":30,"column":39},"end":{"line":32,"column":5}},"line":30},"7":{"name":"(anonymous_7)","decl":{"start":{"line":33,"column":35},"end":{"line":33,"column":36}},"loc":{"start":{"line":33,"column":41},"end":{"line":38,"column":5}},"line":33},"8":{"name":"(anonymous_8)","decl":{"start":{"line":39,"column":28},"end":{"line":39,"column":29}},"loc":{"start":{"line":39,"column":34},"end":{"line":47,"column":5}},"line":39},"9":{"name":"(anonymous_9)","decl":{"start":{"line":42,"column":21},"end":{"line":42,"column":22}},"loc":{"start":{"line":42,"column":27},"end":{"line":44,"column":17}},"line":42}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":7,"4":10,"5":8,"6":8,"7":8,"8":8,"9":9,"10":9,"11":9,"12":7,"13":10,"14":23,"15":7,"16":23,"17":7,"18":22,"19":22,"20":22,"21":22,"22":7,"23":23,"24":23,"25":1},"f":{"0":7,"1":10,"2":8,"3":9,"4":10,"5":23,"6":23,"7":22,"8":23,"9":23},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/parser/ObjectIdentifierValueRules.ts","sources":["D:/formation/asn.1/src/analysis/parser/ObjectIdentifierValueRules.ts"],"names":[],"mappings":";;;AACA,4CAOsB;AAEtB,SAAgB,8BAA8B;IAC5C,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,GAAG,EAAE;QACtC,IAAI,CAAC,EAAE,CAAC;YACN;gBACE,GAAG,EAAE,GAAG,EAAE;oBACR,IAAI,CAAC,OAAO,CAAC,mBAAO,CAAC,CAAC;oBACtB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBACvC,IAAI,CAAC,OAAO,CAAC,mBAAO,CAAC,CAAC;gBACxB,CAAC;aACF;YACD;gBACE,GAAG,EAAE,GAAG,EAAE;oBACR,IAAI,CAAC,QAAQ,CAAC,mBAAO,CAAC,CAAC;oBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;oBACxC,IAAI,CAAC,QAAQ,CAAC,mBAAO,CAAC,CAAC;gBACzB,CAAC;aACF;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACpC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAChC,IAAI,CAAC,SAAS,CAAC,CAAC,mBAAmB,EAAE,YAAY,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAClC,IAAI,CAAC,OAAO,CAAC,sBAAU,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,yBAAa,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9B,IAAI,CAAC,OAAO,CAAC,yBAAa,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;QAC3B,IAAI,CAAC,EAAE,CAAC;YACN;gBACE,GAAG,EAAE,GAAG,EAAE;oBACR,IAAI,CAAC,OAAO,CAAC,uBAAW,CAAC,CAAC;gBAC5B,CAAC;aACF;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC;AA/CD,wEA+CC","sourcesContent":["import {ASN1CstParser} from '../ASN1CstParser';\nimport {\n  Identifier,\n  L_CURLY,\n  L_PARENTHESIS,\n  NumberToken,\n  R_CURLY,\n  R_PARENTHESIS,\n} from '../ASN1Lexer';\n\nexport function initObjectIdentifierValueRules(this: ASN1CstParser) {\n  this.RULE('ObjectIdentifierValue', () => {\n    this.OR([\n      {\n        ALT: () => {\n          this.CONSUME(L_CURLY);\n          this.SUBRULE(this.DefinedValue);\n          this.SUBRULE(this.ObjIdComponentsList);\n          this.CONSUME(R_CURLY);\n        },\n      },\n      {\n        ALT: () => {\n          this.CONSUME1(L_CURLY);\n          this.SUBRULE1(this.ObjIdComponentsList);\n          this.CONSUME1(R_CURLY);\n        },\n      },\n    ]);\n  });\n\n  this.RULE('ObjIdComponentsList', () => {\n    this.MANY(() => {\n      this.SUBRULE(this.ObjIdComponents);\n    });\n  });\n\n  this.RULE('ObjIdComponents', () => {\n    this.addOrList(['NameAndNumberForm', 'NumberForm']);\n  });\n\n  this.RULE('NameAndNumberForm', () => {\n    this.CONSUME(Identifier);\n    this.CONSUME(L_PARENTHESIS);\n    this.SUBRULE(this.NumberForm);\n    this.CONSUME(R_PARENTHESIS);\n  });\n\n  this.RULE('NumberForm', () => {\n    this.OR([\n      {\n        ALT: () => {\n          this.CONSUME(NumberToken);\n        },\n      },\n    ]);\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8785d03f4af1b23bc671bed91d15be59ed170b38","contentHash":"d6498359448183d9acbf179f66c2235efad868accf0e57c84b306b1e169399d2"},"D:\\formation\\asn.1\\src\\analysis\\parser\\ReferencedTypeRules.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\parser\\ReferencedTypeRules.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":53}},"4":{"start":{"line":7,"column":4},"end":{"line":10,"column":7}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":54}},"6":{"start":{"line":11,"column":4},"end":{"line":14,"column":7}},"7":{"start":{"line":13,"column":8},"end":{"line":13,"column":88}},"8":{"start":{"line":15,"column":4},"end":{"line":17,"column":7}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":48}},"10":{"start":{"line":19,"column":0},"end":{"line":19,"column":58}}},"fnMap":{"0":{"name":"initReferencedTypeRules","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":32}},"loc":{"start":{"line":6,"column":35},"end":{"line":18,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":32},"end":{"line":7,"column":33}},"loc":{"start":{"line":7,"column":38},"end":{"line":10,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":11,"column":28},"end":{"line":11,"column":29}},"loc":{"start":{"line":11,"column":34},"end":{"line":14,"column":5}},"line":11},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":29},"end":{"line":15,"column":30}},"loc":{"start":{"line":15,"column":35},"end":{"line":17,"column":5}},"line":15}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":7,"5":305,"6":7,"7":9,"8":7,"9":303,"10":1},"f":{"0":7,"1":305,"2":9,"3":303},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/parser/ReferencedTypeRules.ts","sources":["D:/formation/asn.1/src/analysis/parser/ReferencedTypeRules.ts"],"names":[],"mappings":";;;AACA,4CAA2C;AAC3C,sDAAuC;AAEvC,SAAgB,uBAAuB;IACrC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC/B,OAAO;QACP,IAAI,CAAC,SAAS,CAAC,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;QAC3B,OAAO;QACP,IAAI,CAAC,cAAc,CAAC,CAAC,eAAC,CAAC,eAAe,EAAE,eAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,EAAE;QAC5B,IAAI,CAAC,OAAO,CAAC,yBAAa,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;AACL,CAAC;AAdD,0DAcC","sourcesContent":["import {ASN1CstParser} from '../ASN1CstParser';\nimport {TypeReference} from '../ASN1Lexer';\nimport {k} from '../lexer/ASN1Keyword';\n\nexport function initReferencedTypeRules(this: ASN1CstParser) {\n  this.RULE('ReferencedType', () => {\n    // 17.3\n    this.addOrList(['DefinedType', 'UsefulType']);\n  });\n\n  this.RULE('UsefulType', () => {\n    // 17.3\n    this.addOrTokenList([k.GeneralizedTime, k.UTCTime]);\n  });\n\n  this.RULE('DefinedType', () => {\n    this.CONSUME(TypeReference);\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2bcc9fbaa1753e032ec2108f60ab9b74effc73d0","contentHash":"3b55835a079af7c0b986857e6b47dc753e8624701627f8e6d16e3ffbf33a8553"},"D:\\formation\\asn.1\\src\\analysis\\parser\\SequenceOfTypeRules.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\parser\\SequenceOfTypeRules.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":53}},"3":{"start":{"line":6,"column":4},"end":{"line":10,"column":7}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":47}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":41}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":32}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":58}}},"fnMap":{"0":{"name":"initSequenceOfTypeRules","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":32}},"loc":{"start":{"line":5,"column":35},"end":{"line":11,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":32},"end":{"line":6,"column":33}},"loc":{"start":{"line":6,"column":38},"end":{"line":10,"column":5}},"line":6}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":7,"4":31,"5":31,"6":31,"7":1},"f":{"0":7,"1":31},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/parser/SequenceOfTypeRules.ts","sources":["D:/formation/asn.1/src/analysis/parser/SequenceOfTypeRules.ts"],"names":[],"mappings":";;;AACA,sDAAuC;AAEvC,SAAgB,uBAAuB;IACrC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC/B,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,QAAQ,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,EAAE,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;AACL,CAAC;AAND,0DAMC","sourcesContent":["import {ASN1CstParser} from '../ASN1CstParser';\nimport {k} from '../lexer/ASN1Keyword';\n\nexport function initSequenceOfTypeRules(this: ASN1CstParser) {\n  this.RULE('SequenceOfType', () => {\n    this.CONSUME(k.SEQUENCE);\n    this.CONSUME(k.OF);\n    this.SUBRULE(this.Type);\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f012136919662b95621686bd3998672fad8bbd4c","contentHash":"9e6c6f10cc2f650dffa6f8cf8e4f106d4796163ab98cd572acbd04a079e2db63"},"D:\\formation\\asn.1\\src\\analysis\\parser\\SequenceTypeRules.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\parser\\SequenceTypeRules.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":53}},"4":{"start":{"line":7,"column":4},"end":{"line":20,"column":7}},"5":{"start":{"line":8,"column":8},"end":{"line":19,"column":11}},"6":{"start":{"line":11,"column":20},"end":{"line":11,"column":59}},"7":{"start":{"line":12,"column":20},"end":{"line":12,"column":54}},"8":{"start":{"line":13,"column":20},"end":{"line":15,"column":23}},"9":{"start":{"line":14,"column":24},"end":{"line":14,"column":62}},"10":{"start":{"line":16,"column":20},"end":{"line":16,"column":54}},"11":{"start":{"line":21,"column":4},"end":{"line":29,"column":7}},"12":{"start":{"line":22,"column":8},"end":{"line":28,"column":11}},"13":{"start":{"line":25,"column":20},"end":{"line":25,"column":57}},"14":{"start":{"line":30,"column":4},"end":{"line":36,"column":7}},"15":{"start":{"line":31,"column":8},"end":{"line":31,"column":41}},"16":{"start":{"line":32,"column":8},"end":{"line":35,"column":11}},"17":{"start":{"line":33,"column":12},"end":{"line":33,"column":44}},"18":{"start":{"line":34,"column":12},"end":{"line":34,"column":49}},"19":{"start":{"line":37,"column":4},"end":{"line":54,"column":7}},"20":{"start":{"line":38,"column":8},"end":{"line":38,"column":37}},"21":{"start":{"line":39,"column":8},"end":{"line":53,"column":11}},"22":{"start":{"line":40,"column":12},"end":{"line":52,"column":15}},"23":{"start":{"line":43,"column":24},"end":{"line":43,"column":62}},"24":{"start":{"line":44,"column":24},"end":{"line":44,"column":49}},"25":{"start":{"line":49,"column":24},"end":{"line":49,"column":63}},"26":{"start":{"line":55,"column":4},"end":{"line":58,"column":7}},"27":{"start":{"line":56,"column":8},"end":{"line":56,"column":45}},"28":{"start":{"line":57,"column":8},"end":{"line":57,"column":32}},"29":{"start":{"line":60,"column":0},"end":{"line":60,"column":54}}},"fnMap":{"0":{"name":"initSequenceTypeRules","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":30}},"loc":{"start":{"line":6,"column":33},"end":{"line":59,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":30},"end":{"line":7,"column":31}},"loc":{"start":{"line":7,"column":36},"end":{"line":20,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":21},"end":{"line":10,"column":22}},"loc":{"start":{"line":10,"column":27},"end":{"line":17,"column":17}},"line":10},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":32},"end":{"line":13,"column":33}},"loc":{"start":{"line":13,"column":38},"end":{"line":15,"column":21}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":21,"column":36},"end":{"line":21,"column":37}},"loc":{"start":{"line":21,"column":42},"end":{"line":29,"column":5}},"line":21},"5":{"name":"(anonymous_5)","decl":{"start":{"line":24,"column":21},"end":{"line":24,"column":22}},"loc":{"start":{"line":24,"column":27},"end":{"line":26,"column":17}},"line":24},"6":{"name":"(anonymous_6)","decl":{"start":{"line":30,"column":35},"end":{"line":30,"column":36}},"loc":{"start":{"line":30,"column":41},"end":{"line":36,"column":5}},"line":30},"7":{"name":"(anonymous_7)","decl":{"start":{"line":32,"column":20},"end":{"line":32,"column":21}},"loc":{"start":{"line":32,"column":26},"end":{"line":35,"column":9}},"line":32},"8":{"name":"(anonymous_8)","decl":{"start":{"line":37,"column":31},"end":{"line":37,"column":32}},"loc":{"start":{"line":37,"column":37},"end":{"line":54,"column":5}},"line":37},"9":{"name":"(anonymous_9)","decl":{"start":{"line":39,"column":20},"end":{"line":39,"column":21}},"loc":{"start":{"line":39,"column":26},"end":{"line":53,"column":9}},"line":39},"10":{"name":"(anonymous_10)","decl":{"start":{"line":42,"column":25},"end":{"line":42,"column":26}},"loc":{"start":{"line":42,"column":31},"end":{"line":45,"column":21}},"line":42},"11":{"name":"(anonymous_11)","decl":{"start":{"line":48,"column":25},"end":{"line":48,"column":26}},"loc":{"start":{"line":48,"column":31},"end":{"line":50,"column":21}},"line":48},"12":{"name":"(anonymous_12)","decl":{"start":{"line":55,"column":27},"end":{"line":55,"column":28}},"loc":{"start":{"line":55,"column":33},"end":{"line":58,"column":5}},"line":55}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":7,"5":82,"6":82,"7":82,"8":82,"9":82,"10":82,"11":7,"12":82,"13":82,"14":7,"15":344,"16":344,"17":269,"18":269,"19":7,"20":344,"21":344,"22":129,"23":8,"24":8,"25":128,"26":7,"27":352,"28":352,"29":1},"f":{"0":7,"1":82,"2":82,"3":82,"4":82,"5":82,"6":344,"7":269,"8":344,"9":129,"10":8,"11":128,"12":352},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/parser/SequenceTypeRules.ts","sources":["D:/formation/asn.1/src/analysis/parser/SequenceTypeRules.ts"],"names":[],"mappings":";;;AACA,4CAAiE;AACjE,sDAAuC;AAEvC,SAAgB,qBAAqB;IACnC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,EAAE;QAC7B,IAAI,CAAC,EAAE,CAAC;YACN;gBACE,GAAG,EAAE,GAAG,EAAE;oBACR,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,QAAQ,CAAC,CAAC;oBACzB,IAAI,CAAC,OAAO,CAAC,mBAAO,CAAC,CAAC;oBACtB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;wBACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;oBACxC,CAAC,CAAC,CAAC;oBACH,IAAI,CAAC,OAAO,CAAC,mBAAO,CAAC,CAAC;gBACxB,CAAC;aACF;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,GAAG,EAAE;QACnC,IAAI,CAAC,EAAE,CAAC;YACN;gBACE,GAAG,EAAE,GAAG,EAAE;oBACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBACvC,CAAC;aACF;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,GAAG,EAAE;QAClC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,OAAO,CAAC,iBAAK,CAAC,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,EAAE;QAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,EAAE,CAAC;gBACN;oBACE,GAAG,EAAE,GAAG,EAAE;wBACR,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,OAAO,CAAC,CAAC;wBACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC3B,CAAC;iBACF;gBACD;oBACE,GAAG,EAAE,GAAG,EAAE;wBACR,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,QAAQ,CAAC,CAAC;oBAC3B,CAAC;iBACF;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,EAAE;QAC1B,IAAI,CAAC,OAAO,CAAC,sBAAU,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;AACL,CAAC;AAzDD,sDAyDC","sourcesContent":["import {ASN1CstParser} from '../ASN1CstParser';\nimport {COMMA, Identifier, L_CURLY, R_CURLY} from '../ASN1Lexer';\nimport {k} from '../lexer/ASN1Keyword';\n\nexport function initSequenceTypeRules(this: ASN1CstParser) {\n  this.RULE('SequenceType', () => {\n    this.OR([\n      {\n        ALT: () => {\n          this.CONSUME(k.SEQUENCE);\n          this.CONSUME(L_CURLY);\n          this.OPTION(() => {\n            this.SUBRULE(this.ComponentTypeLists);\n          });\n          this.CONSUME(R_CURLY);\n        },\n      },\n    ]);\n  });\n\n  this.RULE('ComponentTypeLists', () => {\n    this.OR([\n      {\n        ALT: () => {\n          this.SUBRULE(this.ComponentTypeList);\n        },\n      },\n    ]);\n  });\n\n  this.RULE('ComponentTypeList', () => {\n    this.SUBRULE(this.ComponentType);\n    this.OPTION(() => {\n      this.CONSUME(COMMA);\n      this.SUBRULE(this.ComponentTypeList);\n    });\n  });\n\n  this.RULE('ComponentType', () => {\n    this.SUBRULE(this.NamedType);\n    this.OPTION(() => {\n      this.OR([\n        {\n          ALT: () => {\n            this.CONSUME(k.DEFAULT);\n            this.SUBRULE(this.Value);\n          },\n        },\n        {\n          ALT: () => {\n            this.CONSUME(k.OPTIONAL);\n          },\n        },\n      ]);\n    });\n  });\n\n  this.RULE('NamedType', () => {\n    this.CONSUME(Identifier);\n    this.SUBRULE(this.Type);\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3b28be7932d9c6d7cc2481853975917a5ee0b740","contentHash":"694da8c0ae4fcec9cb32619c6040ada2d6903bace5a2fb9dbabee52aa16c9218"},"D:\\formation\\asn.1\\src\\analysis\\parser\\SizeConstraintRules.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\parser\\SizeConstraintRules.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":53}},"3":{"start":{"line":6,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":43}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":38}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":58}}},"fnMap":{"0":{"name":"initSizeConstraintRules","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":32}},"loc":{"start":{"line":5,"column":35},"end":{"line":10,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":32},"end":{"line":6,"column":33}},"loc":{"start":{"line":6,"column":38},"end":{"line":9,"column":5}},"line":6}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":7,"4":13,"5":13,"6":1},"f":{"0":7,"1":13},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/parser/SizeConstraintRules.ts","sources":["D:/formation/asn.1/src/analysis/parser/SizeConstraintRules.ts"],"names":[],"mappings":";;;AACA,sDAAuC;AAEvC,SAAgB,uBAAuB;IACrC,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC/B,IAAI,CAAC,OAAO,CAAC,eAAC,CAAC,IAAI,CAAC,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;AACL,CAAC;AALD,0DAKC","sourcesContent":["import {ASN1CstParser} from '../ASN1CstParser';\nimport {k} from '../lexer/ASN1Keyword';\n\nexport function initSizeConstraintRules(this: ASN1CstParser) {\n  this.RULE('SizeConstraint', () => {\n    this.CONSUME(k.SIZE);\n    this.SUBRULE(this.Constraint);\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"01bdc97761e836740ac65da34e0857cb3b7966ee","contentHash":"5e4fafa8fceda491ddd609e151d4afb42b838d37c67ab75956164d54809c782d"},"D:\\formation\\asn.1\\src\\analysis\\parser\\TaggedTypeRules.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\parser\\TaggedTypeRules.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":37}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":43}},"3":{"start":{"line":5,"column":22},"end":{"line":5,"column":53}},"4":{"start":{"line":7,"column":4},"end":{"line":13,"column":7}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":31}},"6":{"start":{"line":9,"column":8},"end":{"line":11,"column":11}},"7":{"start":{"line":10,"column":12},"end":{"line":10,"column":86}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":32}},"9":{"start":{"line":14,"column":4},"end":{"line":20,"column":7}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":43}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":33}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":39}},"13":{"start":{"line":19,"column":8},"end":{"line":19,"column":43}},"14":{"start":{"line":21,"column":4},"end":{"line":25,"column":7}},"15":{"start":{"line":22,"column":8},"end":{"line":24,"column":11}},"16":{"start":{"line":23,"column":12},"end":{"line":23,"column":115}},"17":{"start":{"line":26,"column":4},"end":{"line":28,"column":7}},"18":{"start":{"line":27,"column":8},"end":{"line":27,"column":46}},"19":{"start":{"line":30,"column":0},"end":{"line":30,"column":50}}},"fnMap":{"0":{"name":"initTaggedTypeRules","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":28}},"loc":{"start":{"line":6,"column":31},"end":{"line":29,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":28},"end":{"line":7,"column":29}},"loc":{"start":{"line":7,"column":34},"end":{"line":13,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":20},"end":{"line":9,"column":21}},"loc":{"start":{"line":9,"column":26},"end":{"line":11,"column":9}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":14,"column":21},"end":{"line":14,"column":22}},"loc":{"start":{"line":14,"column":27},"end":{"line":20,"column":5}},"line":14},"4":{"name":"(anonymous_4)","decl":{"start":{"line":21,"column":23},"end":{"line":21,"column":24}},"loc":{"start":{"line":21,"column":29},"end":{"line":25,"column":5}},"line":21},"5":{"name":"(anonymous_5)","decl":{"start":{"line":22,"column":20},"end":{"line":22,"column":21}},"loc":{"start":{"line":22,"column":26},"end":{"line":24,"column":9}},"line":22},"6":{"name":"(anonymous_6)","decl":{"start":{"line":26,"column":29},"end":{"line":26,"column":30}},"loc":{"start":{"line":26,"column":35},"end":{"line":28,"column":5}},"line":26}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":7,"5":361,"6":361,"7":9,"8":361,"9":7,"10":361,"11":361,"12":361,"13":361,"14":7,"15":361,"16":45,"17":7,"18":361,"19":1},"f":{"0":7,"1":361,"2":9,"3":361,"4":361,"5":45,"6":361},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/parser/TaggedTypeRules.ts","sources":["D:/formation/asn.1/src/analysis/parser/TaggedTypeRules.ts"],"names":[],"mappings":";;;AACA,4CAA6D;AAC7D,sDAAuC;AAEvC,SAAgB,mBAAmB;IACjC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;QAC3B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,cAAc,CAAC,CAAC,eAAC,CAAC,QAAQ,EAAE,eAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE;QACpB,qDAAqD;QACrD,IAAI,CAAC,OAAO,CAAC,oBAAQ,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/B,IAAI,CAAC,OAAO,CAAC,oBAAQ,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,EAAE;QACtB,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACf,IAAI,CAAC,cAAc,CAAC,CAAC,eAAC,CAAC,SAAS,EAAE,eAAC,CAAC,WAAW,EAAE,eAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,EAAE;QAC5B,IAAI,CAAC,OAAO,CAAC,uBAAW,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;AACL,CAAC;AA1BD,kDA0BC","sourcesContent":["import {ASN1CstParser} from '../ASN1CstParser';\nimport {L_SQUARE, NumberToken, R_SQUARE} from '../ASN1Lexer';\nimport {k} from '../lexer/ASN1Keyword';\n\nexport function initTaggedTypeRules(this: ASN1CstParser) {\n  this.RULE('TaggedType', () => {\n    this.SUBRULE(this.Tag);\n    this.OPTION(() => {\n      this.addOrTokenList([k.IMPLICIT, k.EXPLICIT]);\n    });\n    this.SUBRULE(this.Type);\n  });\n\n  this.RULE('Tag', () => {\n    // 31.2.1 \"[\" EncodingReference Class ClassNumber \"]\"\n    this.CONSUME(L_SQUARE);\n    this.SUBRULE(this.Class);\n    this.SUBRULE(this.ClassNumber);\n    this.CONSUME(R_SQUARE);\n  });\n\n  this.RULE('Class', () => {\n    this.OPTION(() => {\n      this.addOrTokenList([k.UNIVERSAL, k.APPLICATION, k.PRIVATE]);\n    });\n  });\n\n  this.RULE('ClassNumber', () => {\n    this.CONSUME(NumberToken);\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"69b9b46365f96e4111cdc51268e3819629ac1e7f","contentHash":"90bd58c2cbdbb0fc6ca87a8c71884c5f6bf045f97e7103386f0fd87d6d0d3803"},"D:\\formation\\asn.1\\src\\analysis\\parser\\TypeRules.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\parser\\TypeRules.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":43}},"3":{"start":{"line":6,"column":4},"end":{"line":11,"column":7}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":48}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":46}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":32}},"7":{"start":{"line":12,"column":4},"end":{"line":14,"column":7}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":62}},"9":{"start":{"line":15,"column":4},"end":{"line":33,"column":7}},"10":{"start":{"line":18,"column":8},"end":{"line":32,"column":11}},"11":{"start":{"line":21,"column":20},"end":{"line":21,"column":51}},"12":{"start":{"line":22,"column":20},"end":{"line":24,"column":23}},"13":{"start":{"line":23,"column":24},"end":{"line":23,"column":54}},"14":{"start":{"line":29,"column":20},"end":{"line":29,"column":58}},"15":{"start":{"line":34,"column":4},"end":{"line":47,"column":7}},"16":{"start":{"line":35,"column":8},"end":{"line":46,"column":11}},"17":{"start":{"line":48,"column":4},"end":{"line":50,"column":7}},"18":{"start":{"line":49,"column":8},"end":{"line":49,"column":38}},"19":{"start":{"line":52,"column":0},"end":{"line":52,"column":38}}},"fnMap":{"0":{"name":"initTypeRules","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":22}},"loc":{"start":{"line":5,"column":25},"end":{"line":51,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":32},"end":{"line":6,"column":33}},"loc":{"start":{"line":6,"column":38},"end":{"line":11,"column":5}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":22},"end":{"line":12,"column":23}},"loc":{"start":{"line":12,"column":28},"end":{"line":14,"column":5}},"line":12},"3":{"name":"(anonymous_3)","decl":{"start":{"line":15,"column":33},"end":{"line":15,"column":34}},"loc":{"start":{"line":15,"column":39},"end":{"line":33,"column":5}},"line":15},"4":{"name":"(anonymous_4)","decl":{"start":{"line":20,"column":21},"end":{"line":20,"column":22}},"loc":{"start":{"line":20,"column":27},"end":{"line":25,"column":17}},"line":20},"5":{"name":"(anonymous_5)","decl":{"start":{"line":22,"column":32},"end":{"line":22,"column":33}},"loc":{"start":{"line":22,"column":38},"end":{"line":24,"column":21}},"line":22},"6":{"name":"(anonymous_6)","decl":{"start":{"line":28,"column":21},"end":{"line":28,"column":22}},"loc":{"start":{"line":28,"column":27},"end":{"line":30,"column":17}},"line":28},"7":{"name":"(anonymous_7)","decl":{"start":{"line":34,"column":29},"end":{"line":34,"column":30}},"loc":{"start":{"line":34,"column":35},"end":{"line":47,"column":5}},"line":34},"8":{"name":"(anonymous_8)","decl":{"start":{"line":48,"column":30},"end":{"line":48,"column":31}},"loc":{"start":{"line":48,"column":36},"end":{"line":50,"column":5}},"line":48}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":7,"4":131,"5":131,"6":131,"7":7,"8":862,"9":7,"10":564,"11":560,"12":560,"13":53,"14":11,"15":7,"16":560,"17":7,"18":361,"19":1},"f":{"0":7,"1":131,"2":862,"3":564,"4":560,"5":53,"6":11,"7":560,"8":361},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/parser/TypeRules.ts","sources":["D:/formation/asn.1/src/analysis/parser/TypeRules.ts"],"names":[],"mappings":";;;AACA,4CAAwD;AAExD,SAAgB,aAAa;IAC3B,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC/B,OAAO;QACP,IAAI,CAAC,OAAO,CAAC,yBAAa,CAAC,CAAC;QAC5B,IAAI,CAAC,OAAO,CAAC,uBAAW,CAAC,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE;QACrB,IAAI,CAAC,SAAS,CAAC,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAChC,6CAA6C;QAC7C,OAAO;QACP,IAAI,CAAC,EAAE,CAAC;YACN;gBACE,GAAG,EAAE,GAAG,EAAE;oBACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC/B,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;wBACf,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAChC,CAAC,CAAC,CAAC;gBACL,CAAC;aACF;YACD;gBACE,GAAG,EAAE,GAAG,EAAE;oBACR,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACxC,CAAC;aACF;SACF,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,EAAE;QAC5B,IAAI,CAAC,SAAS,CAAC;YACb,aAAa;YACb,eAAe;YACf,qBAAqB;YACrB,aAAa;YACb,iBAAiB;YACjB,sBAAsB;YACtB,cAAc;YACd,cAAc;YACd,gBAAgB;YAChB,YAAY;SACb,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,GAAG,EAAE;QAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC,CAAC,CAAC;AACL,CAAC;AAlDD,sCAkDC","sourcesContent":["import {ASN1CstParser} from '../ASN1CstParser';\nimport {AFFECTATION, TypeReference} from '../ASN1Lexer';\n\nexport function initTypeRules(this: ASN1CstParser) {\n  this.RULE('TypeAssignment', () => {\n    // 16.1\n    this.CONSUME(TypeReference);\n    this.CONSUME(AFFECTATION);\n    this.SUBRULE(this.Type);\n  });\n\n  this.RULE('Type', () => {\n    this.addOrList(['ConstrainedType', 'ReferencedType']);\n  });\n\n  this.RULE('ConstrainedType', () => {\n    // chevrotain does not allow rules recursion.\n    // 49.1\n    this.OR([\n      {\n        ALT: () => {\n          this.SUBRULE(this.BuiltinType);\n          this.OPTION(() => {\n            this.SUBRULE(this.Constraint);\n          });\n        },\n      },\n      {\n        ALT: () => {\n          this.SUBRULE(this.TypeWithConstraint);\n        },\n      },\n    ]);\n  });\n\n  this.RULE('BuiltinType', () => {\n    this.addOrList([\n      'BooleanType',\n      'BitStringType',\n      'CharacterStringType',\n      'IntegerType',\n      'OctetStringType',\n      'ObjectIdentifierType',\n      'PrefixedType',\n      'SequenceType',\n      'SequenceOfType',\n      'ChoiceType',\n    ]);\n  });\n\n  this.RULE('PrefixedType', () => {\n    this.SUBRULE(this.TaggedType);\n  });\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"80379607c6624c154d516bdbdaba34dc485ed233","contentHash":"5cfc19b28f3dc0c188935ba725d4ddcd3492cf2230bc0e9fb307bdc4c0882089"},"D:\\formation\\asn.1\\src\\analysis\\ASN1Visitor.ts":{"path":"D:\\formation\\asn.1\\src\\analysis\\ASN1Visitor.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":5,"column":25},"end":{"line":5,"column":58}},"3":{"start":{"line":6,"column":26},"end":{"line":6,"column":60}},"4":{"start":{"line":7,"column":21},"end":{"line":7,"column":50}},"5":{"start":{"line":8,"column":24},"end":{"line":8,"column":56}},"6":{"start":{"line":9,"column":23},"end":{"line":9,"column":54}},"7":{"start":{"line":10,"column":25},"end":{"line":10,"column":58}},"8":{"start":{"line":11,"column":18},"end":{"line":11,"column":44}},"9":{"start":{"line":12,"column":25},"end":{"line":12,"column":58}},"10":{"start":{"line":13,"column":18},"end":{"line":13,"column":50}},"11":{"start":{"line":14,"column":19},"end":{"line":14,"column":52}},"12":{"start":{"line":15,"column":24},"end":{"line":15,"column":50}},"13":{"start":{"line":16,"column":23},"end":{"line":16,"column":58}},"14":{"start":{"line":19,"column":36},"end":{"line":19,"column":93}},"15":{"start":{"line":22,"column":8},"end":{"line":22,"column":16}},"16":{"start":{"line":23,"column":8},"end":{"line":23,"column":31}},"17":{"start":{"line":26,"column":21},"end":{"line":26,"column":53}},"18":{"start":{"line":27,"column":23},"end":{"line":27,"column":56}},"19":{"start":{"line":28,"column":8},"end":{"line":28,"column":43}},"20":{"start":{"line":29,"column":8},"end":{"line":29,"column":22}},"21":{"start":{"line":32,"column":21},"end":{"line":32,"column":47}},"22":{"start":{"line":33,"column":8},"end":{"line":33,"column":20}},"23":{"start":{"line":36,"column":21},"end":{"line":36,"column":47}},"24":{"start":{"line":37,"column":27},"end":{"line":37,"column":68}},"25":{"start":{"line":38,"column":21},"end":{"line":38,"column":41}},"26":{"start":{"line":39,"column":8},"end":{"line":39,"column":33}},"27":{"start":{"line":40,"column":8},"end":{"line":40,"column":41}},"28":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"29":{"start":{"line":44,"column":12},"end":{"line":44,"column":51}},"30":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"31":{"start":{"line":47,"column":12},"end":{"line":47,"column":50}},"32":{"start":{"line":51,"column":8},"end":{"line":51,"column":43}},"33":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"34":{"start":{"line":55,"column":12},"end":{"line":55,"column":47}},"35":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"36":{"start":{"line":58,"column":12},"end":{"line":58,"column":46}},"37":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"38":{"start":{"line":63,"column":12},"end":{"line":63,"column":48}},"39":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"40":{"start":{"line":66,"column":12},"end":{"line":66,"column":48}},"41":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"42":{"start":{"line":69,"column":12},"end":{"line":69,"column":51}},"43":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"44":{"start":{"line":72,"column":12},"end":{"line":72,"column":51}},"45":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"46":{"start":{"line":75,"column":12},"end":{"line":75,"column":55}},"47":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"48":{"start":{"line":78,"column":12},"end":{"line":78,"column":46}},"49":{"start":{"line":80,"column":8},"end":{"line":80,"column":20}},"50":{"start":{"line":83,"column":8},"end":{"line":83,"column":42}},"51":{"start":{"line":86,"column":20},"end":{"line":86,"column":39}},"52":{"start":{"line":87,"column":21},"end":{"line":87,"column":41}},"53":{"start":{"line":88,"column":27},"end":{"line":88,"column":54}},"54":{"start":{"line":89,"column":8},"end":{"line":89,"column":74}},"55":{"start":{"line":92,"column":25},"end":{"line":92,"column":46}},"56":{"start":{"line":93,"column":24},"end":{"line":93,"column":51}},"57":{"start":{"line":94,"column":8},"end":{"line":94,"column":56}},"58":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"59":{"start":{"line":98,"column":12},"end":{"line":98,"column":51}},"60":{"start":{"line":100,"column":8},"end":{"line":100,"column":52}},"61":{"start":{"line":103,"column":8},"end":{"line":103,"column":36}},"62":{"start":{"line":106,"column":21},"end":{"line":106,"column":47}},"63":{"start":{"line":107,"column":8},"end":{"line":107,"column":59}},"64":{"start":{"line":110,"column":25},"end":{"line":110,"column":58}},"65":{"start":{"line":111,"column":8},"end":{"line":111,"column":53}},"66":{"start":{"line":112,"column":8},"end":{"line":112,"column":24}},"67":{"start":{"line":115,"column":26},"end":{"line":115,"column":51}},"68":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"69":{"start":{"line":117,"column":12},"end":{"line":117,"column":38}},"70":{"start":{"line":119,"column":8},"end":{"line":119,"column":41}},"71":{"start":{"line":122,"column":23},"end":{"line":122,"column":60}},"72":{"start":{"line":123,"column":8},"end":{"line":123,"column":53}},"73":{"start":{"line":124,"column":8},"end":{"line":124,"column":22}},"74":{"start":{"line":127,"column":26},"end":{"line":127,"column":51}},"75":{"start":{"line":128,"column":8},"end":{"line":128,"column":41}},"76":{"start":{"line":131,"column":21},"end":{"line":131,"column":44}},"77":{"start":{"line":132,"column":21},"end":{"line":132,"column":41}},"78":{"start":{"line":133,"column":26},"end":{"line":133,"column":71}},"79":{"start":{"line":134,"column":8},"end":{"line":134,"column":25}},"80":{"start":{"line":137,"column":8},"end":{"line":137,"column":61}},"81":{"start":{"line":140,"column":8},"end":{"line":142,"column":9}},"82":{"start":{"line":141,"column":12},"end":{"line":141,"column":53}},"83":{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},"84":{"start":{"line":144,"column":12},"end":{"line":144,"column":57}},"85":{"start":{"line":146,"column":8},"end":{"line":146,"column":49}},"86":{"start":{"line":149,"column":0},"end":{"line":149,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":18},"end":{"line":24,"column":5}},"line":21},"1":{"name":"(anonymous_1)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":26},"end":{"line":30,"column":5}},"line":25},"2":{"name":"(anonymous_2)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":26},"end":{"line":34,"column":5}},"line":31},"3":{"name":"(anonymous_3)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":32},"end":{"line":41,"column":5}},"line":35},"4":{"name":"(anonymous_4)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":14},"end":{"line":49,"column":5}},"line":42},"5":{"name":"(anonymous_5)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":25},"end":{"line":52,"column":5}},"line":50},"6":{"name":"(anonymous_6)","decl":{"start":{"line":53,"column":4},"end":{"line":53,"column":5}},"loc":{"start":{"line":53,"column":24},"end":{"line":60,"column":5}},"line":53},"7":{"name":"(anonymous_7)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":21},"end":{"line":81,"column":5}},"line":61},"8":{"name":"(anonymous_8)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":22},"end":{"line":84,"column":5}},"line":82},"9":{"name":"(anonymous_9)","decl":{"start":{"line":85,"column":4},"end":{"line":85,"column":5}},"loc":{"start":{"line":85,"column":20},"end":{"line":90,"column":5}},"line":85},"10":{"name":"(anonymous_10)","decl":{"start":{"line":91,"column":4},"end":{"line":91,"column":5}},"loc":{"start":{"line":91,"column":13},"end":{"line":95,"column":5}},"line":91},"11":{"name":"(anonymous_11)","decl":{"start":{"line":96,"column":4},"end":{"line":96,"column":5}},"loc":{"start":{"line":96,"column":15},"end":{"line":101,"column":5}},"line":96},"12":{"name":"(anonymous_12)","decl":{"start":{"line":102,"column":4},"end":{"line":102,"column":5}},"loc":{"start":{"line":102,"column":21},"end":{"line":104,"column":5}},"line":102},"13":{"name":"(anonymous_13)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":21},"end":{"line":108,"column":5}},"line":105},"14":{"name":"(anonymous_14)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":22},"end":{"line":113,"column":5}},"line":109},"15":{"name":"(anonymous_15)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":33},"end":{"line":120,"column":5}},"line":114},"16":{"name":"(anonymous_16)","decl":{"start":{"line":121,"column":4},"end":{"line":121,"column":5}},"loc":{"start":{"line":121,"column":20},"end":{"line":125,"column":5}},"line":121},"17":{"name":"(anonymous_17)","decl":{"start":{"line":126,"column":4},"end":{"line":126,"column":5}},"loc":{"start":{"line":126,"column":33},"end":{"line":129,"column":5}},"line":126},"18":{"name":"(anonymous_18)","decl":{"start":{"line":130,"column":4},"end":{"line":130,"column":5}},"loc":{"start":{"line":130,"column":19},"end":{"line":135,"column":5}},"line":130},"19":{"name":"(anonymous_19)","decl":{"start":{"line":136,"column":4},"end":{"line":136,"column":5}},"loc":{"start":{"line":136,"column":29},"end":{"line":138,"column":5}},"line":136},"20":{"name":"(anonymous_20)","decl":{"start":{"line":139,"column":4},"end":{"line":139,"column":5}},"loc":{"start":{"line":139,"column":39},"end":{"line":147,"column":5}},"line":139}},"branchMap":{"0":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43},"1":{"loc":{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":46,"column":8},"end":{"line":48,"column":9}},{"start":{"line":46,"column":8},"end":{"line":48,"column":9}}],"line":46},"2":{"loc":{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":56,"column":9}},{"start":{"line":54,"column":8},"end":{"line":56,"column":9}}],"line":54},"3":{"loc":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},{"start":{"line":57,"column":8},"end":{"line":59,"column":9}}],"line":57},"4":{"loc":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},{"start":{"line":62,"column":8},"end":{"line":64,"column":9}}],"line":62},"5":{"loc":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},{"start":{"line":65,"column":8},"end":{"line":67,"column":9}}],"line":65},"6":{"loc":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},{"start":{"line":68,"column":8},"end":{"line":70,"column":9}}],"line":68},"7":{"loc":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},{"start":{"line":71,"column":8},"end":{"line":73,"column":9}}],"line":71},"8":{"loc":{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":76,"column":9}},{"start":{"line":74,"column":8},"end":{"line":76,"column":9}}],"line":74},"9":{"loc":{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},"type":"if","locations":[{"start":{"line":77,"column":8},"end":{"line":79,"column":9}},{"start":{"line":77,"column":8},"end":{"line":79,"column":9}}],"line":77},"10":{"loc":{"start":{"line":88,"column":27},"end":{"line":88,"column":54}},"type":"cond-expr","locations":[{"start":{"line":88,"column":42},"end":{"line":88,"column":46}},{"start":{"line":88,"column":49},"end":{"line":88,"column":54}}],"line":88},"11":{"loc":{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},"type":"if","locations":[{"start":{"line":97,"column":8},"end":{"line":99,"column":9}},{"start":{"line":97,"column":8},"end":{"line":99,"column":9}}],"line":97},"12":{"loc":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},{"start":{"line":116,"column":8},"end":{"line":118,"column":9}}],"line":116},"13":{"loc":{"start":{"line":140,"column":8},"end":{"line":142,"column":9}},"type":"if","locations":[{"start":{"line":140,"column":8},"end":{"line":142,"column":9}},{"start":{"line":140,"column":8},"end":{"line":142,"column":9}}],"line":140},"14":{"loc":{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":145,"column":9}},{"start":{"line":143,"column":8},"end":{"line":145,"column":9}}],"line":143}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":6,"16":6,"17":6,"18":6,"19":6,"20":6,"21":6,"22":6,"23":124,"24":124,"25":124,"26":124,"27":124,"28":801,"29":533,"30":268,"31":268,"32":533,"33":268,"34":266,"35":2,"36":2,"37":529,"38":342,"39":187,"40":69,"41":118,"42":6,"43":112,"44":49,"45":63,"46":7,"47":56,"48":4,"49":52,"50":342,"51":342,"52":342,"53":342,"54":342,"55":342,"56":342,"57":342,"58":342,"59":38,"60":304,"61":342,"62":266,"63":266,"64":69,"65":69,"66":69,"67":325,"68":325,"69":119,"70":325,"71":4,"72":4,"73":4,"74":8,"75":8,"76":333,"77":333,"78":333,"79":333,"80":7,"81":7,"82":2,"83":5,"84":4,"85":1,"86":1},"f":{"0":6,"1":6,"2":6,"3":124,"4":801,"5":533,"6":268,"7":529,"8":342,"9":342,"10":342,"11":342,"12":342,"13":266,"14":69,"15":325,"16":4,"17":8,"18":333,"19":7,"20":7},"b":{"0":[533,268],"1":[268,0],"2":[266,2],"3":[2,0],"4":[342,187],"5":[69,118],"6":[6,112],"7":[49,63],"8":[7,56],"9":[4,52],"10":[2,340],"11":[38,304],"12":[119,206],"13":[2,5],"14":[4,1]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/analysis/ASN1Visitor.ts","sources":["D:/formation/asn.1/src/analysis/ASN1Visitor.ts"],"names":[],"mappings":"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","sourcesContent":["// import {inspect} from 'util';\nimport {ASN1Assignment} from '../asn1/ASN1Assignment';\nimport {ASN1DefinedType} from '../asn1/ASN1DefinedType';\nimport {ASN1Module} from '../asn1/ASN1Module';\nimport {ASN1NamedType} from '../asn1/ASN1NamedType';\nimport {ASN1Sequence} from '../asn1/ASN1Sequence';\nimport {ASN1ChoiceType} from '../asn1/ASN1ChoiceType';\nimport {ASN1Tag} from '../asn1/ASN1Tag';\nimport {ASN1TaggedType} from '../asn1/ASN1TaggedType';\nimport {ASN1Type} from '../asn1/ASN1Type';\nimport {\n  ASN1BooleanType,\n  ASN1GeneralStringType,\n  ASN1IA5StringType,\n  ASN1IntegerType,\n} from '../asn1/types/builtin';\nimport {TagClass} from '../interfaces/TagClass';\nimport {ASN1CstParser} from './ASN1CstParser';\nimport {\n  ASN1CstNode,\n  ModuleIdentifierCstNode,\n  TypeAssignmentCstNode,\n  TypeCstNode,\n  SequenceTypeCstNode,\n  BuiltinTypeCstNode,\n  NamedTypeCstNode,\n  ComponentTypeCstNode,\n  CharacterStringTypeCstNode,\n  ConstrainedTypeCstNode,\n  PrefixedTypeCstNode,\n  TaggedTypeCstNode,\n  TagCstNode,\n  ClassCstNode,\n  ClassNumberCstNode,\n  DefinedTypeCstNode,\n  ReferencedTypeCstNode,\n  RestrictedCharacterStringTypeCstNode,\n  ChoiceTypeCstNode,\n  AlternativeTypeCstNode,\n} from './interfaces';\n\nconst parserInstance = new ASN1CstParser();\n// The base visitor class can be accessed via the a parser instance.\n// const BaseASN1Visitor = parserInstance.getBaseCstVisitorConstructor();\nconst BaseASN1VisitorWithDefaults =\n  parserInstance.getBaseCstVisitorConstructorWithDefaults();\n\nexport class ASN1Visitor extends BaseASN1VisitorWithDefaults {\n  constructor() {\n    super();\n    this.validateVisitor();\n  }\n\n  ModuleDefinition(ctx: ASN1CstNode): ASN1Module {\n    const name = this.visit(ctx.ModuleIdentifier);\n    const module = new ASN1Module(name);\n    this.visit(ctx.ModuleBody, module);\n    return module;\n  }\n\n  ModuleIdentifier(ctx: ModuleIdentifierCstNode) {\n    const name = ctx.TypeReference[0].image;\n    return name;\n  }\n\n  TypeAssignment(ctx: TypeAssignmentCstNode, module: ASN1Module) {\n    const name = ctx.TypeReference[0].image;\n    const assignment = new ASN1Assignment(name);\n    const type = this.visit(ctx.Type);\n    assignment.setType(type);\n    module.addAssignment(assignment);\n  }\n\n  Type(ctx: TypeCstNode) {\n    if (ctx.ConstrainedType) {\n      return this.visit(ctx.ConstrainedType);\n    }\n    if (ctx.ReferencedType) {\n      return this.visit(ctx.ReferencedType);\n    }\n  }\n\n  ConstrainedType(ctx: ConstrainedTypeCstNode) {\n    return this.visit(ctx.BuiltinType);\n  }\n\n  ReferencedType(ctx: ReferencedTypeCstNode) {\n    if (ctx.DefinedType) {\n      return this.visit(ctx.DefinedType);\n    }\n    if (ctx.UsefulType) {\n      return this.visit(ctx.UsefulType);\n    }\n  }\n\n  BuiltinType(ctx: BuiltinTypeCstNode) {\n    if (ctx.PrefixedType) {\n      return this.visit(ctx.PrefixedType);\n    }\n    if (ctx.SequenceType) {\n      return this.visit(ctx.SequenceType);\n    }\n    if (ctx.BooleanType) {\n      return new ASN1BooleanType();\n    }\n    if (ctx.IntegerType) {\n      return new ASN1IntegerType();\n    }\n    if (ctx.CharacterStringType) {\n      return this.visit(ctx.CharacterStringType);\n    }\n    if (ctx.ChoiceType) {\n      return this.visit(ctx.ChoiceType);\n    }\n    return null;\n  }\n\n  PrefixedType(ctx: PrefixedTypeCstNode) {\n    return this.visit(ctx.TaggedType);\n  }\n\n  TaggedType(ctx: TaggedTypeCstNode) {\n    const tag = this.visit(ctx.Tag) as ASN1Tag;\n    const type = this.visit(ctx.Type) as ASN1Type;\n    const isImplicit = ctx.IMPLICIT ? true : false;\n    return new ASN1TaggedType(tag, type, isImplicit);\n  }\n\n  Tag(ctx: TagCstNode) {\n    const tagClass = this.visit(ctx.Class) as TagClass;\n    const tagCode = this.visit(ctx.ClassNumber) as number;\n    return new ASN1Tag(tagClass, tagCode);\n  }\n\n  Class(ctx: ClassCstNode) {\n    if (ctx.APPLICATION) {\n      return TagClass.APPLICATION;\n    }\n    return TagClass.CONTEXT_SPECIFIC;\n  }\n\n  ClassNumber(ctx: ClassNumberCstNode) {\n    return +ctx.Number[0].image;\n  }\n\n  DefinedType(ctx: DefinedTypeCstNode) {\n    const name = ctx.TypeReference[0].image;\n    return new ASN1DefinedType(name);\n  }\n\n  SequenceType(ctx: SequenceTypeCstNode) {\n    const sequence = new ASN1Sequence();\n    this.visit(ctx.ComponentTypeLists, sequence);\n    return sequence;\n  }\n\n  ComponentType(ctx: ComponentTypeCstNode, sequence: ASN1Sequence) {\n    const namedType = this.visit(ctx.NamedType) as ASN1NamedType;\n    if (ctx.OPTIONAL) {\n      namedType.optional = true;\n    }\n    sequence.addComponent(namedType);\n  }\n\n  ChoiceType(ctx: ChoiceTypeCstNode) {\n    const choice = new ASN1ChoiceType();\n    this.visit(ctx.AlternativeTypeLists, choice);\n    return choice;\n  }\n\n  AlternativeType(ctx: AlternativeTypeCstNode, choice: ASN1ChoiceType) {\n    const namedType = this.visit(ctx.NamedType) as ASN1NamedType;\n    choice.addAlternative(namedType);\n  }\n\n  NamedType(ctx: NamedTypeCstNode) {\n    const name = ctx.Identifier[0].image;\n    const type = this.visit(ctx.Type);\n    const namedType = new ASN1NamedType(name, type);\n    return namedType;\n  }\n\n  CharacterStringType(ctx: CharacterStringTypeCstNode) {\n    return this.visit(ctx.RestrictedCharacterStringType);\n  }\n\n  RestrictedCharacterStringType(ctx: RestrictedCharacterStringTypeCstNode) {\n    if (ctx.IA5String) {\n      return new ASN1IA5StringType();\n    }\n    if (ctx.GeneralString) {\n      return new ASN1GeneralStringType();\n    }\n    return new ASN1IA5StringType();\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f1409d6c881e1c9669e4a8d6ee9dbbb35d35ae08","contentHash":"48a37281e8a1685ebff086ec0c6073320fbb50d7a81e363bc99dd8dc91b9abfb"},"D:\\formation\\asn.1\\src\\asn1\\ASN1Assignment.ts":{"path":"D:\\formation\\asn.1\\src\\asn1\\ASN1Assignment.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":25}},"3":{"start":{"line":9,"column":8},"end":{"line":9,"column":25}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":22},"end":{"line":7,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":8,"column":4},"end":{"line":8,"column":5}},"loc":{"start":{"line":8,"column":18},"end":{"line":10,"column":5}},"line":8}},"branchMap":{},"s":{"0":1,"1":1,"2":124,"3":124,"4":1},"f":{"0":124,"1":124},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/asn1/ASN1Assignment.ts","sources":["D:/formation/asn.1/src/asn1/ASN1Assignment.ts"],"names":[],"mappings":";;;AAEA,MAAa,cAAc;IAEzB,YAAmB,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;IAAG,CAAC;IACnC,OAAO,CAAC,IAAc;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;CACF;AAND,wCAMC","sourcesContent":["import {ASN1Type} from './ASN1Type';\n\nexport class ASN1Assignment {\n  type!: ASN1Type;\n  constructor(public name: string) {}\n  setType(type: ASN1Type) {\n    this.type = type;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2d771f17b78caadb74ed3b69d00b25159a9f3b98","contentHash":"3d5d74ad47e2cf85527790d7f06cb80e5f9ae910af25f65f049eb732ca3853aa"},"D:\\formation\\asn.1\\src\\asn1\\ASN1DefinedType.ts":{"path":"D:\\formation\\asn.1\\src\\asn1\\ASN1DefinedType.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":40}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":16}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":25}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":42}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":22},"end":{"line":9,"column":5}},"line":6}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":266,"4":266,"5":1},"f":{"0":266},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/asn1/ASN1DefinedType.ts","sources":["D:/formation/asn.1/src/asn1/ASN1DefinedType.ts"],"names":[],"mappings":";;;AAAA,yCAAoC;AAEpC,MAAa,eAAgB,SAAQ,mBAAQ;IAC3C,YAAmB,IAAY;QAC7B,KAAK,EAAE,CAAC;QADS,SAAI,GAAJ,IAAI,CAAQ;IAE/B,CAAC;CACF;AAJD,0CAIC","sourcesContent":["import {ASN1Type} from './ASN1Type';\n\nexport class ASN1DefinedType extends ASN1Type {\n  constructor(public name: string) {\n    super();\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f1db3bb15b4e4dc50e2bbe98f68030e0830f080b","contentHash":"9751a9dda53332168487a171f0013c85aaad1d42170fb7bd6998024ea20c1c4f"},"D:\\formation\\asn.1\\src\\asn1\\ASN1Type.ts":{"path":"D:\\formation\\asn.1\\src\\asn1\\ASN1Type.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/asn1/ASN1Type.ts","sources":["D:/formation/asn.1/src/asn1/ASN1Type.ts"],"names":[],"mappings":";;;AAAA,MAAa,QAAQ;CAAG;AAAxB,4BAAwB","sourcesContent":["export class ASN1Type {}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c87b995869f9ac9a96ea3bac5956834f59d03223","contentHash":"19880d3a36708b9753a6d589b90720e8566e1a295ed67c0aed69698fe4c66bab"},"D:\\formation\\asn.1\\src\\asn1\\ASN1Module.ts":{"path":"D:\\formation\\asn.1\\src\\asn1\\ASN1Module.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":25}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":30}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":30}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":36}},"6":{"start":{"line":14,"column":27},"end":{"line":14,"column":70}},"7":{"start":{"line":14,"column":54},"end":{"line":14,"column":69}},"8":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"9":{"start":{"line":16,"column":12},"end":{"line":16,"column":68}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":26}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":22},"end":{"line":9,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":24},"end":{"line":12,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":24},"end":{"line":19,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":14,"column":49},"end":{"line":14,"column":50}},"loc":{"start":{"line":14,"column":54},"end":{"line":14,"column":69}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},{"start":{"line":15,"column":8},"end":{"line":17,"column":9}}],"line":15}},"s":{"0":1,"1":1,"2":6,"3":6,"4":6,"5":124,"6":23,"7":440,"8":23,"9":0,"10":23,"11":1},"f":{"0":6,"1":124,"2":23,"3":440},"b":{"0":[0,23]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/asn1/ASN1Module.ts","sources":["D:/formation/asn.1/src/asn1/ASN1Module.ts"],"names":[],"mappings":";;;AAEA,MAAa,UAAU;IAErB,YAAmB,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;QAD/B,gBAAW,GAAqB,EAAE,CAAC;QAEjC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;IAED,aAAa,CAAC,IAAoB;QAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,aAAa,CAAC,IAAY;QACxB,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,UAAU,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,gCAAgC,IAAI,EAAE,CAAC,CAAC;SACzD;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;CACF;AAjBD,gCAiBC","sourcesContent":["import {ASN1Assignment} from './ASN1Assignment';\n\nexport class ASN1Module {\n  assignments: ASN1Assignment[] = [];\n  constructor(public name: string) {\n    this.assignments = [];\n  }\n\n  addAssignment(type: ASN1Assignment) {\n    this.assignments.push(type);\n  }\n\n  getAssignment(name: string) {\n    const assignment = this.assignments.find(a => a.name === name);\n    if (!assignment) {\n      throw new Error(`Assignment (type) not found: ${name}`);\n    }\n    return assignment;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"17fcd9b657422ebdee7289b2eb5458b105b0986f","contentHash":"7bc27c05b67c81a4c8daaf8184e65a8c998fa4011185545dc9751e9572ace5e6"},"D:\\formation\\asn.1\\src\\asn1\\ASN1NamedType.ts":{"path":"D:\\formation\\asn.1\\src\\asn1\\ASN1NamedType.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":28},"end":{"line":4,"column":58}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":16}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":25}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":25}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":30}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":28},"end":{"line":11,"column":5}},"line":6}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":333,"4":333,"5":333,"6":333,"7":1},"f":{"0":333},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/asn1/ASN1NamedType.ts","sources":["D:/formation/asn.1/src/asn1/ASN1NamedType.ts"],"names":[],"mappings":";;;AAAA,2DAAsD;AAGtD,MAAa,aAAc,SAAQ,qCAAiB;IAElD,YAAmB,IAAY,EAAS,IAAc;QACpD,KAAK,EAAE,CAAC;QADS,SAAI,GAAJ,IAAI,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAU;QADtD,aAAQ,GAAG,KAAK,CAAC;IAGjB,CAAC;CACF;AALD,sCAKC","sourcesContent":["import {ASN1ComponentType} from './ASN1ComponentType';\nimport {ASN1Type} from './ASN1Type';\n\nexport class ASN1NamedType extends ASN1ComponentType {\n  optional = false;\n  constructor(public name: string, public type: ASN1Type) {\n    super();\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7bd4fe9c9cbfbf25d1c4e2641a8c8af80f1adcba","contentHash":"ae7999ead170edf6e8af9cc6d860c5544836001c0a694afdad279b382191fa3e"},"D:\\formation\\asn.1\\src\\asn1\\ASN1ComponentType.ts":{"path":"D:\\formation\\asn.1\\src\\asn1\\ASN1ComponentType.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":46}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/asn1/ASN1ComponentType.ts","sources":["D:/formation/asn.1/src/asn1/ASN1ComponentType.ts"],"names":[],"mappings":";;;AAAA,MAAsB,iBAAiB;CAAG;AAA1C,8CAA0C","sourcesContent":["export abstract class ASN1ComponentType {}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7146b92c74eea7da4865f8328958694139cbda66","contentHash":"459efe698fa400b3c8f6616b9b92e7e820ea7101e504349514d1e65bbde42961"},"D:\\formation\\asn.1\\src\\asn1\\ASN1Sequence.ts":{"path":"D:\\formation\\asn.1\\src\\asn1\\ASN1Sequence.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":40}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":28}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":29}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":32}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":18},"end":{"line":9,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":20},"end":{"line":12,"column":5}},"line":10}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":69,"4":69,"5":325,"6":1},"f":{"0":69,"1":325},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/asn1/ASN1Sequence.ts","sources":["D:/formation/asn.1/src/asn1/ASN1Sequence.ts"],"names":[],"mappings":";;;AACA,yCAAoC;AAEpC,MAAa,YAAa,SAAQ,mBAAQ;IAA1C;;QACE,eAAU,GAAwB,EAAE,CAAC;IAKvC,CAAC;IAHC,YAAY,CAAC,CAAoB;QAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC;CACF;AAND,oCAMC","sourcesContent":["import {ASN1ComponentType} from './ASN1ComponentType';\nimport {ASN1Type} from './ASN1Type';\n\nexport class ASN1Sequence extends ASN1Type {\n  components: ASN1ComponentType[] = [];\n\n  addComponent(c: ASN1ComponentType) {\n    this.components.push(c);\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7663c6e55d4e26882feb88975f01a600f2388449","contentHash":"29b6fd8ad6c64a59a9df3d72573a0d31abe43c984dc5c6a56bb975a572afbfba"},"D:\\formation\\asn.1\\src\\asn1\\ASN1ChoiceType.ts":{"path":"D:\\formation\\asn.1\\src\\asn1\\ASN1ChoiceType.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":40}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":28}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":31}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":34}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":18},"end":{"line":9,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":22},"end":{"line":12,"column":5}},"line":10}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":4,"4":4,"5":8,"6":1},"f":{"0":4,"1":8},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/asn1/ASN1ChoiceType.ts","sources":["D:/formation/asn.1/src/asn1/ASN1ChoiceType.ts"],"names":[],"mappings":";;;AACA,yCAAoC;AAEpC,MAAa,cAAe,SAAQ,mBAAQ;IAA5C;;QACE,iBAAY,GAAwB,EAAE,CAAC;IAKzC,CAAC;IAHC,cAAc,CAAC,CAAoB;QACjC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;CACF;AAND,wCAMC","sourcesContent":["import {ASN1ComponentType} from './ASN1ComponentType';\nimport {ASN1Type} from './ASN1Type';\n\nexport class ASN1ChoiceType extends ASN1Type {\n  alternatives: ASN1ComponentType[] = [];\n\n  addAlternative(c: ASN1ComponentType) {\n    this.alternatives.push(c);\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6f2b8f480bf988fc3a998834fdfa8fde5d8595cd","contentHash":"d6979cf848f71528a70116299bd61ecac2d57549f29441443a16e08fb9b971b8"},"D:\\formation\\asn.1\\src\\asn1\\ASN1Tag.ts":{"path":"D:\\formation\\asn.1\\src\\asn1\\ASN1Tag.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":25}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":33}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":31}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":35},"end":{"line":8,"column":5}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":342,"3":342,"4":1},"f":{"0":342},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/asn1/ASN1Tag.ts","sources":["D:/formation/asn.1/src/asn1/ASN1Tag.ts"],"names":[],"mappings":";;;AAEA,MAAa,OAAO;IAClB,YAAmB,QAAkB,EAAS,OAAe;QAA1C,aAAQ,GAAR,QAAQ,CAAU;QAAS,YAAO,GAAP,OAAO,CAAQ;IAAG,CAAC;CAClE;AAFD,0BAEC","sourcesContent":["import {TagClass} from '../interfaces/TagClass';\n\nexport class ASN1Tag {\n  constructor(public tagClass: TagClass, public tagCode: number) {}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"55786214e77310d5fb104143dd0a1b70ec0b09e7","contentHash":"d75217144205fb78568a3c84d0eeec29e4c42e26ae06fe3d9fdf1c760376d359"},"D:\\formation\\asn.1\\src\\asn1\\ASN1TaggedType.ts":{"path":"D:\\formation\\asn.1\\src\\asn1\\ASN1TaggedType.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":23}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":25}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":33}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":37},"end":{"line":9,"column":5}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":342,"3":342,"4":342,"5":1},"f":{"0":342},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/asn1/ASN1TaggedType.ts","sources":["D:/formation/asn.1/src/asn1/ASN1TaggedType.ts"],"names":[],"mappings":";;;AAGA,MAAa,cAAc;IACzB,YACS,GAAY,EACZ,IAAc,EACd,QAAiB;QAFjB,QAAG,GAAH,GAAG,CAAS;QACZ,SAAI,GAAJ,IAAI,CAAU;QACd,aAAQ,GAAR,QAAQ,CAAS;IACvB,CAAC;CACL;AAND,wCAMC","sourcesContent":["import {ASN1Tag} from './ASN1Tag';\nimport {ASN1Type} from './ASN1Type';\n\nexport class ASN1TaggedType {\n  constructor(\n    public tag: ASN1Tag,\n    public type: ASN1Type,\n    public implicit: boolean\n  ) {}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ba9d58a832065a78fae12a393207772cfbaf509d","contentHash":"72dd8d3826c6e3ffd00aa81476df007127994750ba7c9a4ac9d46af27c91a2f3"},"D:\\formation\\asn.1\\src\\asn1\\types\\builtin.ts":{"path":"D:\\formation\\asn.1\\src\\asn1\\types\\builtin.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":119}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":42}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":46}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":54}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/asn1/types/builtin.ts","sources":["D:/formation/asn.1/src/asn1/types/builtin.ts"],"names":[],"mappings":";;;AAAA,MAAa,eAAe;CAAG;AAA/B,0CAA+B;AAC/B,MAAa,eAAe;CAAG;AAA/B,0CAA+B;AAC/B,MAAa,iBAAiB;CAAG;AAAjC,8CAAiC;AACjC,MAAa,qBAAqB;CAAG;AAArC,sDAAqC","sourcesContent":["export class ASN1BooleanType {}\nexport class ASN1IntegerType {}\nexport class ASN1IA5StringType {}\nexport class ASN1GeneralStringType {}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f819faa25fe6dbdf0132ec098ba2e89913406fbf","contentHash":"bb96f1cfb73025b17a5844b58c366a0815171722a42c4f790e2c1486a5664263"},"D:\\formation\\asn.1\\src\\interfaces\\TagClass.ts":{"path":"D:\\formation\\asn.1\\src\\interfaces\\TagClass.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":5,"column":0},"end":{"line":10,"column":59}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":40}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":44}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":54}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":21},"end":{"line":10,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":14},"end":{"line":10,"column":57}},"type":"binary-expr","locations":[{"start":{"line":10,"column":14},"end":{"line":10,"column":30}},{"start":{"line":10,"column":35},"end":{"line":10,"column":56}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/interfaces/TagClass.ts","sources":["D:/formation/asn.1/src/interfaces/TagClass.ts"],"names":[],"mappings":";;;AAAA,IAAY,QAKX;AALD,WAAY,QAAQ;IAClB,mCAAuB,CAAA;IACvB,uCAA2B,CAAA;IAC3B,iDAAqC,CAAA;IACrC,+BAAmB,CAAA;AACrB,CAAC,EALW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAKnB","sourcesContent":["export enum TagClass {\n  UNIVERSAL = 'UNIVERSAL',\n  APPLICATION = 'APPLICATION',\n  CONTEXT_SPECIFIC = 'CONTEXT_SPECIFIC',\n  PRIVATE = 'PRIVATE',\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b318bf54668e0783050cdc3fbb8122f9f3965274","contentHash":"fb17c706540442cb64d0a919659592196bcc2bbdefcc1a621edc007241e93333"},"D:\\formation\\asn.1\\src\\ASN1Generator.ts":{"path":"D:\\formation\\asn.1\\src\\ASN1Generator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":26},"end":{"line":4,"column":59}},"3":{"start":{"line":5,"column":24},"end":{"line":5,"column":55}},"4":{"start":{"line":6,"column":23},"end":{"line":6,"column":53}},"5":{"start":{"line":7,"column":19},"end":{"line":7,"column":51}},"6":{"start":{"line":8,"column":23},"end":{"line":8,"column":59}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":29}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":25}},"9":{"start":{"line":13,"column":27},"end":{"line":13,"column":53}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":68}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":49}},"12":{"start":{"line":18,"column":8},"end":{"line":18,"column":32}},"13":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"14":{"start":{"line":22,"column":12},"end":{"line":22,"column":62}},"15":{"start":{"line":24,"column":8},"end":{"line":24,"column":47}},"16":{"start":{"line":27,"column":24},"end":{"line":33,"column":9}},"17":{"start":{"line":34,"column":8},"end":{"line":37,"column":9}},"18":{"start":{"line":34,"column":21},"end":{"line":34,"column":22}},"19":{"start":{"line":35,"column":24},"end":{"line":35,"column":74}},"20":{"start":{"line":36,"column":12},"end":{"line":36,"column":36}},"21":{"start":{"line":38,"column":8},"end":{"line":38,"column":23}},"22":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"23":{"start":{"line":42,"column":12},"end":{"line":42,"column":73}},"24":{"start":{"line":45,"column":8},"end":{"line":83,"column":9}},"25":{"start":{"line":46,"column":12},"end":{"line":46,"column":64}},"26":{"start":{"line":48,"column":13},"end":{"line":83,"column":9}},"27":{"start":{"line":49,"column":12},"end":{"line":49,"column":67}},"28":{"start":{"line":52,"column":12},"end":{"line":58,"column":14}},"29":{"start":{"line":59,"column":12},"end":{"line":82,"column":13}},"30":{"start":{"line":61,"column":20},"end":{"line":61,"column":81}},"31":{"start":{"line":62,"column":20},"end":{"line":62,"column":79}},"32":{"start":{"line":63,"column":20},"end":{"line":63,"column":42}},"33":{"start":{"line":64,"column":20},"end":{"line":64,"column":26}},"34":{"start":{"line":66,"column":20},"end":{"line":66,"column":88}},"35":{"start":{"line":67,"column":20},"end":{"line":67,"column":86}},"36":{"start":{"line":68,"column":20},"end":{"line":68,"column":53}},"37":{"start":{"line":69,"column":20},"end":{"line":69,"column":26}},"38":{"start":{"line":71,"column":20},"end":{"line":71,"column":83}},"39":{"start":{"line":72,"column":20},"end":{"line":72,"column":81}},"40":{"start":{"line":73,"column":20},"end":{"line":73,"column":53}},"41":{"start":{"line":74,"column":20},"end":{"line":74,"column":26}},"42":{"start":{"line":76,"column":20},"end":{"line":76,"column":81}},"43":{"start":{"line":77,"column":20},"end":{"line":77,"column":79}},"44":{"start":{"line":78,"column":20},"end":{"line":78,"column":41}},"45":{"start":{"line":79,"column":20},"end":{"line":79,"column":26}},"46":{"start":{"line":81,"column":20},"end":{"line":81,"column":102}},"47":{"start":{"line":84,"column":8},"end":{"line":84,"column":41}},"48":{"start":{"line":85,"column":8},"end":{"line":85,"column":23}},"49":{"start":{"line":88,"column":27},"end":{"line":88,"column":63}},"50":{"start":{"line":89,"column":24},"end":{"line":89,"column":64}},"51":{"start":{"line":90,"column":8},"end":{"line":90,"column":43}},"52":{"start":{"line":91,"column":8},"end":{"line":91,"column":23}},"53":{"start":{"line":94,"column":0},"end":{"line":94,"column":38}},"54":{"start":{"line":96,"column":18},"end":{"line":96,"column":27}},"55":{"start":{"line":97,"column":4},"end":{"line":108,"column":5}},"56":{"start":{"line":98,"column":21},"end":{"line":98,"column":55}},"57":{"start":{"line":98,"column":37},"end":{"line":98,"column":54}},"58":{"start":{"line":99,"column":8},"end":{"line":101,"column":9}},"59":{"start":{"line":100,"column":12},"end":{"line":100,"column":63}},"60":{"start":{"line":102,"column":8},"end":{"line":107,"column":9}},"61":{"start":{"line":103,"column":12},"end":{"line":103,"column":46}},"62":{"start":{"line":106,"column":12},"end":{"line":106,"column":35}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":30},"end":{"line":15,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":27},"end":{"line":19,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":40},"end":{"line":25,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":35},"end":{"line":39,"column":5}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":37},"end":{"line":86,"column":5}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":34},"end":{"line":92,"column":5}},"line":87},"6":{"name":"generateFromJson","decl":{"start":{"line":95,"column":9},"end":{"line":95,"column":25}},"loc":{"start":{"line":95,"column":37},"end":{"line":109,"column":1}},"line":95},"7":{"name":"(anonymous_7)","decl":{"start":{"line":98,"column":32},"end":{"line":98,"column":33}},"loc":{"start":{"line":98,"column":37},"end":{"line":98,"column":54}},"line":98}},"branchMap":{"0":{"loc":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},{"start":{"line":21,"column":8},"end":{"line":23,"column":9}}],"line":21},"1":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{"line":41,"column":8},"end":{"line":43,"column":9}}],"line":41},"2":{"loc":{"start":{"line":45,"column":8},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":83,"column":9}},{"start":{"line":45,"column":8},"end":{"line":83,"column":9}}],"line":45},"3":{"loc":{"start":{"line":48,"column":13},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":48,"column":13},"end":{"line":83,"column":9}},{"start":{"line":48,"column":13},"end":{"line":83,"column":9}}],"line":48},"4":{"loc":{"start":{"line":59,"column":12},"end":{"line":82,"column":13}},"type":"switch","locations":[{"start":{"line":60,"column":16},"end":{"line":64,"column":26}},{"start":{"line":65,"column":16},"end":{"line":69,"column":26}},{"start":{"line":70,"column":16},"end":{"line":74,"column":26}},{"start":{"line":75,"column":16},"end":{"line":79,"column":26}},{"start":{"line":80,"column":16},"end":{"line":81,"column":102}}],"line":59},"5":{"loc":{"start":{"line":99,"column":8},"end":{"line":101,"column":9}},"type":"if","locations":[{"start":{"line":99,"column":8},"end":{"line":101,"column":9}},{"start":{"line":99,"column":8},"end":{"line":101,"column":9}}],"line":99},"6":{"loc":{"start":{"line":102,"column":8},"end":{"line":107,"column":9}},"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":107,"column":9}},{"start":{"line":102,"column":8},"end":{"line":107,"column":9}}],"line":102}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":2,"14":2,"15":0,"16":2,"17":2,"18":2,"19":5,"20":5,"21":2,"22":5,"23":0,"24":5,"25":0,"26":5,"27":1,"28":4,"29":4,"30":1,"31":1,"32":1,"33":1,"34":2,"35":2,"36":2,"37":2,"38":0,"39":0,"40":0,"41":0,"42":1,"43":1,"44":1,"45":1,"46":0,"47":5,"48":5,"49":1,"50":1,"51":1,"52":1,"53":1,"54":2,"55":2,"56":5,"57":9,"58":5,"59":0,"60":5,"61":1,"62":4},"f":{"0":1,"1":1,"2":2,"3":2,"4":5,"5":1,"6":2,"7":9},"b":{"0":[2,0],"1":[0,5],"2":[0,5],"3":[1,4],"4":[1,2,0,1,0],"5":[0,5],"6":[1,4]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/ASN1Generator.ts","sources":["D:/formation/asn.1/src/ASN1Generator.ts"],"names":[],"mappings":"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","sourcesContent":["import {ASN1Assignment} from './asn1/ASN1Assignment';\nimport {ASN1ComponentType} from './asn1/ASN1ComponentType';\nimport {ASN1DefinedType} from './asn1/ASN1DefinedType';\nimport {ASN1Module} from './asn1/ASN1Module';\nimport {ASN1NamedType} from './asn1/ASN1NamedType';\nimport {ASN1Sequence} from './asn1/ASN1Sequence';\nimport {ASN1Message, ASN1Type} from './interfaces/ASN1Message';\nimport {Props} from './interfaces/Props';\nimport {TagClass} from './interfaces/TagClass';\nimport {TagUniversal} from './interfaces/TagUniversal';\n\nexport class ASN1Generator {\n  asn1Message: ASN1Message;\n  constructor(public module: ASN1Module, public type: string) {\n    const assignment = module.getAssignment(type);\n    this.asn1Message = this.generateFromAssignement(assignment);\n  }\n\n  generateFromJson(data: Props): ASN1Message {\n    generateFromJson(this.asn1Message, data);\n    return this.asn1Message;\n  }\n\n  generateFromAssignement(assignment: ASN1Assignment): ASN1Message {\n    if (assignment.type instanceof ASN1Sequence) {\n      return this.generateFromSequence(assignment.type);\n    }\n    throw new Error('not yet implemented');\n  }\n\n  generateFromSequence(sequence: ASN1Sequence): ASN1Message {\n    const message = {\n      isConstructed: true,\n      tagClass: TagClass.UNIVERSAL,\n      tagCode: TagUniversal.SEQUENCE.code,\n      tagLabel: TagUniversal.SEQUENCE.label,\n      value: [] as ASN1Message[],\n    };\n\n    for (let i = 0; i < sequence.components.length; i++) {\n      const msg = this.generateFromComponent(sequence.components[i]);\n      message.value.push(msg);\n    }\n    return message;\n  }\n\n  generateFromComponent(component: ASN1ComponentType): ASN1Message {\n    if (!(component instanceof ASN1NamedType)) {\n      throw new Error('only implement ASN1NamedType at this time');\n    }\n    let message: ASN1Message;\n    if (component.type instanceof ASN1Sequence) {\n      message = this.generateFromSequence(component.type);\n    } else if (component.type instanceof ASN1DefinedType) {\n      message = this.generateFromDefinedType(component.type);\n    } else {\n      message = {\n        isConstructed: false,\n        tagClass: TagClass.UNIVERSAL,\n        tagCode: -1,\n        tagLabel: 'TBD',\n        value: null,\n      };\n      switch (component.type.constructor.name) {\n        case 'ASN1BooleanType':\n          message.tagLabel = TagUniversal.BOOLEAN.label;\n          message.tagCode = TagUniversal.BOOLEAN.code;\n          message.value = false;\n          break;\n        case 'ASN1GeneralStringType':\n          message.tagLabel = TagUniversal.GENERAL_STRING.label;\n          message.tagCode = TagUniversal.GENERAL_STRING.code;\n          message.value = 'to be replaced';\n          break;\n        case 'ASN1IA5StringType':\n          message.tagLabel = TagUniversal.IA5STRING.label;\n          message.tagCode = TagUniversal.IA5STRING.code;\n          message.value = 'to be replaced';\n          break;\n        case 'ASN1IntegerType':\n          message.tagLabel = TagUniversal.INTEGER.label;\n          message.tagCode = TagUniversal.INTEGER.code;\n          message.value = 1337;\n          break;\n        default:\n          throw new Error(\n            'not yet implemented: type = ' + component.type.constructor.name\n          );\n      }\n    }\n    message.tagName = component.name;\n    return message;\n  }\n\n  generateFromDefinedType(type: ASN1DefinedType): ASN1Message {\n    const assignment = this.module.getAssignment(type.name);\n    const message = this.generateFromAssignement(assignment);\n    message.tagDefinedType = type.name;\n    return message;\n  }\n}\n\nfunction generateFromJson(msg: ASN1Message, data: Props) {\n  const array = msg.value as ASN1Message[];\n  for (const key of Object.keys(data)) {\n    const cell = array.find(c => c.tagName === key);\n    if (cell === undefined) {\n      throw new Error('cell not found for key = ' + key);\n    }\n    if (cell.tagCode === TagUniversal.SEQUENCE.code) {\n      generateFromJson(cell, data[key] as Props);\n    } else {\n      cell.value = data[key] as ASN1Type;\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"661aa421a20fca75e9c81b92deba3ee0004cbaeb","contentHash":"a8b94eec5a476bbfc6ec70f51f41f2b1cb352427111e1d7455db66454fa32136"},"D:\\formation\\asn.1\\src\\interfaces\\TagUniversal.ts":{"path":"D:\\formation\\asn.1\\src\\interfaces\\TagUniversal.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":0},"end":{"line":13,"column":2}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/interfaces/TagUniversal.ts","sources":["D:/formation/asn.1/src/interfaces/TagUniversal.ts"],"names":[],"mappings":";;;AAAa,QAAA,YAAY,GAAG;IAC1B,OAAO,EAAE,EAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAC;IACpC,OAAO,EAAE,EAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,SAAS,EAAC;IACpC,UAAU,EAAE,EAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,YAAY,EAAC;IAC1C,YAAY,EAAE,EAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,cAAc,EAAC;IAC9C,iBAAiB,EAAE,EAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,mBAAmB,EAAC;IACxD,QAAQ,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,UAAU,EAAC;IACvC,SAAS,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,WAAW,EAAC;IACzC,cAAc,EAAE,EAAC,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,eAAe,EAAC;CACnD,CAAC","sourcesContent":["export const TagUniversal = {\n  BOOLEAN: {code: 1, label: 'BOOLEAN'},\n  INTEGER: {code: 2, label: 'INTEGER'},\n  BIT_STRING: {code: 3, label: 'BIT_STRING'},\n  OCTET_STRING: {code: 4, label: 'OCTET_STRING'},\n  OBJECT_IDENTIFIER: {code: 6, label: 'OBJECT_IDENTIFIER'},\n  SEQUENCE: {code: 16, label: 'SEQUENCE'},\n  IA5STRING: {code: 22, label: 'IA5String'},\n  GENERAL_STRING: {code: 27, label: 'GeneralString'},\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"29f9e14915bdacf2c65893cb3b50c6ff9cb02454","contentHash":"86eceee8ebf381e224c8584f9965a48e1c0c2fe9cad14d94c13e666ccf165ff0"},"D:\\formation\\asn.1\\src\\ASN1Validator.ts":{"path":"D:\\formation\\asn.1\\src\\ASN1Validator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":26},"end":{"line":4,"column":59}},"3":{"start":{"line":5,"column":24},"end":{"line":5,"column":55}},"4":{"start":{"line":6,"column":23},"end":{"line":6,"column":53}},"5":{"start":{"line":7,"column":25},"end":{"line":7,"column":57}},"6":{"start":{"line":8,"column":25},"end":{"line":8,"column":57}},"7":{"start":{"line":11,"column":8},"end":{"line":11,"column":29}},"8":{"start":{"line":14,"column":27},"end":{"line":14,"column":58}},"9":{"start":{"line":15,"column":8},"end":{"line":15,"column":51}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":47}},"11":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"12":{"start":{"line":20,"column":12},"end":{"line":20,"column":60}},"13":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"14":{"start":{"line":23,"column":12},"end":{"line":23,"column":58}},"15":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"16":{"start":{"line":28,"column":12},"end":{"line":28,"column":107}},"17":{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},"18":{"start":{"line":31,"column":12},"end":{"line":31,"column":104}},"19":{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},"20":{"start":{"line":34,"column":29},"end":{"line":36,"column":32}},"21":{"start":{"line":37,"column":12},"end":{"line":37,"column":61}},"22":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"23":{"start":{"line":40,"column":12},"end":{"line":40,"column":61}},"24":{"start":{"line":44,"column":16},"end":{"line":44,"column":17}},"25":{"start":{"line":45,"column":8},"end":{"line":61,"column":9}},"26":{"start":{"line":45,"column":21},"end":{"line":45,"column":22}},"27":{"start":{"line":46,"column":30},"end":{"line":46,"column":52}},"28":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"29":{"start":{"line":48,"column":16},"end":{"line":48,"column":78}},"30":{"start":{"line":51,"column":12},"end":{"line":58,"column":13}},"31":{"start":{"line":52,"column":16},"end":{"line":57,"column":17}},"32":{"start":{"line":53,"column":20},"end":{"line":53,"column":83}},"33":{"start":{"line":56,"column":20},"end":{"line":56,"column":29}},"34":{"start":{"line":59,"column":12},"end":{"line":59,"column":75}},"35":{"start":{"line":60,"column":12},"end":{"line":60,"column":16}},"36":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"37":{"start":{"line":65,"column":12},"end":{"line":65,"column":62}},"38":{"start":{"line":67,"column":8},"end":{"line":101,"column":9}},"39":{"start":{"line":68,"column":12},"end":{"line":68,"column":59}},"40":{"start":{"line":70,"column":13},"end":{"line":101,"column":9}},"41":{"start":{"line":71,"column":12},"end":{"line":71,"column":59}},"42":{"start":{"line":73,"column":13},"end":{"line":101,"column":9}},"43":{"start":{"line":74,"column":12},"end":{"line":74,"column":55}},"44":{"start":{"line":75,"column":31},"end":{"line":75,"column":77}},"45":{"start":{"line":76,"column":12},"end":{"line":76,"column":55}},"46":{"start":{"line":79,"column":12},"end":{"line":100,"column":13}},"47":{"start":{"line":80,"column":29},"end":{"line":80,"column":60}},"48":{"start":{"line":81,"column":16},"end":{"line":99,"column":17}},"49":{"start":{"line":83,"column":24},"end":{"line":85,"column":25}},"50":{"start":{"line":84,"column":28},"end":{"line":84,"column":66}},"51":{"start":{"line":86,"column":24},"end":{"line":86,"column":30}},"52":{"start":{"line":88,"column":24},"end":{"line":90,"column":25}},"53":{"start":{"line":89,"column":28},"end":{"line":89,"column":66}},"54":{"start":{"line":91,"column":24},"end":{"line":91,"column":30}},"55":{"start":{"line":93,"column":24},"end":{"line":95,"column":25}},"56":{"start":{"line":94,"column":28},"end":{"line":94,"column":75}},"57":{"start":{"line":96,"column":24},"end":{"line":96,"column":30}},"58":{"start":{"line":98,"column":24},"end":{"line":98,"column":30}},"59":{"start":{"line":102,"column":8},"end":{"line":102,"column":39}},"60":{"start":{"line":105,"column":8},"end":{"line":105,"column":41}},"61":{"start":{"line":106,"column":27},"end":{"line":106,"column":63}},"62":{"start":{"line":107,"column":8},"end":{"line":107,"column":60}},"63":{"start":{"line":111,"column":8},"end":{"line":119,"column":9}},"64":{"start":{"line":111,"column":21},"end":{"line":111,"column":22}},"65":{"start":{"line":112,"column":12},"end":{"line":117,"column":13}},"66":{"start":{"line":113,"column":16},"end":{"line":113,"column":68}},"67":{"start":{"line":116,"column":16},"end":{"line":116,"column":25}},"68":{"start":{"line":118,"column":12},"end":{"line":118,"column":18}},"69":{"start":{"line":122,"column":0},"end":{"line":122,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":24},"end":{"line":12,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":26},"end":{"line":17,"column":5}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":42},"end":{"line":25,"column":5}},"line":18},"3":{"name":"(anonymous_3)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":42},"end":{"line":42,"column":5}},"line":26},"4":{"name":"(anonymous_4)","decl":{"start":{"line":43,"column":4},"end":{"line":43,"column":5}},"loc":{"start":{"line":43,"column":38},"end":{"line":62,"column":5}},"line":43},"5":{"name":"(anonymous_5)","decl":{"start":{"line":63,"column":4},"end":{"line":63,"column":5}},"loc":{"start":{"line":63,"column":40},"end":{"line":103,"column":5}},"line":63},"6":{"name":"(anonymous_6)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":37},"end":{"line":108,"column":5}},"line":104},"7":{"name":"(anonymous_7)","decl":{"start":{"line":109,"column":4},"end":{"line":109,"column":5}},"loc":{"start":{"line":109,"column":36},"end":{"line":120,"column":5}},"line":109}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},{"start":{"line":19,"column":8},"end":{"line":21,"column":9}}],"line":19},"1":{"loc":{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":24,"column":9}},{"start":{"line":22,"column":8},"end":{"line":24,"column":9}}],"line":22},"2":{"loc":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},{"start":{"line":27,"column":8},"end":{"line":29,"column":9}}],"line":27},"3":{"loc":{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":32,"column":9}},{"start":{"line":30,"column":8},"end":{"line":32,"column":9}}],"line":30},"4":{"loc":{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},"type":"if","locations":[{"start":{"line":33,"column":8},"end":{"line":38,"column":9}},{"start":{"line":33,"column":8},"end":{"line":38,"column":9}}],"line":33},"5":{"loc":{"start":{"line":34,"column":29},"end":{"line":36,"column":32}},"type":"cond-expr","locations":[{"start":{"line":35,"column":18},"end":{"line":35,"column":23}},{"start":{"line":36,"column":18},"end":{"line":36,"column":32}}],"line":34},"6":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{"line":39,"column":8},"end":{"line":41,"column":9}}],"line":39},"7":{"loc":{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},"type":"if","locations":[{"start":{"line":47,"column":12},"end":{"line":49,"column":13}},{"start":{"line":47,"column":12},"end":{"line":49,"column":13}}],"line":47},"8":{"loc":{"start":{"line":51,"column":12},"end":{"line":58,"column":13}},"type":"if","locations":[{"start":{"line":51,"column":12},"end":{"line":58,"column":13}},{"start":{"line":51,"column":12},"end":{"line":58,"column":13}}],"line":51},"9":{"loc":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},{"start":{"line":64,"column":8},"end":{"line":66,"column":9}}],"line":64},"10":{"loc":{"start":{"line":67,"column":8},"end":{"line":101,"column":9}},"type":"if","locations":[{"start":{"line":67,"column":8},"end":{"line":101,"column":9}},{"start":{"line":67,"column":8},"end":{"line":101,"column":9}}],"line":67},"11":{"loc":{"start":{"line":70,"column":13},"end":{"line":101,"column":9}},"type":"if","locations":[{"start":{"line":70,"column":13},"end":{"line":101,"column":9}},{"start":{"line":70,"column":13},"end":{"line":101,"column":9}}],"line":70},"12":{"loc":{"start":{"line":73,"column":13},"end":{"line":101,"column":9}},"type":"if","locations":[{"start":{"line":73,"column":13},"end":{"line":101,"column":9}},{"start":{"line":73,"column":13},"end":{"line":101,"column":9}}],"line":73},"13":{"loc":{"start":{"line":79,"column":12},"end":{"line":100,"column":13}},"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":100,"column":13}},{"start":{"line":79,"column":12},"end":{"line":100,"column":13}}],"line":79},"14":{"loc":{"start":{"line":81,"column":16},"end":{"line":99,"column":17}},"type":"switch","locations":[{"start":{"line":82,"column":20},"end":{"line":86,"column":30}},{"start":{"line":87,"column":20},"end":{"line":91,"column":30}},{"start":{"line":92,"column":20},"end":{"line":96,"column":30}},{"start":{"line":97,"column":20},"end":{"line":98,"column":30}}],"line":81},"15":{"loc":{"start":{"line":83,"column":24},"end":{"line":85,"column":25}},"type":"if","locations":[{"start":{"line":83,"column":24},"end":{"line":85,"column":25}},{"start":{"line":83,"column":24},"end":{"line":85,"column":25}}],"line":83},"16":{"loc":{"start":{"line":88,"column":24},"end":{"line":90,"column":25}},"type":"if","locations":[{"start":{"line":88,"column":24},"end":{"line":90,"column":25}},{"start":{"line":88,"column":24},"end":{"line":90,"column":25}}],"line":88},"17":{"loc":{"start":{"line":93,"column":24},"end":{"line":95,"column":25}},"type":"if","locations":[{"start":{"line":93,"column":24},"end":{"line":95,"column":25}},{"start":{"line":93,"column":24},"end":{"line":95,"column":25}}],"line":93}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":3,"8":3,"9":3,"10":3,"11":21,"12":6,"13":20,"14":5,"15":30,"16":0,"17":30,"18":3,"19":27,"20":5,"21":5,"22":27,"23":13,"24":10,"25":10,"26":10,"27":31,"28":31,"29":0,"30":31,"31":3,"32":3,"33":2,"34":29,"35":29,"36":37,"37":0,"38":37,"39":4,"40":33,"41":24,"42":9,"43":5,"44":5,"45":5,"46":4,"47":2,"48":2,"49":0,"50":0,"51":0,"52":1,"53":0,"54":1,"55":1,"56":0,"57":1,"58":0,"59":34,"60":13,"61":13,"62":13,"63":4,"64":4,"65":5,"66":5,"67":1,"68":4,"69":1},"f":{"0":3,"1":3,"2":21,"3":30,"4":10,"5":37,"6":13,"7":4},"b":{"0":[6,15],"1":[5,15],"2":[0,30],"3":[3,27],"4":[5,22],"5":[2,3],"6":[13,14],"7":[0,31],"8":[3,28],"9":[0,37],"10":[4,33],"11":[24,9],"12":[5,4],"13":[2,2],"14":[0,1,1,0],"15":[0,0],"16":[0,1],"17":[0,1]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/ASN1Validator.ts","sources":["D:/formation/asn.1/src/ASN1Validator.ts"],"names":[],"mappings":"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","sourcesContent":["import {ASN1ComponentType} from './asn1/ASN1ComponentType';\nimport {ASN1DefinedType} from './asn1/ASN1DefinedType';\nimport {ASN1Module} from './asn1/ASN1Module';\nimport {ASN1NamedType} from './asn1/ASN1NamedType';\nimport {ASN1Sequence} from './asn1/ASN1Sequence';\nimport {ASN1TaggedType} from './asn1/ASN1TaggedType';\nimport {ASN1Message} from './interfaces/ASN1Message';\nimport {ASN1Assignment} from './asn1/ASN1Assignment';\nimport {ASN1ChoiceType} from './asn1/ASN1ChoiceType';\n\nexport class ASN1Validator {\n  constructor(private module: ASN1Module) {}\n\n  validate(input: ASN1Message, type: string) {\n    const assignment = this.module.getAssignment(type);\n    this.validateAssignment(input, assignment);\n    input.tagDefinedType = assignment.name;\n  }\n\n  validateAssignment(input: ASN1Message, assignment: ASN1Assignment) {\n    if (assignment.type instanceof ASN1TaggedType) {\n      this.validateTaggedType(assignment.type, input);\n    }\n    if (assignment.type instanceof ASN1Sequence) {\n      this.validateSequence(assignment.type, input);\n    }\n  }\n\n  validateTaggedType(taggedType: ASN1TaggedType, input: ASN1Message) {\n    if (input.tagClass !== taggedType.tag.tagClass) {\n      throw new Error(\n        `taggedType tagClass differ: ${input.tagClass} vs ${taggedType.tag.tagClass}`\n      );\n    }\n    if (input.tagCode !== taggedType.tag.tagCode) {\n      throw new Error(\n        `taggedType tagCode differ: ${input.tagCode} vs ${taggedType.tag.tagCode}`\n      );\n    }\n    if (taggedType.type instanceof ASN1Sequence) {\n      const subInput = taggedType.implicit\n        ? input\n        : (input.value as ASN1Message[])[0];\n      this.validateSequence(taggedType.type, subInput);\n    }\n    if (taggedType.type instanceof ASN1DefinedType) {\n      this.validateDefinedType(taggedType.type, input);\n    }\n  }\n\n  validateSequence(sequence: ASN1Sequence, input: ASN1Message) {\n    let c = 0;\n    for (let i = 0; i < sequence.components.length; i++) {\n      const component = sequence.components[i];\n      if (!(component instanceof ASN1NamedType)) {\n        throw new Error('limitation: cannot process only NamedType.');\n      }\n      // manage optional case\n      if (component.optional) {\n        try {\n          this.validateComponent(\n            sequence.components[i],\n            (input.value as ASN1Message[])[c]\n          );\n        } catch (e) {\n          continue;\n        }\n      }\n\n      this.validateComponent(\n        sequence.components[i],\n        (input.value as ASN1Message[])[c]\n      );\n      c++;\n    }\n  }\n\n  validateComponent(component: ASN1ComponentType, input: ASN1Message) {\n    if (!(component instanceof ASN1NamedType)) {\n      throw new Error('can process only ASN1NamedType');\n    }\n\n    if (component.type instanceof ASN1ChoiceType) {\n      this.validateChoiceType(component.type, input);\n    } else if (component.type instanceof ASN1TaggedType) {\n      this.validateTaggedType(component.type, input);\n    } else if (component.type instanceof ASN1DefinedType) {\n      input.tagDefinedType = component.type.name;\n      const assignment = this.module.getAssignment(component.type.name);\n      this.validateAssignment(input, assignment);\n    } else {\n      if (input.value !== null) {\n        const name = component.type.constructor.name;\n        switch (name) {\n          case 'ASN1BooleanType':\n            if (typeof input.value !== 'boolean') {\n              throw new Error('must be an boolean');\n            }\n            break;\n          case 'ASN1IntegerType':\n            if (!Number.isInteger(input.value)) {\n              throw new Error('must be an integer');\n            }\n            break;\n          case 'ASN1IA5StringType':\n            if (typeof input.value !== 'string') {\n              throw new Error(`must be an string: ${input}`);\n            }\n            break;\n          default:\n            break;\n        }\n      }\n    }\n\n    input.tagName = component.name;\n  }\n\n  validateDefinedType(type: ASN1DefinedType, input: ASN1Message) {\n    input.tagDefinedType = type.name;\n    const assignment = this.module.getAssignment(type.name);\n    this.validateAssignment((input.value as ASN1Message[])[0], assignment);\n  }\n\n  validateChoiceType(type: ASN1ChoiceType, input: ASN1Message) {\n    // try to validate the first choice, if not ok, then the second, if not ok, then the third...\n    for (let i = 0; i < type.alternatives.length; i++) {\n      try {\n        this.validateComponent(type.alternatives[i], input);\n      } catch (e) {\n        continue;\n      }\n      break;\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9b16eaa8bcd8b9cc2f54413788f78a4aa8961aff","contentHash":"364aa3616ce9dc2e43156b89936fd40ae8df20322a2f78c35ad46b38738c2ed0"},"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\BERDecoder.ts":{"path":"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\BERDecoder.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":59}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":62}},"4":{"start":{"line":6,"column":23},"end":{"line":6,"column":66}},"5":{"start":{"line":7,"column":21},"end":{"line":7,"column":51}},"6":{"start":{"line":8,"column":21},"end":{"line":8,"column":44}},"7":{"start":{"line":9,"column":15},"end":{"line":9,"column":32}},"8":{"start":{"line":10,"column":24},"end":{"line":10,"column":60}},"9":{"start":{"line":11,"column":22},"end":{"line":11,"column":56}},"10":{"start":{"line":12,"column":24},"end":{"line":12,"column":60}},"11":{"start":{"line":13,"column":22},"end":{"line":13,"column":56}},"12":{"start":{"line":14,"column":31},"end":{"line":14,"column":74}},"13":{"start":{"line":15,"column":26},"end":{"line":15,"column":64}},"14":{"start":{"line":17,"column":16},"end":{"line":17,"column":58}},"15":{"start":{"line":18,"column":23},"end":{"line":18,"column":48}},"16":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"17":{"start":{"line":20,"column":8},"end":{"line":20,"column":45}},"18":{"start":{"line":22,"column":4},"end":{"line":22,"column":39}},"19":{"start":{"line":24,"column":0},"end":{"line":24,"column":30}},"20":{"start":{"line":26,"column":19},"end":{"line":26,"column":48}},"21":{"start":{"line":27,"column":18},"end":{"line":27,"column":28}},"22":{"start":{"line":29,"column":4},"end":{"line":29,"column":53}},"23":{"start":{"line":31,"column":4},"end":{"line":31,"column":58}},"24":{"start":{"line":33,"column":4},"end":{"line":33,"column":28}},"25":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"26":{"start":{"line":35,"column":8},"end":{"line":35,"column":22}},"27":{"start":{"line":38,"column":23},"end":{"line":38,"column":25}},"28":{"start":{"line":40,"column":4},"end":{"line":50,"column":5}},"29":{"start":{"line":41,"column":8},"end":{"line":41,"column":28}},"30":{"start":{"line":43,"column":20},"end":{"line":43,"column":46}},"31":{"start":{"line":44,"column":8},"end":{"line":44,"column":34}},"32":{"start":{"line":45,"column":8},"end":{"line":45,"column":28}},"33":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"34":{"start":{"line":48,"column":12},"end":{"line":48,"column":18}},"35":{"start":{"line":52,"column":4},"end":{"line":52,"column":43}},"36":{"start":{"line":53,"column":4},"end":{"line":53,"column":18}},"37":{"start":{"line":56,"column":22},"end":{"line":56,"column":75}},"38":{"start":{"line":57,"column":19},"end":{"line":57,"column":29}},"39":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"40":{"start":{"line":60,"column":8},"end":{"line":60,"column":72}},"41":{"start":{"line":63,"column":4},"end":{"line":66,"column":5}},"42":{"start":{"line":64,"column":8},"end":{"line":64,"column":34}},"43":{"start":{"line":65,"column":8},"end":{"line":65,"column":25}},"44":{"start":{"line":68,"column":20},"end":{"line":68,"column":21}},"45":{"start":{"line":69,"column":4},"end":{"line":72,"column":5}},"46":{"start":{"line":69,"column":17},"end":{"line":69,"column":18}},"47":{"start":{"line":70,"column":20},"end":{"line":70,"column":30}},"48":{"start":{"line":71,"column":8},"end":{"line":71,"column":42}},"49":{"start":{"line":73,"column":4},"end":{"line":73,"column":33}},"50":{"start":{"line":74,"column":4},"end":{"line":74,"column":21}},"51":{"start":{"line":77,"column":29},"end":{"line":77,"column":50}},"52":{"start":{"line":78,"column":19},"end":{"line":86,"column":5}},"53":{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},"54":{"start":{"line":88,"column":8},"end":{"line":88,"column":22}},"55":{"start":{"line":90,"column":16},"end":{"line":90,"column":34}},"56":{"start":{"line":91,"column":4},"end":{"line":91,"column":22}},"57":{"start":{"line":92,"column":4},"end":{"line":100,"column":5}},"58":{"start":{"line":93,"column":22},"end":{"line":93,"column":47}},"59":{"start":{"line":94,"column":8},"end":{"line":98,"column":9}},"60":{"start":{"line":95,"column":22},"end":{"line":95,"column":46}},"61":{"start":{"line":96,"column":12},"end":{"line":96,"column":33}},"62":{"start":{"line":97,"column":12},"end":{"line":97,"column":21}},"63":{"start":{"line":99,"column":8},"end":{"line":99,"column":50}},"64":{"start":{"line":101,"column":4},"end":{"line":101,"column":18}},"65":{"start":{"line":104,"column":29},"end":{"line":104,"column":50}},"66":{"start":{"line":105,"column":19},"end":{"line":113,"column":5}},"67":{"start":{"line":114,"column":4},"end":{"line":117,"column":5}},"68":{"start":{"line":115,"column":8},"end":{"line":115,"column":67}},"69":{"start":{"line":116,"column":8},"end":{"line":116,"column":22}},"70":{"start":{"line":118,"column":4},"end":{"line":121,"column":5}},"71":{"start":{"line":119,"column":8},"end":{"line":119,"column":67}},"72":{"start":{"line":120,"column":8},"end":{"line":120,"column":22}},"73":{"start":{"line":122,"column":4},"end":{"line":127,"column":5}},"74":{"start":{"line":125,"column":8},"end":{"line":125,"column":71}},"75":{"start":{"line":126,"column":8},"end":{"line":126,"column":22}},"76":{"start":{"line":128,"column":4},"end":{"line":133,"column":5}},"77":{"start":{"line":131,"column":8},"end":{"line":131,"column":75}},"78":{"start":{"line":132,"column":8},"end":{"line":132,"column":22}},"79":{"start":{"line":134,"column":4},"end":{"line":140,"column":5}},"80":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"81":{"start":{"line":136,"column":12},"end":{"line":136,"column":105}},"82":{"start":{"line":138,"column":8},"end":{"line":138,"column":85}},"83":{"start":{"line":139,"column":8},"end":{"line":139,"column":22}},"84":{"start":{"line":141,"column":4},"end":{"line":144,"column":5}},"85":{"start":{"line":142,"column":8},"end":{"line":142,"column":71}},"86":{"start":{"line":143,"column":8},"end":{"line":143,"column":22}},"87":{"start":{"line":145,"column":4},"end":{"line":148,"column":5}},"88":{"start":{"line":146,"column":8},"end":{"line":146,"column":71}},"89":{"start":{"line":147,"column":8},"end":{"line":147,"column":22}},"90":{"start":{"line":149,"column":4},"end":{"line":149,"column":86}}},"fnMap":{"0":{"name":"BERDecode","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":18}},"loc":{"start":{"line":16,"column":26},"end":{"line":23,"column":1}},"line":16},"1":{"name":"readIdentifierOctets","decl":{"start":{"line":25,"column":9},"end":{"line":25,"column":29}},"loc":{"start":{"line":25,"column":35},"end":{"line":54,"column":1}},"line":25},"2":{"name":"readLengthOctets","decl":{"start":{"line":55,"column":9},"end":{"line":55,"column":25}},"loc":{"start":{"line":55,"column":31},"end":{"line":75,"column":1}},"line":55},"3":{"name":"readComposed","decl":{"start":{"line":76,"column":9},"end":{"line":76,"column":21}},"loc":{"start":{"line":76,"column":39},"end":{"line":102,"column":1}},"line":76},"4":{"name":"readSimple","decl":{"start":{"line":103,"column":9},"end":{"line":103,"column":19}},"loc":{"start":{"line":103,"column":37},"end":{"line":150,"column":1}},"line":103}},"branchMap":{"0":{"loc":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},{"start":{"line":19,"column":4},"end":{"line":21,"column":5}}],"line":19},"1":{"loc":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},{"start":{"line":34,"column":4},"end":{"line":36,"column":5}}],"line":34},"2":{"loc":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},{"start":{"line":47,"column":8},"end":{"line":49,"column":9}}],"line":47},"3":{"loc":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},{"start":{"line":59,"column":4},"end":{"line":61,"column":5}}],"line":59},"4":{"loc":{"start":{"line":63,"column":4},"end":{"line":66,"column":5}},"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":66,"column":5}},{"start":{"line":63,"column":4},"end":{"line":66,"column":5}}],"line":63},"5":{"loc":{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},{"start":{"line":87,"column":4},"end":{"line":89,"column":5}}],"line":87},"6":{"loc":{"start":{"line":94,"column":8},"end":{"line":98,"column":9}},"type":"if","locations":[{"start":{"line":94,"column":8},"end":{"line":98,"column":9}},{"start":{"line":94,"column":8},"end":{"line":98,"column":9}}],"line":94},"7":{"loc":{"start":{"line":114,"column":4},"end":{"line":117,"column":5}},"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":117,"column":5}},{"start":{"line":114,"column":4},"end":{"line":117,"column":5}}],"line":114},"8":{"loc":{"start":{"line":118,"column":4},"end":{"line":121,"column":5}},"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":121,"column":5}},{"start":{"line":118,"column":4},"end":{"line":121,"column":5}}],"line":118},"9":{"loc":{"start":{"line":122,"column":4},"end":{"line":127,"column":5}},"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":127,"column":5}},{"start":{"line":122,"column":4},"end":{"line":127,"column":5}}],"line":122},"10":{"loc":{"start":{"line":128,"column":4},"end":{"line":133,"column":5}},"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":133,"column":5}},{"start":{"line":128,"column":4},"end":{"line":133,"column":5}}],"line":128},"11":{"loc":{"start":{"line":134,"column":4},"end":{"line":140,"column":5}},"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":140,"column":5}},{"start":{"line":134,"column":4},"end":{"line":140,"column":5}}],"line":134},"12":{"loc":{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":137,"column":9}},{"start":{"line":135,"column":8},"end":{"line":137,"column":9}}],"line":135},"13":{"loc":{"start":{"line":141,"column":4},"end":{"line":144,"column":5}},"type":"if","locations":[{"start":{"line":141,"column":4},"end":{"line":144,"column":5}},{"start":{"line":141,"column":4},"end":{"line":144,"column":5}}],"line":141},"14":{"loc":{"start":{"line":145,"column":4},"end":{"line":148,"column":5}},"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":148,"column":5}},{"start":{"line":145,"column":4},"end":{"line":148,"column":5}}],"line":145}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":4,"15":4,"16":4,"17":4,"18":0,"19":1,"20":64,"21":64,"22":64,"23":64,"24":64,"25":64,"26":64,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":64,"38":64,"39":64,"40":0,"41":64,"42":47,"43":47,"44":17,"45":17,"46":17,"47":31,"48":31,"49":17,"50":17,"51":37,"52":37,"53":37,"54":0,"55":37,"56":37,"57":37,"58":60,"59":60,"60":33,"61":33,"62":33,"63":27,"64":37,"65":27,"66":27,"67":27,"68":5,"69":5,"70":22,"71":12,"72":12,"73":10,"74":1,"75":1,"76":9,"77":3,"78":3,"79":6,"80":2,"81":0,"82":2,"83":2,"84":4,"85":1,"86":1,"87":3,"88":3,"89":3,"90":0},"f":{"0":4,"1":64,"2":64,"3":37,"4":27},"b":{"0":[4,0],"1":[64,0],"2":[0,0],"3":[0,64],"4":[47,17],"5":[0,37],"6":[33,27],"7":[5,22],"8":[12,10],"9":[1,9],"10":[3,6],"11":[2,4],"12":[0,2],"13":[1,3],"14":[3,0]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/codec/ber/decoder/BERDecoder.ts","sources":["D:/formation/asn.1/src/codec/ber/decoder/BERDecoder.ts"],"names":[],"mappings":"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","sourcesContent":["import {CursorDataView} from '../../../CursorDataView';\nimport {ASN1Message} from '../../../interfaces/ASN1Message';\nimport {BERLength} from '../../../interfaces/BERLength';\nimport {LengthType} from '../../../interfaces/LengthType';\nimport {TagUniversal} from '../../../interfaces/TagUniversal';\nimport {TagDecoder} from '../../../TagDecoder';\nimport {Identifier} from './Identifier';\nimport {getTagClass, isConstructed} from './misc';\nimport {readBitString} from './primitive/ReadBitString';\nimport {readBoolean} from './primitive/ReadBoolean';\nimport {readIA5String} from './primitive/ReadIA5String';\nimport {readInteger} from './primitive/ReadInteger';\nimport {readObjectIdentifier} from './primitive/ReadObjectIdentifier';\nimport {readOctetString} from './primitive/ReadOctetString';\n\nexport function BERDecode(input: ArrayBuffer): ASN1Message {\n  const cdv = new CursorDataView(input);\n  const identifier = readIdentifierOctets(cdv);\n  if (identifier.isComposed()) {\n    return readComposed(cdv, identifier);\n  }\n  return readSimple(cdv, identifier);\n}\n\nfunction readIdentifierOctets(cdv: CursorDataView): Identifier {\n  const result = new Identifier();\n  const octet = cdv.read();\n  // (8.1.2.2 a)\n  result.tagClass = getTagClass(octet);\n  // (8.1.2.2 b)\n  result.constructed = isConstructed(octet);\n  // (8.1.2.4.1 c)\n  result.tag = octet & 0b0001_1111;\n  if (result.tag < 0b0001_1111) {\n    return result;\n  }\n  // multi octets.\n  let tagNumberStr = '';\n  let octetN;\n  while (true) {\n    octetN = cdv.read();\n    // bit 7 to 1 (8.1.2.4.2 b)\n    const str = (octetN & 0b0111_1111).toString(2);\n    console.log('str: ', str);\n    tagNumberStr += str;\n    // last octet (8.1.2.4.2 a)\n    if ((octetN & 0b1000_0000) === 0) {\n      break;\n    }\n  }\n  // (8.1.2.4.2 b) concactenation\n  result.tag = parseInt(tagNumberStr, 2);\n  return result;\n}\n\nfunction readLengthOctets(cdv: CursorDataView): BERLength {\n  const berLength: BERLength = {type: LengthType.DEFINITE, length: 0};\n  const length = cdv.read();\n  // (8.1.3.6.1): indefinite form\n  if (length === 0b1000_0000) {\n    return {type: LengthType.INDEFINITE, length: -1};\n  }\n  // (8.1.3.4): one octet case (<=127, definite form)\n  if ((length & 0b1000_0000) === 0) {\n    berLength.length = length;\n    return berLength;\n  }\n\n  // (8.1.3.5 b) Big Length case (>127)\n  let bigLength = 0;\n  for (let i = 0; i < length - 0b1000_0000; i++) {\n    const nbr = cdv.read();\n    bigLength = bigLength * 256 + nbr;\n  }\n  berLength.length = bigLength;\n  return berLength;\n}\n\nfunction readComposed(\n  cdv: CursorDataView,\n  identifier: Identifier\n): ASN1Message {\n  const {length, type} = readLengthOctets(cdv);\n  const result: ASN1Message = {\n    tagClass: identifier.tagClass,\n    isConstructed: identifier.constructed,\n    tagCode: identifier.tag,\n    tagLabel: TagDecoder.getLabel(identifier.tagClass, identifier.tag),\n    length: length,\n    lengthType: type,\n    value: null,\n  };\n  if (length === 0) {\n    return result;\n  }\n  const max = cdv.index + length;\n  result.value = [];\n  while (cdv.index < max) {\n    const ident = readIdentifierOctets(cdv);\n    if (ident.isComposed()) {\n      const a = readComposed(cdv, ident);\n      result.value.push(a);\n      continue;\n    }\n    result.value.push(readSimple(cdv, ident));\n  }\n  return result;\n}\n\nfunction readSimple(cdv: CursorDataView, identifier: Identifier): ASN1Message {\n  const {length, type} = readLengthOctets(cdv);\n\n  const result: ASN1Message = {\n    tagClass: identifier.tagClass,\n    isConstructed: identifier.constructed,\n    tagCode: identifier.tag,\n    tagLabel: TagDecoder.getLabel(identifier.tagClass, identifier.tag),\n    length: length,\n    lengthType: type,\n    value: null,\n  };\n\n  if (identifier.tag === TagUniversal.BOOLEAN.code) {\n    result.value = readBoolean(cdv, length);\n    return result;\n  }\n  if (identifier.tag === TagUniversal.INTEGER.code) {\n    result.value = readInteger(cdv, length);\n    return result;\n  }\n  if (identifier.tag === TagUniversal.BIT_STRING.code) {\n    // 8.6.1 The encoding of a bitstring value shall be either primitive\n    // or constructed at the option of the sender.\n    result.value = readBitString(cdv, length);\n    return result;\n  }\n  if (identifier.tag === TagUniversal.OCTET_STRING.code) {\n    // 8.7.1 The encoding of an octetstring value shall be either primitive\n    // or constructed at the option of the sender.\n    result.value = readOctetString(cdv, length);\n    return result;\n  }\n  if (identifier.tag === TagUniversal.OBJECT_IDENTIFIER.code) {\n    if (identifier.constructed) {\n      throw new Error(\n        'The encoding of an Object Identifier should be primitive (clause 8.19.1).'\n      );\n    }\n    result.value = readObjectIdentifier(cdv, length);\n    return result;\n  }\n  if (identifier.tag === TagUniversal.IA5STRING.code) {\n    result.value = readIA5String(cdv, length);\n    return result;\n  }\n  if (identifier.tag === TagUniversal.GENERAL_STRING.code) {\n    result.value = readIA5String(cdv, length);\n    return result;\n  }\n  throw new Error(\n    `cannot understand the identifier tag number: ${identifier.tag}`\n  );\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8895c76aba806a24148fd47bbd29f61118d904c4","contentHash":"24d3be027ecbaeceff56e0b5592e53271aea7869f6e6159367a42d481fed8532"},"D:\\formation\\asn.1\\src\\CursorDataView.ts":{"path":"D:\\formation\\asn.1\\src\\CursorDataView.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":23}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":44}},"4":{"start":{"line":10,"column":21},"end":{"line":10,"column":55}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":24}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":20}},"7":{"start":{"line":15,"column":23},"end":{"line":15,"column":82}},"8":{"start":{"line":16,"column":22},"end":{"line":16,"column":60}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":29}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":21}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":23},"end":{"line":8,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":11},"end":{"line":13,"column":5}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":41},"end":{"line":19,"column":5}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":23},"end":{"line":14,"column":39}},"type":"default-arg","locations":[{"start":{"line":14,"column":34},"end":{"line":14,"column":39}}],"line":14}},"s":{"0":1,"1":1,"2":4,"3":4,"4":197,"5":197,"6":197,"7":7,"8":7,"9":7,"10":7,"11":1},"f":{"0":4,"1":197,"2":7},"b":{"0":[0]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/CursorDataView.ts","sources":["D:/formation/asn.1/src/CursorDataView.ts"],"names":[],"mappings":";;;AAEA,MAAa,cAAc;IAGzB,YAAY,KAAkB;QAD9B,UAAK,GAAG,CAAC,CAAC;QAER,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAED,IAAI;QACF,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChD,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;QAChB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,UAAU,CAAC,MAAc,EAAE,WAA0B,KAAK;QACxD,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC;QAC3E,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACrD,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC;QACrB,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAnBD,wCAmBC","sourcesContent":["import {EncodingValue} from './interfaces/EncodingValue';\n\nexport class CursorDataView {\n  dataview: DataView;\n  index = 0;\n  constructor(input: ArrayBuffer) {\n    this.dataview = new DataView(input);\n  }\n\n  read() {\n    const uint = this.dataview.getUint8(this.index);\n    this.index += 1;\n    return uint;\n  }\n\n  readString(length: number, encoding: EncodingValue = 'hex') {\n    const buffer = this.dataview.buffer.slice(this.index, this.index + length);\n    const value = Buffer.from(buffer).toString(encoding);\n    this.index += length;\n    return value;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"66174508d4af3326622f6e8c1f3e0cff56814ada","contentHash":"caa5ff320946f1c7aa28fa2baf39526c11dd2d5f2c63bdf1f6b4de865b0636d9"},"D:\\formation\\asn.1\\src\\interfaces\\LengthType.ts":{"path":"D:\\formation\\asn.1\\src\\interfaces\\LengthType.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":65}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":40}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":23},"end":{"line":8,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":16},"end":{"line":8,"column":63}},"type":"binary-expr","locations":[{"start":{"line":8,"column":16},"end":{"line":8,"column":34}},{"start":{"line":8,"column":39},"end":{"line":8,"column":62}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/interfaces/LengthType.ts","sources":["D:/formation/asn.1/src/interfaces/LengthType.ts"],"names":[],"mappings":";;;AAAA,IAAY,UAGX;AAHD,WAAY,UAAU;IACpB,mCAAqB,CAAA;IACrB,uCAAyB,CAAA;AAC3B,CAAC,EAHW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAGrB","sourcesContent":["export enum LengthType {\n  DEFINITE = 'DEFINITE',\n  INDEFINITE = 'INDEFINITE',\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d8be43f774982b16e7cb70d9fb7a367c9998fafe","contentHash":"4615a3ec5ac3285d5a24d5fe60ff74ea5d3386cb10cea7f92e18e7f50ffdd12a"},"D:\\formation\\asn.1\\src\\TagDecoder.ts":{"path":"D:\\formation\\asn.1\\src\\TagDecoder.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":51}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":59}},"4":{"start":{"line":8,"column":8},"end":{"line":14,"column":9}},"5":{"start":{"line":9,"column":29},"end":{"line":9,"column":97}},"6":{"start":{"line":9,"column":82},"end":{"line":9,"column":96}},"7":{"start":{"line":10,"column":12},"end":{"line":12,"column":13}},"8":{"start":{"line":11,"column":16},"end":{"line":11,"column":77}},"9":{"start":{"line":13,"column":12},"end":{"line":13,"column":34}},"10":{"start":{"line":15,"column":8},"end":{"line":15,"column":24}},"11":{"start":{"line":18,"column":0},"end":{"line":18,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":35},"end":{"line":16,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":77},"end":{"line":9,"column":78}},"loc":{"start":{"line":9,"column":82},"end":{"line":9,"column":96}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":8,"column":8},"end":{"line":14,"column":9}},{"start":{"line":8,"column":8},"end":{"line":14,"column":9}}],"line":8},"1":{"loc":{"start":{"line":10,"column":12},"end":{"line":12,"column":13}},"type":"if","locations":[{"start":{"line":10,"column":12},"end":{"line":12,"column":13}},{"start":{"line":10,"column":12},"end":{"line":12,"column":13}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":64,"5":38,"6":151,"7":38,"8":0,"9":38,"10":26,"11":1},"f":{"0":64,"1":151},"b":{"0":[38,26],"1":[0,38]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/TagDecoder.ts","sources":["D:/formation/asn.1/src/TagDecoder.ts"],"names":[],"mappings":";;;AAAA,oDAA+C;AAC/C,4DAAuD;AAEvD,MAAa,UAAU;IACrB,MAAM,CAAC,QAAQ,CAAC,QAAkB,EAAE,GAAW;QAC7C,IAAI,QAAQ,KAAK,mBAAQ,CAAC,SAAS,EAAE;YACnC,MAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,2BAAY,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;YACvE,IAAI,CAAC,QAAQ,EAAE;gBACb,MAAM,IAAI,KAAK,CAAC,qCAAqC,GAAG,GAAG,CAAC,CAAC;aAC9D;YACD,OAAO,QAAQ,CAAC,KAAK,CAAC;SACvB;QACD,OAAO,EAAE,GAAG,GAAG,CAAC;IAClB,CAAC;CACF;AAXD,gCAWC","sourcesContent":["import {TagClass} from './interfaces/TagClass';\nimport {TagUniversal} from './interfaces/TagUniversal';\n\nexport class TagDecoder {\n  static getLabel(tagClass: TagClass, tag: number): string {\n    if (tagClass === TagClass.UNIVERSAL) {\n      const foundTag = Object.values(TagUniversal).find(t => t.code === tag);\n      if (!foundTag) {\n        throw new Error('tag not yet implemented (decimal): ' + tag);\n      }\n      return foundTag.label;\n    }\n    return '' + tag;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cdc75b34d0e37cec7030486022c47af7290ab975","contentHash":"68b635f91ed7b732d341f8a5d9fbe904d8e6cc86316092c661a01b5b80fccf2a"},"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\Identifier.ts":{"path":"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\Identifier.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":58}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":66}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":54}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":33}},"6":{"start":{"line":10,"column":8},"end":{"line":10,"column":21}},"7":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"8":{"start":{"line":14,"column":12},"end":{"line":14,"column":24}},"9":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"10":{"start":{"line":17,"column":12},"end":{"line":17,"column":24}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":21}},"12":{"start":{"line":22,"column":0},"end":{"line":22,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":18},"end":{"line":11,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":17},"end":{"line":20,"column":5}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":15,"column":9}},{"start":{"line":13,"column":8},"end":{"line":15,"column":9}}],"line":13},"1":{"loc":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},{"start":{"line":16,"column":8},"end":{"line":18,"column":9}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":64,"5":64,"6":64,"7":64,"8":26,"9":38,"10":11,"11":27,"12":1},"f":{"0":64,"1":64},"b":{"0":[26,38],"1":[11,27]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/codec/ber/decoder/Identifier.ts","sources":["D:/formation/asn.1/src/codec/ber/decoder/Identifier.ts"],"names":[],"mappings":";;;AAAA,2DAAsD;AACtD,mEAA8D;AAE9D,MAAa,UAAU;IAAvB;QACE,aAAQ,GAAG,mBAAQ,CAAC,SAAS,CAAC;QAC9B,gBAAW,GAAG,KAAK,CAAC;QACpB,QAAG,GAAG,CAAC,CAAC;IAWV,CAAC;IATC,UAAU;QACR,IAAI,IAAI,CAAC,QAAQ,KAAK,mBAAQ,CAAC,SAAS,EAAE;YACxC,OAAO,IAAI,CAAC;SACb;QACD,IAAI,IAAI,CAAC,GAAG,KAAK,2BAAY,CAAC,QAAQ,CAAC,IAAI,EAAE;YAC3C,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAdD,gCAcC","sourcesContent":["import {TagClass} from '../../../interfaces/TagClass';\nimport {TagUniversal} from '../../../interfaces/TagUniversal';\n\nexport class Identifier {\n  tagClass = TagClass.UNIVERSAL;\n  constructed = false;\n  tag = 0;\n\n  isComposed() {\n    if (this.tagClass !== TagClass.UNIVERSAL) {\n      return true;\n    }\n    if (this.tag === TagUniversal.SEQUENCE.code) {\n      return true;\n    }\n    return false;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"31e199f402128ad5cb4ae95793d4e4e4ab0f59f2","contentHash":"a5aa9d403d9202d74345a95459602ae5140343e78fd801f108657a3f80bc52b3"},"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\misc.ts":{"path":"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\misc.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":53}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":58}},"3":{"start":{"line":6,"column":4},"end":{"line":17,"column":5}},"4":{"start":{"line":8,"column":12},"end":{"line":8,"column":49}},"5":{"start":{"line":10,"column":12},"end":{"line":10,"column":51}},"6":{"start":{"line":12,"column":12},"end":{"line":12,"column":56}},"7":{"start":{"line":14,"column":12},"end":{"line":14,"column":47}},"8":{"start":{"line":16,"column":12},"end":{"line":16,"column":53}},"9":{"start":{"line":19,"column":0},"end":{"line":19,"column":34}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":28}},"11":{"start":{"line":23,"column":0},"end":{"line":23,"column":38}}},"fnMap":{"0":{"name":"getTagClass","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":20}},"loc":{"start":{"line":5,"column":28},"end":{"line":18,"column":1}},"line":5},"1":{"name":"isConstructed","decl":{"start":{"line":20,"column":9},"end":{"line":20,"column":22}},"loc":{"start":{"line":20,"column":30},"end":{"line":22,"column":1}},"line":20}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":17,"column":5}},"type":"switch","locations":[{"start":{"line":7,"column":8},"end":{"line":8,"column":49}},{"start":{"line":9,"column":8},"end":{"line":10,"column":51}},{"start":{"line":11,"column":8},"end":{"line":12,"column":56}},{"start":{"line":13,"column":8},"end":{"line":14,"column":47}},{"start":{"line":15,"column":8},"end":{"line":16,"column":53}}],"line":6}},"s":{"0":1,"1":1,"2":1,"3":64,"4":38,"5":5,"6":21,"7":0,"8":0,"9":1,"10":64,"11":1},"f":{"0":64,"1":64},"b":{"0":[38,5,21,0,0]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/codec/ber/decoder/misc.ts","sources":["D:/formation/asn.1/src/codec/ber/decoder/misc.ts"],"names":[],"mappings":";;;AAAA,2DAAsD;AAEtD,SAAgB,WAAW,CAAC,KAAa;IACvC,QAAQ,KAAK,IAAI,CAAC,EAAE;QAClB,KAAK,CAAC;YACJ,OAAO,mBAAQ,CAAC,SAAS,CAAC;QAC5B,KAAK,CAAC;YACJ,OAAO,mBAAQ,CAAC,WAAW,CAAC;QAC9B,KAAK,CAAC;YACJ,OAAO,mBAAQ,CAAC,gBAAgB,CAAC;QACnC,KAAK,CAAC;YACJ,OAAO,mBAAQ,CAAC,OAAO,CAAC;QAC1B;YACE,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;KAC5C;AACH,CAAC;AAbD,kCAaC;AAED,SAAgB,aAAa,CAAC,KAAa;IACzC,OAAO,CAAC,KAAK,GAAG,EAAW,CAAC,GAAG,CAAC,CAAC;AACnC,CAAC;AAFD,sCAEC","sourcesContent":["import {TagClass} from '../../../interfaces/TagClass';\n\nexport function getTagClass(octet: number): TagClass {\n  switch (octet >> 6) {\n    case 0:\n      return TagClass.UNIVERSAL;\n    case 1:\n      return TagClass.APPLICATION;\n    case 2:\n      return TagClass.CONTEXT_SPECIFIC;\n    case 3:\n      return TagClass.PRIVATE;\n    default:\n      throw new Error('octet should be < 128');\n  }\n}\n\nexport function isConstructed(octet: number): boolean {\n  return (octet & 0b0010_0000) > 0;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"65927b2912b738954cadb51c41182ae93f776481","contentHash":"8871e6096d9cca7a1123c39f4bd066490d3e633616fbfe081a422605d97d7862"},"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\primitive\\ReadBitString.ts":{"path":"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\primitive\\ReadBitString.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":42}},"3":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"4":{"start":{"line":12,"column":8},"end":{"line":12,"column":75}},"5":{"start":{"line":24,"column":25},"end":{"line":24,"column":35}},"6":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"7":{"start":{"line":26,"column":8},"end":{"line":26,"column":64}},"8":{"start":{"line":28,"column":4},"end":{"line":34,"column":5}},"9":{"start":{"line":29,"column":8},"end":{"line":33,"column":9}},"10":{"start":{"line":32,"column":12},"end":{"line":32,"column":89}},"11":{"start":{"line":35,"column":16},"end":{"line":35,"column":18}},"12":{"start":{"line":36,"column":4},"end":{"line":39,"column":5}},"13":{"start":{"line":36,"column":17},"end":{"line":36,"column":18}},"14":{"start":{"line":37,"column":18},"end":{"line":37,"column":28}},"15":{"start":{"line":38,"column":8},"end":{"line":38,"column":48}},"16":{"start":{"line":41,"column":4},"end":{"line":41,"column":60}},"17":{"start":{"line":42,"column":4},"end":{"line":42,"column":46}},"18":{"start":{"line":44,"column":0},"end":{"line":44,"column":38}}},"fnMap":{"0":{"name":"readBitString","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":22}},"loc":{"start":{"line":5,"column":36},"end":{"line":43,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":13,"column":5}},{"start":{"line":11,"column":4},"end":{"line":13,"column":5}}],"line":11},"1":{"loc":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},{"start":{"line":25,"column":4},"end":{"line":27,"column":5}}],"line":25},"2":{"loc":{"start":{"line":28,"column":4},"end":{"line":34,"column":5}},"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":34,"column":5}},{"start":{"line":28,"column":4},"end":{"line":34,"column":5}}],"line":28},"3":{"loc":{"start":{"line":29,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":33,"column":9}},{"start":{"line":29,"column":8},"end":{"line":33,"column":9}}],"line":29}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":0,"8":1,"9":0,"10":0,"11":1,"12":1,"13":1,"14":4,"15":4,"16":1,"17":1,"18":1},"f":{"0":1},"b":{"0":[0,1],"1":[0,1],"2":[0,1],"3":[0,0]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/codec/ber/decoder/primitive/ReadBitString.ts","sources":["D:/formation/asn.1/src/codec/ber/decoder/primitive/ReadBitString.ts"],"names":[],"mappings":";;;AACA,2CAAiD;AAEjD,SAAgB,aAAa,CAAC,GAAmB,EAAE,MAAc;IAC/D,oCAAoC;IAEpC,oEAAoE;IACpE,8CAA8C;IAE9C,qEAAqE;IACrE,oEAAoE;IACpE,IAAI,MAAM,KAAK,CAAC,EAAE;QAChB,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;KACpE;IAED,uEAAuE;IACvE,8DAA8D;IAC9D,sEAAsE;IACtE,wEAAwE;IACxE,0EAA0E;IAC1E,gCAAgC;IAEhC,wEAAwE;IACxE,wEAAwE;IACxE,8BAA8B;IAC9B,kDAAkD;IAClD,MAAM,YAAY,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;IAChC,IAAI,YAAY,GAAG,CAAC,EAAE;QACpB,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;KACzD;IAED,IAAI,MAAM,KAAK,CAAC,EAAE;QAChB,IAAI,YAAY,KAAK,CAAC,EAAE;YACtB,uDAAuD;YACvD,yDAAyD;YACzD,MAAM,IAAI,KAAK,CACb,2DAA2D,CAC5D,CAAC;SACH;KACF;IAED,IAAI,KAAK,GAAG,EAAE,CAAC;IACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACnC,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACrB,KAAK,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;KACzC;IACD,yBAAyB;IACzB,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,YAAY,CAAC,CAAC;IAExD,OAAO,IAAA,sBAAe,EAAC,KAAK,CAAC,CAAC;AAChC,CAAC;AA/CD,sCA+CC","sourcesContent":["import {CursorDataView} from '../../../../CursorDataView';\nimport {formatBitString} from '../../../../misc';\n\nexport function readBitString(cdv: CursorDataView, length: number) {\n  // 8.6 Encoding of a bitstring value\n\n  // 8.6.1 The encoding of a bitstring value shall be either primitive\n  // or constructed at the option of the sender.\n\n  // 8.6.2 The contents octets for the primitive encoding shall contain\n  // an initial octet followed by zero, one or more subsequent octets.\n  if (length === 0) {\n    throw new Error('A bit string must have an initial octet (8.6.2)');\n  }\n\n  // 8.6.2.1 The bits in the bitstring value, commencing with the leading\n  //  bit and proceeding to the trailing bit, shall be placed in\n  //  bits 8 to 1 of the first subsequent octet, followed by bits 8 to 1\n  // of the second subsequent octet, followed by bits 8 to 1 of each octet\n  // in turn, followed by as many bits as are needed of the final subsequent\n  // octet, commencing with bit 8.\n\n  // 8.6.2.2 The initial octet shall encode, as an unsigned binary integer\n  // with bit 1 as the least significant bit, the number of unused bits in\n  // the final subsequent octet.\n  // The number shall be in the range zero to seven.\n  const initialOctet = cdv.read();\n  if (initialOctet > 7) {\n    throw new Error('initial octet cannot be more than 7.');\n  }\n\n  if (length === 1) {\n    if (initialOctet !== 0) {\n      // 8.6.2.3 If the bitstring is empty, there shall be no\n      // subsequent octets, and the initial octet shall be zero\n      throw new Error(\n        'The initial octet is zero, this bitstring should be empty'\n      );\n    }\n  }\n\n  let value = '';\n  for (let i = 0; i < length - 1; i++) {\n    const v = cdv.read();\n    value += v.toString(2).padStart(8, '0');\n  }\n  // remove the unused bit.\n  value = value.substring(0, value.length - initialOctet);\n\n  return formatBitString(value);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8e0c177cde01c7fb1dc947486c66080d2df4031a","contentHash":"1bdfe1c6de1ff2b421debadca8fe46d59959aaf1fc994c6bc1f5c21a52d0e991"},"D:\\formation\\asn.1\\src\\misc.ts":{"path":"D:\\formation\\asn.1\\src\\misc.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":128}},"2":{"start":{"line":4,"column":17},"end":{"line":7,"column":29}},"3":{"start":{"line":4,"column":26},"end":{"line":7,"column":29}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"5":{"start":{"line":9,"column":30},"end":{"line":19,"column":1}},"6":{"start":{"line":10,"column":4},"end":{"line":13,"column":5}},"7":{"start":{"line":11,"column":20},"end":{"line":11,"column":71}},"8":{"start":{"line":12,"column":8},"end":{"line":12,"column":81}},"9":{"start":{"line":14,"column":4},"end":{"line":17,"column":5}},"10":{"start":{"line":15,"column":20},"end":{"line":15,"column":74}},"11":{"start":{"line":16,"column":8},"end":{"line":16,"column":81}},"12":{"start":{"line":18,"column":4},"end":{"line":18,"column":61}},"13":{"start":{"line":20,"column":0},"end":{"line":20,"column":54}},"14":{"start":{"line":23,"column":17},"end":{"line":23,"column":32}},"15":{"start":{"line":24,"column":17},"end":{"line":24,"column":19}},"16":{"start":{"line":25,"column":4},"end":{"line":29,"column":5}},"17":{"start":{"line":25,"column":17},"end":{"line":25,"column":18}},"18":{"start":{"line":26,"column":20},"end":{"line":26,"column":45}},"19":{"start":{"line":27,"column":20},"end":{"line":27,"column":47}},"20":{"start":{"line":28,"column":8},"end":{"line":28,"column":36}},"21":{"start":{"line":30,"column":4},"end":{"line":30,"column":18}},"22":{"start":{"line":32,"column":0},"end":{"line":32,"column":42}},"23":{"start":{"line":34,"column":14},"end":{"line":34,"column":16}},"24":{"start":{"line":35,"column":4},"end":{"line":45,"column":5}},"25":{"start":{"line":36,"column":8},"end":{"line":44,"column":9}},"26":{"start":{"line":37,"column":12},"end":{"line":37,"column":54}},"27":{"start":{"line":37,"column":39},"end":{"line":37,"column":52}},"28":{"start":{"line":39,"column":13},"end":{"line":44,"column":9}},"29":{"start":{"line":40,"column":12},"end":{"line":40,"column":42}},"30":{"start":{"line":43,"column":12},"end":{"line":43,"column":30}},"31":{"start":{"line":46,"column":4},"end":{"line":46,"column":13}},"32":{"start":{"line":48,"column":0},"end":{"line":48,"column":32}},"33":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"34":{"start":{"line":51,"column":8},"end":{"line":51,"column":25}},"35":{"start":{"line":53,"column":4},"end":{"line":53,"column":15}},"36":{"start":{"line":55,"column":0},"end":{"line":55,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":18}},"loc":{"start":{"line":4,"column":26},"end":{"line":7,"column":29}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":9,"column":30},"end":{"line":9,"column":31}},"loc":{"start":{"line":9,"column":52},"end":{"line":19,"column":1}},"line":9},"2":{"name":"formatBitString","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":24}},"loc":{"start":{"line":22,"column":32},"end":{"line":31,"column":1}},"line":22},"3":{"name":"cloneAlpha","decl":{"start":{"line":33,"column":9},"end":{"line":33,"column":19}},"loc":{"start":{"line":33,"column":25},"end":{"line":47,"column":1}},"line":33},"4":{"name":"(anonymous_4)","decl":{"start":{"line":37,"column":34},"end":{"line":37,"column":35}},"loc":{"start":{"line":37,"column":39},"end":{"line":37,"column":52}},"line":37},"5":{"name":"padHexString","decl":{"start":{"line":49,"column":9},"end":{"line":49,"column":21}},"loc":{"start":{"line":49,"column":27},"end":{"line":54,"column":1}},"line":49}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":13,"column":5}},{"start":{"line":10,"column":4},"end":{"line":13,"column":5}}],"line":10},"1":{"loc":{"start":{"line":14,"column":4},"end":{"line":17,"column":5}},"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":17,"column":5}},{"start":{"line":14,"column":4},"end":{"line":17,"column":5}}],"line":14},"2":{"loc":{"start":{"line":27,"column":20},"end":{"line":27,"column":47}},"type":"cond-expr","locations":[{"start":{"line":27,"column":39},"end":{"line":27,"column":41}},{"start":{"line":27,"column":44},"end":{"line":27,"column":47}}],"line":27},"3":{"loc":{"start":{"line":27,"column":20},"end":{"line":27,"column":36}},"type":"binary-expr","locations":[{"start":{"line":27,"column":20},"end":{"line":27,"column":27}},{"start":{"line":27,"column":31},"end":{"line":27,"column":36}}],"line":27},"4":{"loc":{"start":{"line":36,"column":8},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":44,"column":9}},{"start":{"line":36,"column":8},"end":{"line":44,"column":9}}],"line":36},"5":{"loc":{"start":{"line":39,"column":13},"end":{"line":44,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":13},"end":{"line":44,"column":9}},{"start":{"line":39,"column":13},"end":{"line":44,"column":9}}],"line":39},"6":{"loc":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},{"start":{"line":50,"column":4},"end":{"line":52,"column":5}}],"line":50}},"s":{"0":1,"1":1,"2":1,"3":7,"4":1,"5":1,"6":4,"7":3,"8":3,"9":1,"10":1,"11":1,"12":0,"13":1,"14":1,"15":1,"16":1,"17":1,"18":32,"19":32,"20":32,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":13,"34":6,"35":7,"36":1},"f":{"0":7,"1":4,"2":1,"3":0,"4":0,"5":13},"b":{"0":[3,1],"1":[1,0],"2":[25,7],"3":[32,31],"4":[0,0],"5":[0,0],"6":[6,7]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/misc.ts","sources":["D:/formation/asn.1/src/misc.ts"],"names":[],"mappings":";;;AAEO,MAAM,QAAQ,GAAG,CAAC,GAAW,EAAE,EAAE,CACtC,GAAG;KACA,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;KACnB,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;KACjB,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;AAJjB,QAAA,QAAQ,YAIS;AAEvB,MAAM,qBAAqB,GAAG,CACnC,QAAgB,EAChB,MAAyB,EACZ,EAAE;IACf,IAAI,MAAM,KAAK,KAAK,EAAE;QACpB,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAA,gBAAQ,EAAC,QAAQ,CAAC,EAAE,KAAK,CAAC,CAAC;QACnD,OAAO,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;KAC1E;IACD,IAAI,MAAM,KAAK,QAAQ,EAAE;QACvB,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAA,gBAAQ,EAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC;QACtD,OAAO,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;KAC1E;IACD,MAAM,IAAI,KAAK,CAAC,8BAA8B,GAAG,MAAM,CAAC,CAAC;AAC3D,CAAC,CAAC;AAbW,QAAA,qBAAqB,yBAahC;AAEF,oCAAoC;AACpC,SAAgB,eAAe,CAAC,KAAa;IAC3C,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAC7B,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACpC,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACtC,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;QACxC,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM,CAAC;KAC7B;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AATD,0CASC;AAED,SAAgB,UAAU,CAAC,GAAU;IACnC,MAAM,CAAC,GAAU,EAAE,CAAC;IACpB,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QACzC,IAAI,GAAG,CAAC,GAAG,CAAC,YAAY,KAAK,EAAE;YAC7B,CAAC,CAAC,GAAG,CAAC,GAAI,GAAG,CAAC,GAAG,CAAa,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SACxD;aAAM,IAAI,GAAG,CAAC,GAAG,CAAC,YAAY,MAAM,EAAE;YACrC,CAAC,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,CAAU,CAAC,CAAC;SACxC;aAAM;YACL,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;SACnB;KACF;IACD,OAAO,CAAC,CAAC;AACX,CAAC;AAZD,gCAYC;AAED,SAAgB,YAAY,CAAC,GAAW;IACtC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;QAClB,OAAO,GAAG,GAAG,GAAG,CAAC;KAClB;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AALD,oCAKC","sourcesContent":["import {ASN1MessageFormat} from './interfaces/ASN1MessageFormat';\nimport {Props} from './interfaces/Props';\nexport const sanitize = (str: string) =>\n  str\n    .replace(/#.*/g, '')\n    .replace(/ /g, '')\n    .replace(/\\r?\\n|\\r/g, '');\n\nexport const getArrayBufferFromStr = (\n  inputMsg: string,\n  format: ASN1MessageFormat\n): ArrayBuffer => {\n  if (format === 'hex') {\n    const buf = Buffer.from(sanitize(inputMsg), 'hex');\n    return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n  }\n  if (format === 'base64') {\n    const buf = Buffer.from(sanitize(inputMsg), 'base64');\n    return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n  }\n  throw new Error('format not yet implemented: ' + format);\n};\n\n// 0110011001010 -> 0_1100_1100_1010\nexport function formatBitString(value: string): string {\n  const bits = value.split('');\n  let result = '';\n  for (let i = 0; i < bits.length; i++) {\n    const bit = bits[bits.length - 1 - i];\n    const sep = i === 0 || i % 4 ? '' : '_';\n    result = bit + sep + result;\n  }\n  return result;\n}\n\nexport function cloneAlpha(obj: Props): Props {\n  const x: Props = {};\n  for (const key of Object.keys(obj).sort()) {\n    if (obj[key] instanceof Array) {\n      x[key] = (obj[key] as Props[]).map(k => cloneAlpha(k));\n    } else if (obj[key] instanceof Object) {\n      x[key] = cloneAlpha(obj[key] as Props);\n    } else {\n      x[key] = obj[key];\n    }\n  }\n  return x;\n}\n\nexport function padHexString(hex: string) {\n  if (hex.length % 2) {\n    return '0' + hex;\n  }\n  return hex;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bc0ee5dd81f1df19309d1bf862af608475f7997a","contentHash":"5ea39b415ef42e580e64d25012f4fd35988aa59cff75810795cd75de7314546c"},"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\primitive\\ReadBoolean.ts":{"path":"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\primitive\\ReadBoolean.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":20}},"4":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":44}},"6":{"start":{"line":11,"column":14},"end":{"line":11,"column":24}},"7":{"start":{"line":12,"column":4},"end":{"line":12,"column":37}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}}},"fnMap":{"0":{"name":"readBoolean","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":20}},"loc":{"start":{"line":4,"column":34},"end":{"line":13,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"1":{"loc":{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":10,"column":5}},{"start":{"line":8,"column":4},"end":{"line":10,"column":5}}],"line":8},"2":{"loc":{"start":{"line":12,"column":11},"end":{"line":12,"column":36}},"type":"cond-expr","locations":[{"start":{"line":12,"column":24},"end":{"line":12,"column":29}},{"start":{"line":12,"column":32},"end":{"line":12,"column":36}}],"line":12}},"s":{"0":1,"1":1,"2":5,"3":1,"4":4,"5":0,"6":4,"7":4,"8":1},"f":{"0":5},"b":{"0":[1,4],"1":[0,4],"2":[1,3]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/codec/ber/decoder/primitive/ReadBoolean.ts","sources":["D:/formation/asn.1/src/codec/ber/decoder/primitive/ReadBoolean.ts"],"names":[],"mappings":";;;AAEA,SAAgB,WAAW,CAAC,GAAmB,EAAE,MAAc;IAC7D,IAAI,MAAM,KAAK,CAAC,EAAE;QAChB,OAAO,IAAI,CAAC;KACb;IACD,IAAI,MAAM,KAAK,CAAC,EAAE;QAChB,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;KACrC;IACD,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;IACrB,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;AACnC,CAAC;AATD,kCASC","sourcesContent":["import {CursorDataView} from '../../../../CursorDataView';\n\nexport function readBoolean(cdv: CursorDataView, length: number) {\n  if (length === 0) {\n    return null;\n  }\n  if (length !== 1) {\n    throw new Error('length must be 1');\n  }\n  const v = cdv.read();\n  return v === 0x00 ? false : true;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ac92cdddd068326af514e7b8d3b804aeb5a63cff","contentHash":"8b55f7ccac327f0c4037968270253cc1161dcc6adfded434163584ca85045ebf"},"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\primitive\\ReadIA5String.ts":{"path":"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\primitive\\ReadIA5String.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":43}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}}},"fnMap":{"0":{"name":"readIA5String","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":22}},"loc":{"start":{"line":4,"column":36},"end":{"line":6,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":4,"3":1},"f":{"0":4},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/codec/ber/decoder/primitive/ReadIA5String.ts","sources":["D:/formation/asn.1/src/codec/ber/decoder/primitive/ReadIA5String.ts"],"names":[],"mappings":";;;AAEA,SAAgB,aAAa,CAAC,GAAmB,EAAE,MAAc;IAC/D,OAAO,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACzC,CAAC;AAFD,sCAEC","sourcesContent":["import {CursorDataView} from '../../../../CursorDataView';\n\nexport function readIA5String(cdv: CursorDataView, length: number) {\n  return cdv.readString(length, 'ascii');\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a4d480c70391d486b3ff51dee4b5a97e253f7f67","contentHash":"db4111f51c20a07a84469d7360699131c2bacfd81a0c7f5145497d8dc4b5a881"},"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\primitive\\ReadInteger.ts":{"path":"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\primitive\\ReadInteger.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":20}},"4":{"start":{"line":8,"column":17},"end":{"line":8,"column":18}},"5":{"start":{"line":9,"column":4},"end":{"line":12,"column":5}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":18}},"7":{"start":{"line":10,"column":18},"end":{"line":10,"column":28}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":34}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":18}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}}},"fnMap":{"0":{"name":"readInteger","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":20}},"loc":{"start":{"line":4,"column":34},"end":{"line":14,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5}},"s":{"0":1,"1":1,"2":12,"3":1,"4":11,"5":11,"6":11,"7":11,"8":11,"9":11,"10":1},"f":{"0":12},"b":{"0":[1,11]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/codec/ber/decoder/primitive/ReadInteger.ts","sources":["D:/formation/asn.1/src/codec/ber/decoder/primitive/ReadInteger.ts"],"names":[],"mappings":";;;AAEA,SAAgB,WAAW,CAAC,GAAmB,EAAE,MAAc;IAC7D,IAAI,MAAM,KAAK,CAAC,EAAE;QAChB,OAAO,IAAI,CAAC;KACb;IACD,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC/B,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACrB,MAAM,GAAG,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC;KAC3B;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAVD,kCAUC","sourcesContent":["import {CursorDataView} from '../../../../CursorDataView';\n\nexport function readInteger(cdv: CursorDataView, length: number) {\n  if (length === 0) {\n    return null;\n  }\n  let result = 0;\n  for (let i = 0; i < length; i++) {\n    const v = cdv.read();\n    result = result * 256 + v;\n  }\n  return result;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0284ecc7bfe9464899829c9bb8e12f5700f706b2","contentHash":"43cf01f7e6bc2d5ce5dc9b0ea24be783d141edb681c861d3df09dadc038e66e0"},"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\primitive\\ReadObjectIdentifier.ts":{"path":"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\primitive\\ReadObjectIdentifier.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":10,"column":18},"end":{"line":10,"column":20}},"3":{"start":{"line":11,"column":29},"end":{"line":11,"column":30}},"4":{"start":{"line":12,"column":4},"end":{"line":31,"column":5}},"5":{"start":{"line":12,"column":17},"end":{"line":12,"column":18}},"6":{"start":{"line":13,"column":18},"end":{"line":13,"column":28}},"7":{"start":{"line":14,"column":8},"end":{"line":19,"column":9}},"8":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"9":{"start":{"line":17,"column":16},"end":{"line":17,"column":110}},"10":{"start":{"line":20,"column":22},"end":{"line":20,"column":29}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":62}},"12":{"start":{"line":26,"column":8},"end":{"line":30,"column":9}},"13":{"start":{"line":28,"column":12},"end":{"line":28,"column":43}},"14":{"start":{"line":29,"column":12},"end":{"line":29,"column":35}},"15":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"16":{"start":{"line":42,"column":8},"end":{"line":42,"column":82}},"17":{"start":{"line":44,"column":31},"end":{"line":44,"column":44}},"18":{"start":{"line":45,"column":14},"end":{"line":45,"column":37}},"19":{"start":{"line":46,"column":14},"end":{"line":46,"column":43}},"20":{"start":{"line":47,"column":4},"end":{"line":47,"column":21}},"21":{"start":{"line":48,"column":4},"end":{"line":48,"column":21}},"22":{"start":{"line":49,"column":4},"end":{"line":49,"column":27}},"23":{"start":{"line":51,"column":0},"end":{"line":51,"column":52}}},"fnMap":{"0":{"name":"readObjectIdentifier","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":29}},"loc":{"start":{"line":4,"column":43},"end":{"line":50,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":19,"column":9}},{"start":{"line":14,"column":8},"end":{"line":19,"column":9}}],"line":14},"1":{"loc":{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":18,"column":13}},{"start":{"line":16,"column":12},"end":{"line":18,"column":13}}],"line":16},"2":{"loc":{"start":{"line":26,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":30,"column":9}},{"start":{"line":26,"column":8},"end":{"line":30,"column":9}}],"line":26},"3":{"loc":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},{"start":{"line":41,"column":4},"end":{"line":43,"column":5}}],"line":41}},"s":{"0":1,"1":1,"2":2,"3":2,"4":2,"5":2,"6":18,"7":18,"8":12,"9":0,"10":18,"11":18,"12":18,"13":12,"14":12,"15":2,"16":0,"17":2,"18":2,"19":2,"20":2,"21":2,"22":2,"23":1},"f":{"0":2},"b":{"0":[12,6],"1":[0,12],"2":[12,6],"3":[0,2]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/codec/ber/decoder/primitive/ReadObjectIdentifier.ts","sources":["D:/formation/asn.1/src/codec/ber/decoder/primitive/ReadObjectIdentifier.ts"],"names":[],"mappings":";;;AAEA,SAAgB,oBAAoB,CAAC,GAAmB,EAAE,MAAc;IACtE,gFAAgF;IAEhF,yEAAyE;IAEzE,sEAAsE;IACtE,2EAA2E;IAC3E,mFAAmF;IACnF,MAAM,KAAK,GAAG,EAAc,CAAC;IAC7B,IAAI,kBAAkB,GAAG,CAAC,CAAC;IAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAC/B,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,kBAAkB,KAAK,CAAC,EAAE;YAC5B,iBAAiB;YACjB,IAAI,CAAC,KAAK,IAAI,EAAE;gBACd,MAAM,IAAI,KAAK,CACb,4EAA4E,CAC7E,CAAC;aACH;SACF;QACD,MAAM,KAAK,GAAG,CAAC,GAAG,GAAW,CAAC;QAC9B,iEAAiE;QACjE,gEAAgE;QAChE,2DAA2D;QAC3D,qBAAqB;QACrB,kBAAkB,GAAG,kBAAkB,GAAG,GAAG,GAAG,KAAK,CAAC;QACtD,IAAI,CAAC,CAAC,GAAG,GAAW,CAAC,KAAK,CAAC,EAAE;YAC3B,aAAa;YACb,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC/B,kBAAkB,GAAG,CAAC,CAAC;SACxB;KACF;IAED,mEAAmE;IACnE,oDAAoD;IACpD,yCAAyC;IAEzC,qEAAqE;IACrE,+DAA+D;IAC/D,mEAAmE;IACnE,aAAa;IACb,mHAAmH;IACnH,aAAa;IACb,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACtB,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;KAC3E;IACD,MAAM,kBAAkB,GAAG,KAAK,CAAC,KAAK,EAAY,CAAC;IACnD,MAAM,CAAC,GAAG,kBAAkB,GAAG,EAAE,CAAC;IAClC,MAAM,CAAC,GAAG,CAAC,kBAAkB,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IACxC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACjB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACjB,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzB,CAAC;AApDD,oDAoDC","sourcesContent":["import {CursorDataView} from '../../../../CursorDataView';\n\nexport function readObjectIdentifier(cdv: CursorDataView, length: number) {\n  // encoding of an ordered list of subidentifiers, concatenated together (8.19.2)\n\n  // Each subidentifier is represented as a series of (one or more) octets.\n\n  // Bit 8 of each octet indicates whether it is the last in the series:\n  // - bit 8 of the last octet is zero; bit 8 of each preceding octet is one.\n  // - Bits 7 to 1 of the octets in the series collectively encode the subidentifier.\n  const array = [] as number[];\n  let subIdentifierValue = 0;\n  for (let i = 0; i < length; i++) {\n    const v = cdv.read();\n    if (subIdentifierValue === 0) {\n      // leading octet.\n      if (v === 0x80) {\n        throw new Error(\n          'The subidentifier shall be encoded in the fewest possible octets. (8.19.2)'\n        );\n      }\n    }\n    const value = v & 0b0111_1111;\n    // Conceptually, these groups of bits are concatenated to form an\n    // unsigned binary number whose most significant bit is bit 7 of\n    // the first octet and whose least significant bit is bit 1\n    // of the last octet.\n    subIdentifierValue = subIdentifierValue * 128 + value;\n    if ((v & 0b1000_0000) === 0) {\n      // last octet\n      array.push(subIdentifierValue);\n      subIdentifierValue = 0;\n    }\n  }\n\n  // (8.19.3) The number of subidentifiers (N) shall be one less than\n  // the number of object identifier components in the\n  // object identifier value being encoded.\n\n  // (8.19.4) The numerical value of the first subidentifier is derived\n  // from the values of the first two object identifiercomponents\n  // in the object identifier value being encoded, using the formula:\n  // (X*40) + Y\n  // where X is the value of the first object identifier component and Y is the value of the second object identifier\n  // component.\n  if (array.length === 0) {\n    throw new Error('Object identifier must have at least one subidentifier');\n  }\n  const firstSubIdentifier = array.shift() as number;\n  const y = firstSubIdentifier % 40;\n  const x = (firstSubIdentifier - y) / 40;\n  array.unshift(y);\n  array.unshift(x);\n  return array.join('.');\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"1297d91edd54de75ef4ccf4c35171ba3b04844b7","contentHash":"ed92458d762c5b0ac247bbf320f6b10c0c4d9e390bd7c8ef6cb6167b78a5af8c"},"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\primitive\\ReadOctetString.ts":{"path":"D:\\formation\\asn.1\\src\\codec\\ber\\decoder\\primitive\\ReadOctetString.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":10,"column":4},"end":{"line":10,"column":41}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}}},"fnMap":{"0":{"name":"readOctetString","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":24}},"loc":{"start":{"line":4,"column":38},"end":{"line":11,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":3,"3":1},"f":{"0":3},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/codec/ber/decoder/primitive/ReadOctetString.ts","sources":["D:/formation/asn.1/src/codec/ber/decoder/primitive/ReadOctetString.ts"],"names":[],"mappings":";;;AAEA,SAAgB,eAAe,CAAC,GAAmB,EAAE,MAAc;IACjE,0EAA0E;IAC1E,2EAA2E;IAC3E,sEAAsE;IACtE,oEAAoE;IACpE,0BAA0B;IAE1B,OAAO,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACvC,CAAC;AARD,0CAQC","sourcesContent":["import {CursorDataView} from '../../../../CursorDataView';\n\nexport function readOctetString(cdv: CursorDataView, length: number) {\n  // 8.7.2 The primitive encoding contains zero, one or more contents octets\n  // equal in value to the octets in the data value, in the order they appear\n  // in the data value, and with the most significant bit of an octet of\n  // the data value, aligned with the most significant bit of an octet\n  // of the contents octets.\n\n  return cdv.readString(length, 'hex');\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"60947661ff8388d4d904f7473fc5f4b18bd207a1","contentHash":"8417fc441b24d8a06fd476ba0dc4fbf2a329638d2c6e8bdd4867b403f99447da"},"D:\\formation\\asn.1\\src\\codec\\der\\encoder\\DEREncoder.ts":{"path":"D:\\formation\\asn.1\\src\\codec\\der\\encoder\\DEREncoder.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":161}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":58}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":66}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":39}},"5":{"start":{"line":8,"column":35},"end":{"line":8,"column":66}},"6":{"start":{"line":9,"column":31},"end":{"line":9,"column":59}},"7":{"start":{"line":10,"column":30},"end":{"line":10,"column":75}},"8":{"start":{"line":11,"column":19},"end":{"line":11,"column":82}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":18}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":30}},"11":{"start":{"line":16,"column":25},"end":{"line":16,"column":52}},"12":{"start":{"line":17,"column":29},"end":{"line":17,"column":63}},"13":{"start":{"line":18,"column":20},"end":{"line":18,"column":29}},"14":{"start":{"line":19,"column":19},"end":{"line":19,"column":101}},"15":{"start":{"line":20,"column":4},"end":{"line":20,"column":18}},"16":{"start":{"line":22,"column":0},"end":{"line":22,"column":48}},"17":{"start":{"line":24,"column":4},"end":{"line":33,"column":5}},"18":{"start":{"line":26,"column":12},"end":{"line":26,"column":21}},"19":{"start":{"line":28,"column":12},"end":{"line":28,"column":22}},"20":{"start":{"line":30,"column":12},"end":{"line":30,"column":23}},"21":{"start":{"line":32,"column":12},"end":{"line":32,"column":23}},"22":{"start":{"line":35,"column":0},"end":{"line":35,"column":42}},"23":{"start":{"line":37,"column":4},"end":{"line":37,"column":34}},"24":{"start":{"line":39,"column":0},"end":{"line":39,"column":46}},"25":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"26":{"start":{"line":42,"column":8},"end":{"line":42,"column":68}},"27":{"start":{"line":44,"column":16},"end":{"line":44,"column":68}},"28":{"start":{"line":45,"column":4},"end":{"line":45,"column":73}},"29":{"start":{"line":47,"column":0},"end":{"line":47,"column":40}},"30":{"start":{"line":49,"column":4},"end":{"line":56,"column":5}},"31":{"start":{"line":50,"column":8},"end":{"line":55,"column":9}},"32":{"start":{"line":51,"column":12},"end":{"line":51,"column":24}},"33":{"start":{"line":53,"column":13},"end":{"line":55,"column":9}},"34":{"start":{"line":54,"column":12},"end":{"line":54,"column":24}},"35":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"36":{"start":{"line":58,"column":8},"end":{"line":58,"column":62}},"37":{"start":{"line":60,"column":4},"end":{"line":63,"column":5}},"38":{"start":{"line":62,"column":8},"end":{"line":62,"column":60}},"39":{"start":{"line":64,"column":4},"end":{"line":67,"column":5}},"40":{"start":{"line":65,"column":22},"end":{"line":65,"column":29}},"41":{"start":{"line":66,"column":8},"end":{"line":66,"column":57}},"42":{"start":{"line":66,"column":32},"end":{"line":66,"column":46}},"43":{"start":{"line":68,"column":4},"end":{"line":68,"column":14}},"44":{"start":{"line":70,"column":0},"end":{"line":70,"column":42}}},"fnMap":{"0":{"name":"DEREncode","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":18}},"loc":{"start":{"line":7,"column":32},"end":{"line":13,"column":1}},"line":7},"1":{"name":"getIdentifierOctet","decl":{"start":{"line":15,"column":9},"end":{"line":15,"column":27}},"loc":{"start":{"line":15,"column":31},"end":{"line":21,"column":1}},"line":15},"2":{"name":"getTagClassBits","decl":{"start":{"line":23,"column":9},"end":{"line":23,"column":24}},"loc":{"start":{"line":23,"column":35},"end":{"line":34,"column":1}},"line":23},"3":{"name":"getConstructedBit","decl":{"start":{"line":36,"column":9},"end":{"line":36,"column":26}},"loc":{"start":{"line":36,"column":42},"end":{"line":38,"column":1}},"line":36},"4":{"name":"getLengthOctet","decl":{"start":{"line":40,"column":9},"end":{"line":40,"column":23}},"loc":{"start":{"line":40,"column":39},"end":{"line":46,"column":1}},"line":40},"5":{"name":"getContentOctet","decl":{"start":{"line":48,"column":9},"end":{"line":48,"column":24}},"loc":{"start":{"line":48,"column":28},"end":{"line":69,"column":1}},"line":48},"6":{"name":"(anonymous_6)","decl":{"start":{"line":66,"column":25},"end":{"line":66,"column":26}},"loc":{"start":{"line":66,"column":32},"end":{"line":66,"column":46}},"line":66}},"branchMap":{"0":{"loc":{"start":{"line":24,"column":4},"end":{"line":33,"column":5}},"type":"switch","locations":[{"start":{"line":25,"column":8},"end":{"line":26,"column":21}},{"start":{"line":27,"column":8},"end":{"line":28,"column":22}},{"start":{"line":29,"column":8},"end":{"line":30,"column":23}},{"start":{"line":31,"column":8},"end":{"line":32,"column":23}}],"line":24},"1":{"loc":{"start":{"line":37,"column":11},"end":{"line":37,"column":33}},"type":"cond-expr","locations":[{"start":{"line":37,"column":27},"end":{"line":37,"column":29}},{"start":{"line":37,"column":32},"end":{"line":37,"column":33}}],"line":37},"2":{"loc":{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":43,"column":5}},{"start":{"line":41,"column":4},"end":{"line":43,"column":5}}],"line":41},"3":{"loc":{"start":{"line":49,"column":4},"end":{"line":56,"column":5}},"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":56,"column":5}},{"start":{"line":49,"column":4},"end":{"line":56,"column":5}}],"line":49},"4":{"loc":{"start":{"line":50,"column":8},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":50,"column":8},"end":{"line":55,"column":9}},{"start":{"line":50,"column":8},"end":{"line":55,"column":9}}],"line":50},"5":{"loc":{"start":{"line":53,"column":13},"end":{"line":55,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":13},"end":{"line":55,"column":9}},{"start":{"line":53,"column":13},"end":{"line":55,"column":9}}],"line":53},"6":{"loc":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},{"start":{"line":57,"column":4},"end":{"line":59,"column":5}}],"line":57},"7":{"loc":{"start":{"line":60,"column":4},"end":{"line":63,"column":5}},"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":63,"column":5}},{"start":{"line":60,"column":4},"end":{"line":63,"column":5}}],"line":60},"8":{"loc":{"start":{"line":60,"column":8},"end":{"line":61,"column":64}},"type":"binary-expr","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":69}},{"start":{"line":61,"column":8},"end":{"line":61,"column":64}}],"line":60},"9":{"loc":{"start":{"line":64,"column":4},"end":{"line":67,"column":5}},"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":67,"column":5}},{"start":{"line":64,"column":4},"end":{"line":67,"column":5}}],"line":64}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":6,"6":6,"7":6,"8":6,"9":6,"10":1,"11":6,"12":6,"13":6,"14":6,"15":6,"16":1,"17":6,"18":6,"19":0,"20":0,"21":0,"22":1,"23":6,"24":1,"25":6,"26":6,"27":0,"28":0,"29":1,"30":6,"31":1,"32":1,"33":0,"34":0,"35":5,"36":1,"37":4,"38":2,"39":2,"40":2,"41":2,"42":5,"43":0,"44":1},"f":{"0":6,"1":6,"2":6,"3":6,"4":6,"5":6,"6":5},"b":{"0":[6,0,0,0],"1":[2,4],"2":[6,0],"3":[1,5],"4":[1,0],"5":[0,0],"6":[1,4],"7":[2,2],"8":[4,2],"9":[2,0]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/codec/der/encoder/DEREncoder.ts","sources":["D:/formation/asn.1/src/codec/der/encoder/DEREncoder.ts"],"names":[],"mappings":"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","sourcesContent":["import {ASN1Message} from '../../../interfaces/ASN1Message';\nimport {TagClass} from '../../../interfaces/TagClass';\nimport {TagUniversal} from '../../../interfaces/TagUniversal';\nimport {padHexString} from '../../../misc';\n\nexport function DEREncode(asn1Message: ASN1Message): string {\n  const identifierOctetsHexStr = getIdentifierOctet(asn1Message);\n  const contentOctetHexStr = getContentOctet(asn1Message);\n  const lengthOctetHexStr = getLengthOctet(contentOctetHexStr.length / 2);\n  const result =\n    identifierOctetsHexStr + lengthOctetHexStr + contentOctetHexStr;\n  return result;\n}\n\nexport function getIdentifierOctet(m: ASN1Message) {\n  const tagClassBits = getTagClassBits(m.tagClass);\n  const isConstructedBit = getConstructedBit(m.isConstructed);\n  const tagCode = m.tagCode;\n  const result = padHexString(\n    (tagClassBits + isConstructedBit + tagCode).toString(16)\n  );\n  return result;\n}\n\nexport function getTagClassBits(tagClass: TagClass) {\n  switch (tagClass) {\n    case TagClass.UNIVERSAL:\n      return 0b0000_0000;\n    case TagClass.APPLICATION:\n      return 0b0100_0000;\n    case TagClass.CONTEXT_SPECIFIC:\n      return 0b1000_0000;\n    case TagClass.PRIVATE:\n      return 0b1100_0000;\n  }\n}\n\nexport function getConstructedBit(isConstructed: boolean) {\n  return isConstructed ? 0b0010_0000 : 0;\n}\n\nexport function getLengthOctet(contentLength: number) {\n  if (contentLength < 127) {\n    return padHexString(contentLength.toString(16));\n  }\n  const end = padHexString(contentLength.toString(16));\n  return padHexString((end.length / 2).toString(16)) + end;\n}\n\nexport function getContentOctet(m: ASN1Message): string {\n  if (m.tagCode === TagUniversal.BOOLEAN.code) {\n    if (m.value === true) {\n      return 'ff';\n    } else if (m.value === false) {\n      return '00';\n    }\n  }\n  if (m.tagCode === TagUniversal.INTEGER.code) {\n    return padHexString((m.value as number).toString(16));\n  }\n  if (\n    m.tagCode === TagUniversal.GENERAL_STRING.code ||\n    m.tagCode === TagUniversal.IA5STRING.code\n  ) {\n    return Buffer.from(m.value as string, 'utf8').toString('hex');\n  }\n  if (m.tagCode === TagUniversal.SEQUENCE.code) {\n    const array = m.value as ASN1Message[];\n    return array.map(msg => DEREncode(msg)).join('');\n  }\n  return '';\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6f9207436776569424c85b995b787b262c81cc3d","contentHash":"d93e4affa3d8e5c4a59f16b2294562f7855ea8241fd8c94835f3de47dd3a4a15"},"D:\\formation\\asn.1\\src\\EncodingRule.ts":{"path":"D:\\formation\\asn.1\\src\\EncodingRule.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":5,"column":0},"end":{"line":10,"column":71}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":32}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":32}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":32}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":25},"end":{"line":10,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":18},"end":{"line":10,"column":69}},"type":"binary-expr","locations":[{"start":{"line":10,"column":18},"end":{"line":10,"column":38}},{"start":{"line":10,"column":43},"end":{"line":10,"column":68}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/EncodingRule.ts","sources":["D:/formation/asn.1/src/EncodingRule.ts"],"names":[],"mappings":";;;AAAA,IAAY,YAKX;AALD,WAAY,YAAY;IACtB,2BAAW,CAAA;IACX,2BAAW,CAAA;IACX,2BAAW,CAAA;IACX,2BAAW,CAAA;AACb,CAAC,EALW,YAAY,GAAZ,oBAAY,KAAZ,oBAAY,QAKvB","sourcesContent":["export enum EncodingRule {\n  BER = 'BER',\n  CER = 'CER',\n  DER = 'DER',\n  XER = 'XER',\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a8a13197a46ae73733cf827d37243d14cd5767bd","contentHash":"b59488a022c38cbd833b8588b4ebb86dc91610eb8228472c1a84c4cfae24bfd0"},"D:\\formation\\asn.1\\src\\interfaces\\ASN1MessageFormat.ts":{"path":"D:\\formation\\asn.1\\src\\interfaces\\ASN1MessageFormat.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":5,"column":0},"end":{"line":9,"column":86}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":37}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":43}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":43}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":30},"end":{"line":9,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":23},"end":{"line":9,"column":84}},"type":"binary-expr","locations":[{"start":{"line":9,"column":23},"end":{"line":9,"column":48}},{"start":{"line":9,"column":53},"end":{"line":9,"column":83}}],"line":9}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/interfaces/ASN1MessageFormat.ts","sources":["D:/formation/asn.1/src/interfaces/ASN1MessageFormat.ts"],"names":[],"mappings":";;;AAAA,IAAY,iBAIX;AAJD,WAAY,iBAAiB;IAC3B,gCAAW,CAAA;IACX,sCAAiB,CAAA;IACjB,sCAAiB,CAAA;AACnB,CAAC,EAJW,iBAAiB,GAAjB,yBAAiB,KAAjB,yBAAiB,QAI5B","sourcesContent":["export enum ASN1MessageFormat {\n  HEX = 'hex',\n  BASE64 = 'base64',\n  BINARY = 'binary',\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"87d15077db082167f6d6f681ca52634e47566188","contentHash":"c6c2dd2e2d028f8448173d004c78b61abc9a9a937177846768db7c85c8536cec"},"D:\\formation\\asn.1\\src\\ASN1MsgUtils.ts":{"path":"D:\\formation\\asn.1\\src\\ASN1MsgUtils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"3":{"start":{"line":7,"column":12},"end":{"line":7,"column":23}},"4":{"start":{"line":9,"column":8},"end":{"line":16,"column":9}},"5":{"start":{"line":10,"column":12},"end":{"line":15,"column":13}},"6":{"start":{"line":11,"column":31},"end":{"line":11,"column":64}},"7":{"start":{"line":12,"column":16},"end":{"line":14,"column":17}},"8":{"start":{"line":13,"column":20},"end":{"line":13,"column":34}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":20}},"10":{"start":{"line":20,"column":23},"end":{"line":20,"column":25}},"11":{"start":{"line":21,"column":8},"end":{"line":24,"column":9}},"12":{"start":{"line":22,"column":12},"end":{"line":22,"column":29}},"13":{"start":{"line":23,"column":12},"end":{"line":23,"column":26}},"14":{"start":{"line":25,"column":8},"end":{"line":30,"column":9}},"15":{"start":{"line":26,"column":12},"end":{"line":29,"column":13}},"16":{"start":{"line":27,"column":34},"end":{"line":27,"column":70}},"17":{"start":{"line":28,"column":16},"end":{"line":28,"column":42}},"18":{"start":{"line":31,"column":8},"end":{"line":31,"column":22}},"19":{"start":{"line":34,"column":0},"end":{"line":34,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":34},"end":{"line":18,"column":5}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":37},"end":{"line":32,"column":5}},"line":19}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"type":"if","locations":[{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},{"start":{"line":6,"column":8},"end":{"line":8,"column":9}}],"line":6},"1":{"loc":{"start":{"line":9,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":9,"column":8},"end":{"line":16,"column":9}},{"start":{"line":9,"column":8},"end":{"line":16,"column":9}}],"line":9},"2":{"loc":{"start":{"line":12,"column":16},"end":{"line":14,"column":17}},"type":"if","locations":[{"start":{"line":12,"column":16},"end":{"line":14,"column":17}},{"start":{"line":12,"column":16},"end":{"line":14,"column":17}}],"line":12},"3":{"loc":{"start":{"line":21,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":24,"column":9}},{"start":{"line":21,"column":8},"end":{"line":24,"column":9}}],"line":21},"4":{"loc":{"start":{"line":25,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":30,"column":9}},{"start":{"line":25,"column":8},"end":{"line":30,"column":9}}],"line":25}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":40,"11":40,"12":3,"13":3,"14":37,"15":25,"16":39,"17":39,"18":37,"19":1},"f":{"0":0,"1":40},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[3,37],"4":[25,12]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/ASN1MsgUtils.ts","sources":["D:/formation/asn.1/src/ASN1MsgUtils.ts"],"names":[],"mappings":";;;AAEA,MAAa,YAAY;IACvB,MAAM,CAAC,KAAK,CACV,GAAgB,EAChB,GAAsB,EACtB,KAAa;QAEb,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,KAAK,EAAE;YACtB,OAAO,GAAG,CAAC;SACZ;QACD,IAAI,GAAG,CAAC,KAAK,YAAY,KAAK,EAAE;YAC9B,KAAK,MAAM,CAAC,IAAI,GAAG,CAAC,KAAsB,EAAE;gBAC1C,MAAM,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;gBACjD,IAAI,MAAM,KAAK,IAAI,EAAE;oBACnB,OAAO,MAAM,CAAC;iBACf;aACF;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,MAAM,CAAC,QAAQ,CACb,GAAgB,EAChB,GAAsB,EACtB,KAAa;QAEb,MAAM,MAAM,GAAkB,EAAE,CAAC;QACjC,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,KAAK,EAAE;YACtB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,MAAM,CAAC;SACf;QACD,IAAI,GAAG,CAAC,KAAK,YAAY,KAAK,EAAE;YAC9B,KAAK,MAAM,CAAC,IAAI,GAAG,CAAC,KAAsB,EAAE;gBAC1C,MAAM,SAAS,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;gBACvD,MAAM,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC;aAC3B;SACF;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAtCD,oCAsCC","sourcesContent":["import {ASN1Message} from './interfaces/ASN1Message';\n\nexport class ASN1MsgUtils {\n  static query(\n    msg: ASN1Message,\n    key: keyof ASN1Message,\n    value: string\n  ): ASN1Message | null {\n    if (msg[key] === value) {\n      return msg;\n    }\n    if (msg.value instanceof Array) {\n      for (const v of msg.value as ASN1Message[]) {\n        const result = ASN1MsgUtils.query(v, key, value);\n        if (result !== null) {\n          return result;\n        }\n      }\n    }\n    return null;\n  }\n\n  static queryAll(\n    msg: ASN1Message,\n    key: keyof ASN1Message,\n    value: string\n  ): ASN1Message[] {\n    const result: ASN1Message[] = [];\n    if (msg[key] === value) {\n      result.push(msg);\n      return result;\n    }\n    if (msg.value instanceof Array) {\n      for (const v of msg.value as ASN1Message[]) {\n        const subResult = ASN1MsgUtils.queryAll(v, key, value);\n        result.push(...subResult);\n      }\n    }\n    return result;\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4c7fec50ce36f059744f0a91c2c4c35fd4035b2a","contentHash":"24c4e9fd8f0a29878228941f3bdf07033bbf9bd988e02022f04ae8c1fa0d0d7e"},"D:\\formation\\asn.1\\src\\interfaces\\ASN1Message.ts":{"path":"D:\\formation\\asn.1\\src\\interfaces\\ASN1Message.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/interfaces/ASN1Message.ts","sources":["D:/formation/asn.1/src/interfaces/ASN1Message.ts"],"names":[],"mappings":"","sourcesContent":["import {LengthType} from './LengthType';\nimport {TagClass} from './TagClass';\n\nexport interface ASN1Message {\n  tagClass: TagClass;\n  isConstructed: boolean;\n  tagCode: number;\n  tagLabel: string;\n  lengthType?: LengthType;\n  length?: number;\n  value: ASN1Type;\n  tagName?: string;\n  tagDefinedType?: string;\n}\n\nexport type ASN1PrimitiveType = string | number | boolean | null;\n\nexport type ASN1Type = ASN1Message[] | ASN1PrimitiveType;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cc3d9abdff95662cf1b935ee31ccbdd284e583e5","contentHash":"7cc91c991a8391621094bef18199cb0e4a6d118d1a15d68cc9e41605e84d9e05"},"D:\\formation\\asn.1\\src\\node\\ASN1Node.ts":{"path":"D:\\formation\\asn.1\\src\\node\\ASN1Node.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":26}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":26}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":33}},"4":{"start":{"line":6,"column":23},"end":{"line":6,"column":49}},"5":{"start":{"line":7,"column":28},"end":{"line":7,"column":70}},"6":{"start":{"line":10,"column":24},"end":{"line":14,"column":9}},"7":{"start":{"line":15,"column":25},"end":{"line":15,"column":108}},"8":{"start":{"line":16,"column":24},"end":{"line":16,"column":70}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":52}},"10":{"start":{"line":20,"column":0},"end":{"line":20,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":4},"end":{"line":9,"column":5}},"loc":{"start":{"line":9,"column":45},"end":{"line":18,"column":5}},"line":9}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":34},"end":{"line":9,"column":43}},"type":"default-arg","locations":[{"start":{"line":9,"column":41},"end":{"line":9,"column":43}}],"line":9},"1":{"loc":{"start":{"line":15,"column":25},"end":{"line":15,"column":108}},"type":"cond-expr","locations":[{"start":{"line":15,"column":91},"end":{"line":15,"column":99}},{"start":{"line":15,"column":102},"end":{"line":15,"column":108}}],"line":15}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"8":2,"9":2,"10":1},"f":{"0":2},"b":{"0":[0],"1":[0,2]},"inputSourceMap":{"version":3,"file":"D:/formation/asn.1/src/node/ASN1Node.ts","sources":["D:/formation/asn.1/src/node/ASN1Node.ts"],"names":[],"mappings":";;;AAAA,2BAA0C;AAE1C,kCAA6B;AAC7B,kDAA6C;AAE7C,uEAAkE;AAElE,MAAa,QAAQ;IACnB,MAAM,CAAC,YAAY,CACjB,QAAkB,EAClB,OAAmC,EAAE;QAErC,MAAM,OAAO,GAAG;YACd,MAAM,EAAE,qCAAiB,CAAC,GAAG;YAC7B,YAAY,EAAE,2BAAY,CAAC,GAAG;YAC9B,GAAG,IAAI;SACa,CAAC;QAEvB,MAAM,QAAQ,GACZ,OAAO,CAAC,MAAM,KAAK,qCAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;QAClE,MAAM,OAAO,GAAG,IAAA,iBAAY,EAAC,QAAQ,EAAE,EAAC,QAAQ,EAAC,CAAC,CAAC;QACnD,OAAO,WAAI,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACvC,CAAC;CACF;AAhBD,4BAgBC","sourcesContent":["import {PathLike, readFileSync} from 'fs';\n\nimport {ASN1} from '../ASN1';\nimport {EncodingRule} from '../EncodingRule';\nimport {ASN1ParserOptions} from '../interfaces';\nimport {ASN1MessageFormat} from '../interfaces/ASN1MessageFormat';\n\nexport class ASN1Node {\n  static parseFileMsg(\n    filename: PathLike,\n    opts: Partial<ASN1ParserOptions> = {}\n  ) {\n    const options = {\n      format: ASN1MessageFormat.HEX,\n      encodingRule: EncodingRule.DER,\n      ...opts,\n    } as ASN1ParserOptions;\n\n    const encoding =\n      options.format === ASN1MessageFormat.BINARY ? 'binary' : 'utf8';\n    const content = readFileSync(filename, {encoding});\n    return ASN1.decode(content, options);\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6d66f2cbfb5cb0bdb11434e3c5147f7107946bb0","contentHash":"bfd517f1377c35e2790d8c33c4db239716aa7419e39930695c0221c051a6a071"}}