"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
// import util from 'util';
const fs_1 = require("fs");
const path_1 = require("path");
const src_1 = require("../src");
describe('Lexer Unit Test', () => {
    it('should tokenize', () => {
        const input = (0, fs_1.readFileSync)((0, path_1.resolve)(__dirname, 'data/foo-protocol.asn1'), {
            encoding: 'utf8',
        });
        // lexical analysis.
        const output = src_1.ASN1Lexer.tokenize(input);
        // syntaxic analysis. (parser)
        const parserInstance = new src_1.ASN1CstParser();
        parserInstance.input = output.tokens;
        const cstOutput = parserInstance.ModuleDefinition();
        if (parserInstance.errors.length > 0) {
            console.error(parserInstance.errors);
            throw Error('Syntax error:\n' + parserInstance.errors[0].message);
        }
        const toAstVisitorInstance = new src_1.ASN1Visitor();
        const module = toAstVisitorInstance.visit(cstOutput);
        assert_1.default.strictEqual(module.name, 'FooProtocol');
    });
});
//# sourceMappingURL=lexer.spec.js.map