import { CstNode, CstParser, TokenType } from 'chevrotain';
import { Rule } from '../interfaces/Rule';
export declare class ASN1CstParser extends CstParser {
    ModuleDefinition: Rule;
    ModuleIdentifier: () => CstNode;
    DefinitiveIdentification: () => CstNode;
    DefinitiveOID: () => CstNode;
    DefinitiveObjIdComponentList: () => CstNode;
    DefinitiveObjIdComponent: () => CstNode;
    DefinitiveNumberForm: () => CstNode;
    DefinitiveNameAndNumberForm: () => CstNode;
    TagDefault: Rule;
    ExtensionDefault: Rule;
    ModuleBody: Rule;
    Imports: Rule;
    SymbolsImported: Rule;
    SymbolsFromModuleList: Rule;
    SymbolsFromModule: Rule;
    SymbolList: Rule;
    Symbol: Rule;
    Reference: Rule;
    ParameterizedReference: Rule;
    GlobalModuleReference: Rule;
    AssignedIdentifier: Rule;
    AssignmentList: Rule;
    Assignment: Rule;
    TypeAssignment: Rule;
    ValueAssignment: Rule;
    ValueReference: Rule;
    Value: Rule;
    BuiltinValue: Rule;
    BooleanValue: Rule;
    IntegerValue: Rule;
    ObjectIdentifierValue: Rule;
    ObjIdComponentsList: Rule;
    ObjIdComponents: Rule;
    NameAndNumberForm: Rule;
    NumberForm: Rule;
    Type: Rule;
    ConstrainedType: Rule;
    ReferencedType: Rule;
    DefinedType: Rule;
    UsefulType: Rule;
    TaggedType: Rule;
    Tag: Rule;
    Class: Rule;
    ClassNumber: Rule;
    BuiltinType: Rule;
    PrefixedType: Rule;
    ChoiceType: Rule;
    AlternativeTypeLists: Rule;
    RootAlternativeTypeList: Rule;
    AlternativeTypeList: Rule;
    AlternativeType: Rule;
    Constraint: Rule;
    TypeWithConstraint: Rule;
    ConstraintSpec: Rule;
    ExceptionSpec: Rule;
    SubtypeConstraint: Rule;
    ElementSetSpecs: Rule;
    RootElementSetSpec: Rule;
    ElementSetSpec: Rule;
    Unions: Rule;
    Intersections: Rule;
    UnionMark: Rule;
    Elements: Rule;
    SubtypeElements: Rule;
    SingleValue: Rule;
    ContainedSubType: Rule;
    GeneralConstraint: Rule;
    ValueRange: Rule;
    LowerEndpoint: Rule;
    UpperEndpoint: Rule;
    LowerEndValue: Rule;
    UpperEndValue: Rule;
    BitStringType: Rule;
    BooleanType: Rule;
    OctetStringType: Rule;
    SequenceType: Rule;
    SequenceOfType: Rule;
    IntegerType: Rule;
    NamedNumberList: Rule;
    NamedNumber: Rule;
    SignedNumber: Rule;
    DefinedValue: Rule;
    ObjectIdentifierType: Rule;
    CharacterStringType: Rule;
    RestrictedCharacterStringType: Rule;
    ComponentTypeLists: Rule;
    ComponentTypeList: Rule;
    ComponentType: Rule;
    NamedType: Rule;
    SizeConstraint: Rule;
    addOrList(names: (keyof ASN1CstParser)[]): void;
    addOrTokenList(tokens: TokenType[]): void;
    constructor();
}
