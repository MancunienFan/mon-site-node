/// <reference types="node" />
import { ASN1Module } from './asn1/ASN1Module';
import { EncodingRule } from './EncodingRule';
import { ASN1ParserOptions } from './interfaces';
import { ASN1GeneratorOptions } from './interfaces/ASN1GeneratorOptions';
import { ASN1Message } from './interfaces/ASN1Message';
import { Props } from './interfaces/Props';
export declare class ASN1 {
    static decode(message: string | ArrayBuffer, opts?: Partial<ASN1ParserOptions>): ASN1Message;
    static getModuleFromStr(definition: string): ASN1Module;
    static encode(asn1Message: ASN1Message, encodingRule?: EncodingRule): Buffer;
    static generate(module: ASN1Module, type: string, data: Props, opts?: Partial<ASN1GeneratorOptions>): Buffer;
    static validate(module: ASN1Module, message: ASN1Message, type: string): ASN1Message;
}
