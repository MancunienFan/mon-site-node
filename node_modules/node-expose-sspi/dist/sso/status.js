"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getStatusInfo = void 0;
const index_1 = require("./index");
async function getStatusInfo(context) {
    try {
        const result = {
            adminPrivileges: index_1.sso.hasAdminPrivileges(),
            isOnDomain: index_1.sso.isOnDomain(),
            domain: index_1.sso.getDefaultDomain(),
        };
        if (!result.isOnDomain) {
            return result;
        }
        result.isActiveDirectoryReachable = index_1.sso.isActiveDirectoryReachable();
        if (!result.isActiveDirectoryReachable) {
            return result;
        }
        const ssoSPN = new index_1.sso.SPN();
        result.spns = await ssoSPN.getListAll();
        if (!(context === null || context === void 0 ? void 0 : context.kerberosMsg)) {
            return result;
        }
        // Get the SPN recorded in the kerberos message
        // const ClientSpn = getClientSPN(context?.kerberosMsg);
        // if (!allowedSpns.includes(spn)) {
        //   result.error = `spn (${spn}) not included in allowedSpn (${spns})`;
        // }
        return result;
    }
    catch (e) {
        const errorMsg = e instanceof Error ? e.message : e;
        return {
            error: errorMsg,
        };
    }
}
exports.getStatusInfo = getStatusInfo;
//# sourceMappingURL=status.js.map