/// <reference types="node" />
import { IncomingMessage, ServerResponse } from 'http';
import { ServerContextHandleManager } from './ServerContextHandleManager';
import { CtxtHandle } from '../..';
import { CookieToken, SSOMethod } from '../interfaces';
export declare class SCHMWithCookies extends ServerContextHandleManager {
    private sessionMap;
    getCookieToken(req: IncomingMessage, res: ServerResponse): CookieToken;
    waitForReleased(cookieToken: CookieToken): Promise<void>;
    getMethod(cookieToken: CookieToken): SSOMethod;
    setMethod(ssoMethod: SSOMethod, cookieToken: CookieToken): void;
    getHandle(cookieToken: CookieToken): CtxtHandle | undefined;
    setHandle(contextHandle: CtxtHandle, cookieToken: CookieToken): void;
    /**
     * At the end of the negotiation this method MUST be called to release the context handle.
     *
     * @abstract
     * @param {CookieToken} cookieToken
     * @memberof ServerContextHandleManager
     */
    release(cookieToken: CookieToken): void;
}
